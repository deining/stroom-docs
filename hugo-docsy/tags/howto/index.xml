<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stroom â€“ howto</title>
    <link>https://gchq.github.io/stroom-docs/hugo-docsy/tags/howto/</link>
    <description>Recent content in howto on Stroom</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://gchq.github.io/stroom-docs/hugo-docsy/tags/howto/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installapplicationhowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installapplicationhowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---installation-of-stroom-application&#34;&gt;Stroom HOWTO - Installation of Stroom Application&lt;/h1&gt;
&lt;p&gt;This HOWTO describes the installation and initial configuration of the Stroom Application.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;the user has reasonable RHEL/Centos System administration skills&lt;/li&gt;
&lt;li&gt;installation is on a fully patched minimal Centos 7.3 instance.&lt;/li&gt;
&lt;li&gt;the Stroom &lt;code&gt;stroom&lt;/code&gt; database has been created and resides on the host &lt;code&gt;stroomdb0.strmdev00.org&lt;/code&gt; listening on port 3307.&lt;/li&gt;
&lt;li&gt;the Stroom &lt;code&gt;stroom&lt;/code&gt; database user is &lt;code&gt;stroomuser&lt;/code&gt; with a password of &lt;code&gt;Stroompassword1@&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;the Stroom &lt;code&gt;statistics&lt;/code&gt; database has been created and resides on the host &lt;code&gt;stroomdb0.strmdev00.org&lt;/code&gt; listening on port 3308.&lt;/li&gt;
&lt;li&gt;the Stroom &lt;code&gt;statistics&lt;/code&gt; database user is &lt;code&gt;stroomuser&lt;/code&gt; with a password of &lt;code&gt;Stroompassword2@&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;the application user &lt;code&gt;stroomuser&lt;/code&gt; has been created&lt;/li&gt;
&lt;li&gt;the user is or has deployed the two node Stroom cluster described &lt;a href=&#34;InstallHowTo.md#storage-scenario&#34; title=&#34;HOWTO Storage Scenario&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the user has set up the Stroom processing user as described &lt;a href=&#34;InstallProcessingUserSetupHowTo.md&#34; title=&#34;Processing User Setup&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the prerequisite software has been installed&lt;/li&gt;
&lt;li&gt;when a screen capture is documented, data entry is identified by the data surrounded by &amp;lsquo;&amp;lt;&lt;strong&gt;&amp;rsquo; &amp;lsquo;&lt;/strong&gt;&amp;gt;&amp;rsquo; . This excludes enter/return presses.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;confirm-prerequisite-software-installation&#34;&gt;Confirm Prerequisite Software Installation&lt;/h2&gt;
&lt;p&gt;The following command will ensure the prerequisite software has been deployed&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel policycoreutils-python unzip zip
sudo yum -y install mariadb
or
sudo yum -y install mysql-community-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;test-database-connectivity&#34;&gt;Test Database connectivity&lt;/h2&gt;
&lt;p&gt;We need to test access to the Stroom databases on &lt;code&gt;stroomdb0.strmdev00.org&lt;/code&gt;. We do this using the client &lt;code&gt;mysql&lt;/code&gt; utility. We note that we
must enter the &lt;em&gt;stroomuser&lt;/em&gt; user&amp;rsquo;s password set up in the creation of the database earlier (&lt;code&gt;Stroompassword1@&lt;/code&gt;) when connecting to
the &lt;code&gt;stroom&lt;/code&gt; database and we must enter the &lt;em&gt;stroomstats&lt;/em&gt; user&amp;rsquo;s password (&lt;code&gt;Stroompassword2@&lt;/code&gt;) when connecting to the &lt;code&gt;statistics&lt;/code&gt; database.&lt;/p&gt;
&lt;p&gt;We first test we can connect to the &lt;code&gt;stroom&lt;/code&gt; database and then set the default database to be &lt;code&gt;stroom&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[burn@stroomp00 ~]$ mysql --user=stroomuser --host=stroomdb0.strmdev00.org --port=3307 --password
Enter password: &amp;lt;__ Stroompassword1@ __&amp;gt;
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 2
Server version: 5.5.52-MariaDB MariaDB Server

Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

MariaDB [(none)]&amp;gt; use stroom;
Database changed
MariaDB [stroom]&amp;gt; exit
Bye
[burn@stroomp00 ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the case of a MySQL Community deployment you will see&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[burn@stroomp00 ~]$ mysql --user=stroomuser --host=stroomdb0.strmdev00.org --port=3307 --password
Enter password: &amp;lt;__ Stroompassword1@ __&amp;gt;
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 9
Server version: 5.7.18 MySQL Community Server (GPL)

Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

mysql&amp;gt; use stroom;
Database changed
mysql&amp;gt; quit
Bye
[burn@stroomp00 ~]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We next test connecting to the &lt;code&gt;statistics&lt;/code&gt; database and verify we can set the default database to be &lt;code&gt;statistics&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[burn@stroomp00 ~]$ mysql --user=stroomstats --host=stroomdb0.strmdev00.org --port=3308 --password
Enter password: &amp;lt;__ Stroompassword2@ __&amp;gt;
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 2
Server version: 5.5.52-MariaDB MariaDB Server

Copyright (c) 2000, 2016, Oracle, MariaDB Corporation Ab and others.

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

MariaDB [(none)]&amp;gt; use statistics;
Database changed
MariaDB [stroom]&amp;gt; exit
Bye
[burn@stroomp00 ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the case of a MySQL Community deployment you will see&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[burn@stroomp00 ~]$ mysql --user=stroomstats --host=stroomdb0.strmdev00.org --port=3308 --password
Enter password:  &amp;lt;__ Stroompassword2@ __&amp;gt;
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 9
Server version: 5.7.18 MySQL Community Server (GPL)

Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.

Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.

Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.

mysql&amp;gt; use statistics;
Database changed
mysql&amp;gt; quit
Bye
[burn@stroomp00 ~]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If there are any errors, correct them.&lt;/p&gt;
&lt;h2 id=&#34;get-the-software&#34;&gt;Get the Software&lt;/h2&gt;
&lt;p&gt;The following will gain the identified, in this case release &lt;code&gt;5.0-beta.18&lt;/code&gt;, Stroom Application software release from github, then deploy it. You should regularly monitor the site for newer releases.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
&lt;span style=&#34;color:#033&#34;&gt;App&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;5.0-beta.18
wget https://github.com/gchq/stroom/releases/download/v&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;App&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;/stroom-app-distribution-&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;App&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;-bin.zip
unzip stroom-app-distribution-&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;App&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;-bin.zip
chmod &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; stroom-app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;configure-the-software&#34;&gt;Configure the Software&lt;/h2&gt;
&lt;p&gt;We install the application via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;stroom-app/bin/setup.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;during which one is prompted for a number of configuration settings. Use the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TEMP_DIR should be set to &#39;/stroomdata/stroom-working-p00&#39; or &#39;/stroomdata/stroom-working-p01&#39; etc depending on the node we are installing on
NODE to be the hostname (not FQDN) of your host (i.e. &#39;stroomp00&#39; or &#39;stroomp01&#39; in our multi node scenario)
RACK can be ignored, just press return
PORT_PREFIX should use the default, just press return
JDBC_CLASSNAME should use the default, just press return
JDBC_URL to &#39;jdbc:mysql://stroomdb0.strmdev00.org:3307/stroom?useUnicode=yes&amp;amp;characterEncoding=UTF-8&#39;
DB_USERNAME should be our processing user, &#39;stroomuser&#39;
DB_PASSWORD should be the one we set when creating the stroom database, that is &#39;Stroompassword1@&#39;
JPA_DIALECT should use the default, just press return
JAVA_OPTS can use the defaults, but ensure you have sufficient memory, either change or accept the default
STROOM_STATISTICS_SQL_JDBC_CLASSNAME should use the default, just press return
STROOM_STATISTICS_SQL_JDBC_URL to &#39;jdbc:mysql://stroomdb0.strmdev00.org:3308/statistics?useUnicode=yes&amp;amp;characterEncoding=UTF-8&#39;
STROOM_STATISTICS_SQL_DB_USERNAME should be our processing user, &#39;stroomstats&#39;
STROOM_STATISTICS_SQL_DB_PASSWORD should be the one we set when creating the stroom database, that is &#39;Stroompassword2@&#39;
STATS_ENGINES should use the default, just press return
CONTENT_PACK_IMPORT_ENABLED should use the default, just press return
CREATE_DEFAULT_VOLUME_ON_START should use the default, just press return
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point, the script will configure the application. There should be no errors, but review the output.
If you made an error then just re-run the script.&lt;/p&gt;
&lt;p&gt;You will note that &lt;strong&gt;TEMP_DIR&lt;/strong&gt; is the same directory we used for our &lt;strong&gt;STROOM_TMP&lt;/strong&gt; environment variable when we set up the processing user scripts.
Note that if you are deploying a single node environment, where the database is also running on your Stroom node, then the &lt;strong&gt;JDBC_URL&lt;/strong&gt; setting can be the default.&lt;/p&gt;
&lt;h2 id=&#34;start-the-application-service&#34;&gt;Start the Application service&lt;/h2&gt;
&lt;p&gt;Now we start the application. In the case of multi node Stroom deployment, we start the Stroom application on the first node in the cluster,
then &lt;strong&gt;wait&lt;/strong&gt; until it has initialised the database commenced it&amp;rsquo;s Lifecycle task. You will need to monitor the log file to see it&amp;rsquo;s
completed initialisation.&lt;/p&gt;
&lt;p&gt;So as the &lt;code&gt;stroomuser&lt;/code&gt; start the application with the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;stroom-app/bin/start.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now monitor &lt;code&gt;stroom-app/instance/logs&lt;/code&gt; for any errors. Initially you will see the log files &lt;code&gt;localhost_access_log.YYYY-MM-DD.txt&lt;/code&gt;
and &lt;code&gt;catalina.out&lt;/code&gt;. Check them for errors and correct (or post a question). The log4j warnings in &lt;code&gt;catalina.out&lt;/code&gt; can be ignored.
Eventually the log file &lt;code&gt;stroom-app/instance/logs/stroom.log&lt;/code&gt; will appear. Again check it for errors and then wait for the application to
be initialised. That is, wait for the Lifecycle service thread to start. This is indicated by the message&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INFO  [Thread-11] lifecycle.LifecycleServiceImpl (LifecycleServiceImpl.java:166) - Started Stroom Lifecycle service
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The directory &lt;code&gt;stroom-app/instance/logs/events&lt;/code&gt; will also appear with an empty file with
the nomenclature &lt;code&gt;events_YYYY-MM-DDThh:mm:ss.msecZ&lt;/code&gt;. This is the directory for storing Stroom&amp;rsquo;s application event logs. We will return to this
directory and it&amp;rsquo;s content in a later HOWTO.&lt;/p&gt;
&lt;p&gt;If you have a multi node configuration, then once the database has initialised, start the application service on all other nodes. Again with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;stroom-app/bin/start.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and then monitor the files in its &lt;code&gt;stroom-app/instance/logs&lt;/code&gt; for any errors. Note that in multi node configurations,
you will see server.UpdateClusterStateTaskHandler messages in the log file of the form&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WARN  [Stroom P2 #9 - GenericServerTask] server.UpdateClusterStateTaskHandler (UpdateClusterStateTaskHandler.java:150) - discover() - unable to contact stroomp00 - No cluster call URL has been set for node: stroomp00
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is ok as we will establish the cluster URL&amp;rsquo;s later.&lt;/p&gt;
&lt;h3 id=&#34;multi-node-firewall-provision&#34;&gt;Multi Node Firewall Provision&lt;/h3&gt;
&lt;p&gt;In the case of a multi node Stroom deployment, you will need to open certain ports to allow Tomcat to communicate to all nodes participating
in the cluster. Execute the following on all nodes. Note you will need to drop out of the &lt;code&gt;stroomuser&lt;/code&gt; shell prior to execution.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;exit; &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# To drop out of the stroomuser shell&lt;/span&gt;

sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;8080/tcp --permanent
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;9080/tcp --permanent
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;8009/tcp --permanent
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;9009/tcp --permanent
sudo firewall-cmd --reload
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --list-all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In a production environment you would improve the above firewall settings - to perhaps limit the communication to just the Stroom processing nodes.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installcertificateshowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installcertificateshowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---ssl-certificate-generation&#34;&gt;Stroom HOWTO - SSL Certificate Generation&lt;/h1&gt;
&lt;p&gt;The following is a HOWTO to assist users in setting up various SSL Certificates to support a Web interface to Stroom.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;p&gt;The following assumptions are used in this document.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the user has reasonable RHEL/Centos System administration skills&lt;/li&gt;
&lt;li&gt;installations are on Centos 7.3 minimal systems (fully patched)&lt;/li&gt;
&lt;li&gt;either a Stroom Proxy or Stroom Application has already been deployed&lt;/li&gt;
&lt;li&gt;processing node names are &amp;lsquo;stroomp00.strmdev00.org&amp;rsquo; and &amp;lsquo;stroomp01.strmdev00.org&amp;rsquo;&lt;/li&gt;
&lt;li&gt;the first node, &amp;lsquo;stroomp00.strmdev00.org&amp;rsquo; also has a CNAME &amp;lsquo;stroomp.strmdev00.org&amp;rsquo;&lt;/li&gt;
&lt;li&gt;in the scenario of a Stroom Forwarding Proxy, the node name is &amp;lsquo;stroomfp0.strmdev00.org&amp;rsquo;&lt;/li&gt;
&lt;li&gt;in the scenario of a Stroom Standalone Proxy, the node name is &amp;lsquo;stroomsap0.strmdev00.org&amp;rsquo;&lt;/li&gt;
&lt;li&gt;stroom runs as user &amp;lsquo;stroomuser&amp;rsquo;&lt;/li&gt;
&lt;li&gt;the use of self signed certificates is appropriate for test systems, but users should consider appropriate CA infrastructure in production environments&lt;/li&gt;
&lt;li&gt;in this document, when a screen capture is documented, data entry is identified by the data surrounded by &amp;lsquo;&amp;lt;&lt;strong&gt;&amp;rsquo; &amp;lsquo;&lt;/strong&gt;&amp;gt;&amp;rsquo; . This excludes enter/return presses.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;create-certificates&#34;&gt;Create certificates&lt;/h2&gt;
&lt;p&gt;The first step is to establish a self signed certificate for our Stroom service. If you have a certificate server, then certainly gain an
appropriately signed certificate. For this HOWTO, we will stay with a self signed solution and hence no certificate authorities are
involved. If you are deploying a cluster, then you will only have one certificate for all nodes. We achieve this by setting up an
alias for the first node in the cluster and then use that alias for addressing the cluster. That is, we have set up a
CNAME, &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt; for &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;. This means within the web service we deploy, the ServerName will be &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt;
on each node. Since it&amp;rsquo;s one certificate we only need to set it up on one node then deploy the certificate key files to other nodes.&lt;/p&gt;
&lt;p&gt;As the certificates will be stored in the &lt;code&gt;stroomuser&#39;s&lt;/code&gt; home directory, we become the stroom user&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;use-host-variable&#34;&gt;Use host variable&lt;/h3&gt;
&lt;p&gt;To make things simpler in the following bash extracts, we establish the bash variable &lt;code&gt;H&lt;/code&gt; to be used in filename generation. The variable name
is set to the name of the host (or cluster alias) your are deploying the certificates on. In our multi node HOWTO example we are using, we
would use the host CNAME &lt;code&gt;stroomp&lt;/code&gt;.  Thus we execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#366&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;stroomp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note in our the Stroom Forwarding Proxy HOWTO we would use the name &lt;code&gt;stroomfp0&lt;/code&gt;. In the case of our Standalone Proxy we would use &lt;code&gt;stroomsap0&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We set up a directory to house our certificates via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; ~stroomuser
rm -rf stroom-jks
mkdir -p stroom-jks stroom-jks/public stroom-jks/private
&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; stroom-jks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create a server key for Stroom service (enter a password when prompted for both initial and verification prompts)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;openssl genrsa -des3 -out private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key &lt;span style=&#34;color:#f60&#34;&gt;2048&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as per&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Generating RSA private key, 2048 bit long modulus
.................................................................+++
...............................................+++
e is 65537 (0x10001)
Enter pass phrase for private/stroomp.key: &amp;lt;__ENTER_SERVER_KEY_PASSWORD__&amp;gt;
Verifying - Enter pass phrase for private/stroomp.key: &amp;lt;__ENTER_SERVER_KEY_PASSWORD__&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create a signing request. The two important prompts are the password and Common Name. All the rest can use the defaults offered.
The requested password is for the server key and you should use the host (or cluster alias) your are deploying the certificates on for
the Common Name. In the output below we will assume a multi node cluster certificate is being generated, so will use &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;openssl req -sha256 -new -key private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key -out &lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.csr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as per&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter pass phrase for private/stroomp.key: &amp;lt;__ENTER_SERVER_KEY_PASSWORD__&amp;gt;
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &#39;.&#39;, the field will be left blank.
-----
Country Name (2 letter code) [XX]:
State or Province Name (full name) []:
Locality Name (eg, city) [Default City]:
Organization Name (eg, company) [Default Company Ltd]:
Organizational Unit Name (eg, section) []:
Common Name (eg, your name or your server&#39;s hostname) []:&amp;lt;__ stroomp.strmdev00.org __&amp;gt; 
Email Address []:

Please enter the following &#39;extra&#39; attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We now self sign the certificate (again enter the server key password)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;openssl x509 -req -sha256 -days &lt;span style=&#34;color:#f60&#34;&gt;720&lt;/span&gt; -in &lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.csr -signkey private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key -out public/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.crt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as per&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Signature ok
subject=/C=XX/L=Default City/O=Default Company Ltd/CN=stroomp.strmdev00.org
Getting Private key
Enter pass phrase for private/stroomp.key: &amp;lt;__ENTER_SERVER_KEY_PASSWORD__&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and noting the &lt;code&gt;subject&lt;/code&gt; will change depending on the host name used when generating the signing request.&lt;/p&gt;
&lt;p&gt;Create insecure version of private key for Apache autoboot (you will again need to enter the server key password)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;openssl rsa -in private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key -out private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key.insecure
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as per&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter pass phrase for private/stroomp.key: &amp;lt;__ENTER_SERVER_KEY_PASSWORD__&amp;gt;
writing RSA key
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and then move the insecure keys as appropriate&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mv private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key.secure
chmod &lt;span style=&#34;color:#f60&#34;&gt;600&lt;/span&gt; private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key.secure
mv private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key.insecure private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We have now completed the creation of our certificates and keys.&lt;/p&gt;
&lt;h3 id=&#34;replication-of-keys-directory-to-other-nodes&#34;&gt;Replication of Keys Directory to other nodes&lt;/h3&gt;
&lt;p&gt;If you are deploying a multi node Stroom cluster, then you would replicate the directory ~stroomuser/stroom-jks to each node in the cluster. That is,
tar it up, copy the tar file to the other node(s) then untar it. We can make use of the other node&amp;rsquo;s mounted file system for this process.
That is one could execute the commands on the first node, where we created the certificates&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; ~stroomuser
tar cf stroom-jks.tar stroom-jks
mv stroom-jks.tar /stroomdata/stroom-data-p01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then on the another node, say &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;, as the stroomuser we extract the data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; ~stroomuser
tar xf /stroomdata/stroom-data-p01/stroom-jks.tar &lt;span style=&#34;color:#555&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f /stroomdata/stroom-data-p01/stroom-jks.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;protection-ownership-and-selinux-context&#34;&gt;Protection, Ownership and SELinux Context&lt;/h3&gt;
&lt;p&gt;Now ensure protection, ownership and SELinux context for these key files on &lt;strong&gt;ALL&lt;/strong&gt; nodes via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chmod &lt;span style=&#34;color:#f60&#34;&gt;700&lt;/span&gt; ~stroomuser/stroom-jks/private ~stroomuser/stroom-jks
chown -R stroomuser:stroomuser ~stroomuser/stroom-jks
chcon -R --reference /etc/pki ~stroomuser/stroom-jks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;stroom-proxy-to-proxy-key-and-trust-stores&#34;&gt;Stroom Proxy to Proxy Key and Trust Stores&lt;/h2&gt;
&lt;p&gt;In order for a Stroom Forwarding Proxy to communicate to a central Stroom proxy over https, the JVM running the forwarding proxy needs
relevant keystores set up.&lt;/p&gt;
&lt;p&gt;One would set up a Stroom&amp;rsquo;s forwarding proxy SSL certificate as per &lt;a href=&#34;#create-certificates&#34;&gt;above&lt;/a&gt;, with the change that the
hostname would be different. That is, in the initial setup, we would set the hostname variable &lt;code&gt;H&lt;/code&gt; to be the hostname of the forwarding
proxy. Lets say it is &lt;code&gt;stroomfp0&lt;/code&gt; thus we would set&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#366&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;stroomfp0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and then proceed as &lt;a href=&#34;#use-host-variable&#34;&gt;above&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that you also need the public key of the central Stroom server you will be connecting to. For the following, we will assume
the central Stroom proxy is the &lt;em&gt;stroomp.strmdev00.org&lt;/em&gt; server and it&amp;rsquo;s public key is stored in the file &lt;code&gt;stroomp.crt&lt;/code&gt;. We will store
this file on the forwarding proxy in &lt;code&gt;~stroomuser/stroom-jks/public/stroomp.crt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So once you have created the forwarding proxy server&amp;rsquo;s SSL keys and have deployed the central proxy&amp;rsquo;s public key, we next
need to convert the proxy server&amp;rsquo;s SSL keys into DER format. This is done by executing the following.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; ~stroomuser/stroom-jks
&lt;span style=&#34;color:#366&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;stroomfp0
&lt;span style=&#34;color:#366&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;stroomp
rm -f &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;_k.jks &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;_t.jks
&lt;span style=&#34;color:#033&#34;&gt;H_k&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#033&#34;&gt;S_k&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# Convert public key&lt;/span&gt;
openssl x509 -in public/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.crt -inform PERM -out public/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.crt.der -outform DER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When you convert the local server&amp;rsquo;s private key, you will be prompted for the server key password.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# Convert the local server&amp;#39;s Private key&lt;/span&gt;
openssl pkcs8 -topk8 -nocrypt -in private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key.secure -inform PEM -out private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key.der -outform DER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as per&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter pass phrase for private/stroomfp0.key.secure: &amp;lt;__ENTER_SERVER_KEY_PASSWORD__&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We now import these keys into our Key Store. As part of the Stroom Proxy release, an Import Keystore application has been provisioned. We identify where it&amp;rsquo;s found with the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;find ~stroomuser/*proxy -name &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;stroom*util*.jar&amp;#39;&lt;/span&gt; -print | head -1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which should return &lt;em&gt;/home/stroomuser/stroom-proxy/lib/stroom-proxy-util-v5.1-beta.10.jar&lt;/em&gt; or similar depending on the release version.
To make execution simpler, we set this as a shell variable as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;Stroom_UTIL_JAR&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;find ~/*proxy -name &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;stroom*util*.jar&amp;#39;&lt;/span&gt; -print | head -1&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now create the keystore and import the proxy&amp;rsquo;s server key&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;java -cp &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;Stroom_UTIL_JAR&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; stroom.util.cert.ImportKey &lt;span style=&#34;color:#033&#34;&gt;keystore&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;_k.jks &lt;span style=&#34;color:#033&#34;&gt;keypass&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;alias&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;keyfile&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;private/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.key.der &lt;span style=&#34;color:#033&#34;&gt;certfile&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public/&lt;span style=&#34;color:#033&#34;&gt;$H&lt;/span&gt;.crt.der
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as per&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;One certificate, no chain
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We now import the destination server&amp;rsquo;s public key&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;keytool -import -noprompt -alias &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; -file public/&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;.crt -keystore &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;_k.jks -storepass &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as per&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Certificate was added to keystore
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We now add the key and trust store location and password arguments to our Stroom proxy environment files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;PWD&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;pwd&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;export JAVA_OPTS=\&amp;#34;-Djavax.net.ssl.trustStore=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;PWD&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;_k.jks -Djavax.net.ssl.trustStorePassword=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt; -Djavax.net.ssl.keyStore=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;PWD&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;_k.jks -Djavax.net.ssl.keyStorePassword=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;\&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/env.sh
&lt;span style=&#34;color:#366&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;JAVA_OPTS=\&amp;#34;-Djavax.net.ssl.trustStore=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;PWD&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;_k.jks -Djavax.net.ssl.trustStorePassword=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt; -Djavax.net.ssl.keyStore=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;PWD&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;_k.jks -Djavax.net.ssl.keyStorePassword=&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;H&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;\&amp;#34;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/env_service.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this point you should restart the proxy service. Using the commands&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; ~stroomuser
&lt;span style=&#34;color:#366&#34;&gt;source&lt;/span&gt; ./env.sh
stroom-proxy/bin/stop.sh
stroom-proxy/bin/start.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then check the logs to ensure it started correctly.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installdatabasehowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installdatabasehowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---database-installation&#34;&gt;Stroom HOWTO - Database Installation&lt;/h1&gt;
&lt;p&gt;This HOWTO describes the installation of the Stroom databases. Following this HOWTO will produce a simple, minimally secured database deployment. In a production environment consideration needs to be made for redundancy, better security, data-store location, increased memory usage, and the like.&lt;/p&gt;
&lt;p&gt;Stroom has two databases. The first, &lt;code&gt;stroom&lt;/code&gt;, is used for management of Stroom itself and the second, &lt;code&gt;statistics&lt;/code&gt; is used for the Stroom Statistics capability. There are many ways to deploy these two databases. One could&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;have a single database instance and serve both databases from it&lt;/li&gt;
&lt;li&gt;have two database instances on the same server and serve one database per instance&lt;/li&gt;
&lt;li&gt;have two separate nodes, each with it&amp;rsquo;s own database instance&lt;/li&gt;
&lt;li&gt;the list goes on.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this HOWTO, we describe the deployment of two database instances on the one node, each serving a single database. We provide example deployments using either the &lt;a href=&#34;https://mariadb.com&#34; title=&#34;MariaDB Site&#34;&gt;MariaDB (external link)&lt;/a&gt; or &lt;a href=&#34;https://www.mysql.com/products/community/&#34; title=&#34;MySQL Community Site&#34;&gt;MySQL Community (external link)&lt;/a&gt; versions of MySQL.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;we are installing the MariaDB or MySQL Community RDBMS software.&lt;/li&gt;
&lt;li&gt;the primary database node is &amp;lsquo;stroomdb0.strmdev00.org&amp;rsquo;.&lt;/li&gt;
&lt;li&gt;installation is on a fully patched minimal Centos 7.3 instance.&lt;/li&gt;
&lt;li&gt;we are installing BOTH databases (&lt;code&gt;stroom&lt;/code&gt; and &lt;code&gt;statistics&lt;/code&gt;) on the same node - &amp;lsquo;stroomdb0.stromdev00.org&amp;rsquo; but with two distinct database engines. The first database will communicate on port &lt;code&gt;3307&lt;/code&gt; and the second on &lt;code&gt;3308&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;we are deploying with SELinux in enforcing mode.&lt;/li&gt;
&lt;li&gt;any scripts or commands that should run are in code blocks and are designed to allow the user to cut then paste the commands onto their systems.&lt;/li&gt;
&lt;li&gt;in this document, when a textual screen capture is documented, data entry is identified by the data surrounded by &amp;lsquo;&amp;lt;&lt;strong&gt;&amp;rsquo; &amp;lsquo;&lt;/strong&gt;&amp;gt;&amp;rsquo; . This excludes enter/return presses.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation-of-software&#34;&gt;Installation of Software&lt;/h2&gt;
&lt;h3 id=&#34;mariadb-server-installation&#34;&gt;MariaDB Server Installation&lt;/h3&gt;
&lt;p&gt;As MariaDB is directly supported by Centos 7, we simply install the database server software and SELinux policy files, as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install policycoreutils-python mariadb-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mysql-community-server-installation&#34;&gt;MySQL Community Server Installation&lt;/h3&gt;
&lt;p&gt;As MySQL is not directly supported by Centos 7, we need to install it&amp;rsquo;s repository files prior to installation.
We get the current MySQL Community release repository rpm and validate it&amp;rsquo;s MD5 checksum against the published value found on the
&lt;a href=&#34;https://dev.mysql.com/downloads/repo/yum&#34; title=&#34;Download MySQL Yum Repository&#34;&gt;MySQL Yum Repository (external link)&lt;/a&gt; site.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://repo.mysql.com/mysql57-community-release-el7.rpm
md5sum mysql57-community-release-el7.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On correct validation of the MD5 checksum, we install the repository files via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y localinstall mysql57-community-release-el7.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Stroom currently does not support the latest production MySQL version - 5.7. You will need to install MySQL Version 5.6.&lt;/p&gt;
&lt;p&gt;Now since we must use MySQL Version 5.6 you will need to edit the MySQL repo file &lt;code&gt;/etc/yum.repos.d/mysql-community.repo&lt;/code&gt; to
disable the &lt;code&gt;mysql57-community&lt;/code&gt; channel and enable the &lt;code&gt;mysql56-community&lt;/code&gt; channel. We start by, backing up the repo file with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo cp /etc/yum.repos.d/mysql-community.repo /etc/yum.repos.d/mysql-community.repo.ORIG
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then edit the file to change&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
# Enable to use MySQL 5.6
[mysql56-community]
name=MySQL 5.6 Community Server
baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/7/$basearch/
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql

[mysql57-community]
name=MySQL 5.7 Community Server
baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to become&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
# Enable to use MySQL 5.6
[mysql56-community]
name=MySQL 5.6 Community Server
baseurl=http://repo.mysql.com/yum/mysql-5.6-community/el/7/$basearch/
enabled=1
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql

[mysql57-community]
name=MySQL 5.7 Community Server
baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/7/$basearch/
enabled=0
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Next we install server software and SELinux policy files, as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install policycoreutils-python mysql-community-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;preparing-the-database-deployment&#34;&gt;Preparing the Database Deployment&lt;/h2&gt;
&lt;h3 id=&#34;mariadb-variant&#34;&gt;MariaDB Variant&lt;/h3&gt;
&lt;h4 id=&#34;create-and-instantiate-both-database-instances&#34;&gt;Create and instantiate both database instances&lt;/h4&gt;
&lt;p&gt;To set up two MariaDB database instances on the one node, we will use &lt;code&gt;mysql_multi&lt;/code&gt; and systemd service templates. The &lt;code&gt;mysql_multi&lt;/code&gt; utility is a capability that manages multiple MariaDB databases on the same node and systemd service templates manage multiple services from one configuration file.  A systemd service template is unique in that it has an &lt;code&gt;@&lt;/code&gt; character before the &lt;code&gt;.service&lt;/code&gt; suffix.&lt;/p&gt;
&lt;p&gt;To use this multiple-instance capability, we need to create two data directories for each database instance and also replace the main MariaDB configuration file, &lt;code&gt;/etc/my.cnf&lt;/code&gt;, with one that includes configuration of key options for each instance. We will name our instances, &lt;code&gt;mysqld0&lt;/code&gt; and &lt;code&gt;mysqld1&lt;/code&gt;. We will also create specific log files for each instance.&lt;/p&gt;
&lt;p&gt;We will use the directories, &lt;code&gt;/var/lib/mysql-mysqld0&lt;/code&gt; and &lt;code&gt;/var/lib/mysql-mysqld1&lt;/code&gt; for the data directories and &lt;code&gt;/var/log/mariadb/mysql-mysqld0.log&lt;/code&gt; and &lt;code&gt;/var/log/mariadb/mysql-mysqld1.log&lt;/code&gt; for the log files. Note you should modify /etc/logrotate.d/mariadb to manage these log files. Note also, we need to set the appropriate SELinux file contexts on the created directories and any files.&lt;/p&gt;
&lt;p&gt;We create the data directories and log files and set their respective SELinux contexts via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir /var/lib/mysql-mysqld0
sudo chown mysql:mysql /var/lib/mysql-mysqld0
sudo semanage fcontext -a -t mysqld_db_t &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;/var/lib/mysql-mysqld0(/.*)?&amp;#34;&lt;/span&gt;
sudo restorecon -Rv /var/lib/mysql-mysqld0

sudo touch /var/log/mariadb/mysql-mysqld0.log
sudo chown mysql:mysql /var/log/mariadb/mysql-mysqld0.log
sudo chcon --reference&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/log/mariadb/mariadb.log /var/log/mariadb/mysql-mysqld0.log

sudo mkdir /var/lib/mysql-mysqld1
sudo chown mysql:mysql /var/lib/mysql-mysqld1
sudo semanage fcontext -a -t mysqld_db_t &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;/var/lib/mysql-mysqld1(/.*)?&amp;#34;&lt;/span&gt;
sudo restorecon -Rv /var/lib/mysql-mysqld1

sudo touch /var/log/mariadb/mysql-mysqld1.log
sudo chown mysql:mysql /var/log/mariadb/mysql-mysqld1.log
sudo chcon --reference&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/log/mariadb/mariadb.log /var/log/mariadb/mysql-mysqld1.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now initialise the our two database data directories via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mysql_install_db --user&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;mysql --datadir&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/lib/mysql-mysqld0
sudo mysql_install_db --user&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;mysql --datadir&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/lib/mysql-mysqld1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now replace the  MySQL configuration file to set the options for each instance. Note that we will serve &lt;code&gt;mysqld0&lt;/code&gt; and &lt;code&gt;mysqld1&lt;/code&gt; via TCP ports &lt;code&gt;3307&lt;/code&gt; and &lt;code&gt;3308&lt;/code&gt; respectively. First backup the existing configuration file with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo cp /etc/my.cnf /etc/my.cnf.ORIG
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then setup &lt;code&gt;/etc/my.cnf&lt;/code&gt; as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo bash
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/my.cnf
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[mysqld_multi]\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mysqld = /usr/bin/mysqld_safe --basedir=/usr\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[mysqld0]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;port=3307\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mysqld = /usr/bin/mysqld_safe --basedir=/usr\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;datadir=/var/lib/mysql-mysqld0/\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;socket=/var/lib/mysql-mysqld0/mysql.sock\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;pid-file=/var/run/mariadb/mysql-mysqld0.pid\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;log-error=/var/log/mariadb/mysql-mysqld0.log\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Disabling symbolic-links is recommended to prevent assorted security\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# risks\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;symbolic-links=0\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[mysqld1]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mysqld = /usr/bin/mysqld_safe --basedir=/usr\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;port=3308\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;datadir=/var/lib/mysql-mysqld1/\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;socket=/var/lib/mysql-mysqld1/mysql.sock\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;pid-file=/var/run/mariadb/mysql-mysqld1.pid\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;log-error=/var/log/mariadb/mysql-mysqld1.log\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Disabling symbolic-links is recommended to prevent assorted security risks\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;symbolic-links=0\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;exit&lt;/span&gt; &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# To exit the root shell&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We also need to associate the ports with the &lt;code&gt;mysqld_port_t&lt;/code&gt; SELinux context as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo semanage port -a -t mysqld_port_t -p tcp &lt;span style=&#34;color:#f60&#34;&gt;3307&lt;/span&gt;
sudo semanage port -a -t mysqld_port_t -p tcp &lt;span style=&#34;color:#f60&#34;&gt;3308&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We next create the systemd service template as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo bash
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/systemd/system/mysqld@.service

&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Install in /etc/systemd/system\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Enable via systemctl enable mysqld@0 or systemctl enable mysqld@1\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Unit]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Description=MySQL Multi Server for instance %%i\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;After=syslog.target\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;After=network.target\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Service]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;User=mysql\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Group=mysql\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Type=forking\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ExecStart=/usr/bin/mysqld_multi start %%i\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ExecStop=/usr/bin/mysqld_multi stop %%i\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Restart=always\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;PrivateTmp=true\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Install]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;WantedBy=multi-user.target\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;644&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
exit; &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# to exit the root shell&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We next enable and start both instances via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl &lt;span style=&#34;color:#366&#34;&gt;enable&lt;/span&gt; mysqld@0
sudo systemctl &lt;span style=&#34;color:#366&#34;&gt;enable&lt;/span&gt; mysqld@1
sudo systemctl start mysqld@0
sudo systemctl start mysqld@1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this we should have both instances running. One should check each instance&amp;rsquo;s log file for any errors.&lt;/p&gt;
&lt;h4 id=&#34;secure-each-database-instance&#34;&gt;Secure each database instance&lt;/h4&gt;
&lt;p&gt;We secure each database engine by running the &lt;code&gt;mysql_secure_installation&lt;/code&gt; script. One should accept all defaults, which means the
only entry (aside from pressing returns) is the administrator (root) database password. Make a note of the password you use. In this case
we will use &lt;code&gt;Stroom5User@&lt;/code&gt;.
The utility &lt;code&gt;mysql_secure_installation&lt;/code&gt; expects to find the Linux socket file to access the database it&amp;rsquo;s securing at &lt;code&gt;/var/lib/mysql/mysql.sock&lt;/code&gt;.
Since we have used other locations, we temporarily link the real socket file to &lt;code&gt;/var/lib/mysql/mysql.sock&lt;/code&gt; for each invocation of the
utility. Thus we execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo ln /var/lib/mysql-mysqld0/mysql.sock /var/lib/mysql/mysql.sock
sudo mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to see&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MariaDB to secure it, we&#39;ll need the current
password for the root user.  If you&#39;ve just installed MariaDB, and
you haven&#39;t set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none): 
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MariaDB
root user without the proper authorisation.

Set root password? [Y/n] 
New password: &amp;lt;__ Stroom5User@ __&amp;gt;
Re-enter new password: &amp;lt;__ Stroom5User@ __&amp;gt;
Password updated successfully!
Reloading privilege tables..
 ... Success!


By default, a MariaDB installation has an anonymous user, allowing anyone
to log into MariaDB without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] 
 ... Success!

Normally, root should only be allowed to connect from &#39;localhost&#39;.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] 
 ... Success!

By default, MariaDB comes with a database named &#39;test&#39; that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n]
 - Dropping test database...
 ... Success!
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n]
... Success!

Cleaning up...

All done!  If you&#39;ve completed all of the above steps, your MariaDB
installation should now be secure.

Thanks for using MariaDB!
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then we execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo rm /var/lib/mysql/mysql.sock
sudo ln /var/lib/mysql-mysqld1/mysql.sock /var/lib/mysql/mysql.sock
sudo mysql_secure_installation
sudo rm /var/lib/mysql/mysql.sock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and process as before (for when running mysql_secure_installation). At this both database instances should be secure.&lt;/p&gt;
&lt;h3 id=&#34;mysql-community-variant&#34;&gt;MySQL Community Variant&lt;/h3&gt;
&lt;h4 id=&#34;create-and-instantiate-both-database-instances-1&#34;&gt;Create and instantiate both database instances&lt;/h4&gt;
&lt;p&gt;To set up two MySQL database instances on the one node, we will use &lt;code&gt;mysql_multi&lt;/code&gt; and systemd service templates. The &lt;code&gt;mysql_multi&lt;/code&gt; utility is a capability that manages multiple MySQL databases on the same node and systemd service templates manage multiple services from one configuration file.  A systemd service template is unique in that it has an &lt;code&gt;@&lt;/code&gt; character before the &lt;code&gt;.service&lt;/code&gt; suffix.&lt;/p&gt;
&lt;p&gt;To use this multiple-instance capability, we need to create two data directories for each database instance and also replace the main MySQL configuration file, &lt;code&gt;/etc/my.cnf&lt;/code&gt;, with one that includes configuration of key options for each instance. We will name our instances, &lt;code&gt;mysqld0&lt;/code&gt; and &lt;code&gt;mysqld1&lt;/code&gt;. We will also create specific log files for each instance.&lt;/p&gt;
&lt;p&gt;We will use the directories, &lt;code&gt;/var/lib/mysql-mysqld0&lt;/code&gt; and &lt;code&gt;/var/lib/mysql-mysqld1&lt;/code&gt; for the data directories and &lt;code&gt;/var/log/mysql-mysqld0.log&lt;/code&gt; and &lt;code&gt;/var/log/mysql-mysqld1.log&lt;/code&gt; for the log directories. Note you should modify /etc/logrotate.d/mysql to manage these log files. Note also, we need to set the appropriate SELinux file context on the created directories and files.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir /var/lib/mysql-mysqld0
sudo chown mysql:mysql /var/lib/mysql-mysqld0
sudo semanage fcontext -a -t mysqld_db_t &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;/var/lib/mysql-mysqld0(/.*)?&amp;#34;&lt;/span&gt;
sudo restorecon -Rv /var/lib/mysql-mysqld0

sudo touch /var/log/mysql-mysqld0.log
sudo chown mysql:mysql /var/log/mysql-mysqld0.log
sudo chcon --reference&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/log/mysqld.log /var/log/mysql-mysqld0.log

sudo mkdir /var/lib/mysql-mysqld1
sudo chown mysql:mysql /var/lib/mysql-mysqld1 
sudo semanage fcontext -a -t mysqld_db_t &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;/var/lib/mysql-mysqld1(/.*)?&amp;#34;&lt;/span&gt;
sudo restorecon -Rv /var/lib/mysql-mysqld1

sudo touch /var/log/mysql-mysqld1.log
sudo chown mysql:mysql /var/log/mysql-mysqld1.log
sudo chcon --reference&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/log/mysqld.log /var/log/mysql-mysqld1.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now initialise the our two database data directories via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mysql_install_db --user&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;mysql --datadir&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/lib/mysql-mysqld0
sudo mysql_install_db --user&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;mysql --datadir&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/lib/mysql-mysqld1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Disable the default database via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl disable mysqld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We now modify the  MySQL configuration file to set the options for each instance. Note that we will serve &lt;code&gt;mysqld0&lt;/code&gt; and &lt;code&gt;mysqld1&lt;/code&gt; via TCP ports &lt;code&gt;3307&lt;/code&gt; and &lt;code&gt;3308&lt;/code&gt; respectively.  First backup the existing configuration file with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo cp /etc/my.cnf /etc/my.cnf.ORIG
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then setup &lt;code&gt;/etc/my.cnf&lt;/code&gt; as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo bash
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/my.cnf
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[mysqld_multi]\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mysqld = /usr/bin/mysqld_safe --basedir=/usr\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[mysqld0]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;port=3307\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mysqld = /usr/bin/mysqld_safe --basedir=/usr\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;datadir=/var/lib/mysql-mysqld0/\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;socket=/var/lib/mysql-mysqld0/mysql.sock\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;pid-file=/var/run/mysqld/mysql-mysqld0.pid\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;log-error=/var/log/mysql-mysqld0.log\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Disabling symbolic-links is recommended to prevent assorted security\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# risks\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;symbolic-links=0\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[mysqld1]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;mysqld = /usr/bin/mysqld_safe --basedir=/usr\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;port=3308\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;datadir=/var/lib/mysql-mysqld1/\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;socket=/var/lib/mysql-mysqld1/mysql.sock\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;pid-file=/var/run/mysqld/mysql-mysqld1.pid\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;log-error=/var/log/mysql-mysqld1.log\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Disabling symbolic-links is recommended to prevent assorted security risks\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;symbolic-links=0\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;exit&lt;/span&gt; &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# To exit the root shell&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We also need to associate the ports with the &lt;code&gt;mysqld_port_t&lt;/code&gt; SELinux context as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo semanage port -a -t mysqld_port_t -p tcp &lt;span style=&#34;color:#f60&#34;&gt;3307&lt;/span&gt;
sudo semanage port -a -t mysqld_port_t -p tcp &lt;span style=&#34;color:#f60&#34;&gt;3308&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We next create the systemd service template as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo bash
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/systemd/system/mysqld@.service

&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Install in /etc/systemd/system\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Enable via systemctl enable mysqld@0 or systemctl enable mysqld@1\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Unit]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Description=MySQL Multi Server for instance %%i\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;After=syslog.target\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;After=network.target\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Service]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;User=mysql\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Group=mysql\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Type=forking\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ExecStart=/usr/bin/mysqld_multi start %%i\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ExecStop=/usr/bin/mysqld_multi stop %%i\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Restart=always\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;PrivateTmp=true\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Install]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;WantedBy=multi-user.target\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;644&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
exit; &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# to exit the root shell&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We next enable and start both instances via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl &lt;span style=&#34;color:#366&#34;&gt;enable&lt;/span&gt; mysqld@0
sudo systemctl &lt;span style=&#34;color:#366&#34;&gt;enable&lt;/span&gt; mysqld@1
sudo systemctl start mysqld@0
sudo systemctl start mysqld@1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this we should have both instances running. One should check each instance&amp;rsquo;s log file for any errors.&lt;/p&gt;
&lt;h4 id=&#34;secure-each-database-instance-1&#34;&gt;Secure each database instance&lt;/h4&gt;
&lt;p&gt;We secure each database engine by running the &lt;code&gt;mysql_secure_installation&lt;/code&gt; script. One should accept all defaults, which means the
only entry (aside from pressing returns) is the administrator (root) database password. Make a note of the password you use. In this case
we will use &lt;code&gt;Stroom5User@&lt;/code&gt;.
The utility &lt;code&gt;mysql_secure_installation&lt;/code&gt; expects to find the Linux socket file to access the database it&amp;rsquo;s securing at &lt;code&gt;/var/lib/mysql/mysql.sock&lt;/code&gt;.
Since we have used other locations, we temporarily link the real socket file to &lt;code&gt;/var/lib/mysql/mysql.sock&lt;/code&gt; for each invocation of the
utility. Thus we execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo ln /var/lib/mysql-mysqld0/mysql.sock /var/lib/mysql/mysql.sock
sudo mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to see&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MySQL
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MySQL to secure it, we&#39;ll need the current
password for the root user.  If you&#39;ve just installed MySQL, and
you haven&#39;t set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none): 
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MySQL
root user without the proper authorisation.

Set root password? [Y/n] y
New password: &amp;lt;__ Stroom5User@ __&amp;gt;
Re-enter new password: &amp;lt;__ Stroom5User@ __&amp;gt;
Password updated successfully!
Reloading privilege tables..
 ... Success!


By default, a MySQL installation has an anonymous user, allowing anyone
to log into MySQL without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n] 
 ... Success!

Normally, root should only be allowed to connect from &#39;localhost&#39;.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] 
 ... Success!

By default, MySQL comes with a database named &#39;test&#39; that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n] 
 - Dropping test database...
ERROR 1008 (HY000) at line 1: Can&#39;t drop database &#39;test&#39;; database doesn&#39;t exist
 ... Failed!  Not critical, keep moving...
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n] 
 ... Success!




All done!  If you&#39;ve completed all of the above steps, your MySQL
installation should now be secure.

Thanks for using MySQL!


Cleaning up...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then we execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo rm /var/lib/mysql/mysql.sock
sudo ln /var/lib/mysql-mysqld1/mysql.sock /var/lib/mysql/mysql.sock
sudo mysql_secure_installation
sudo rm /var/lib/mysql/mysql.sock
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and process as before (for when running mysql_secure_installation). At this both database instances should be secure.&lt;/p&gt;
&lt;h2 id=&#34;create-the-databases-and-enable-access-by-the-stroom-processing-users&#34;&gt;Create the Databases and Enable access by the Stroom processing users&lt;/h2&gt;
&lt;p&gt;We now create the &lt;code&gt;stroom&lt;/code&gt; database within the first instance, &lt;code&gt;mysqld0&lt;/code&gt; and the &lt;code&gt;statistics&lt;/code&gt; database within the second
instance &lt;code&gt;mysqld1&lt;/code&gt;. It does not matter which database variant used as all commands are the same for both.&lt;/p&gt;
&lt;p&gt;As well as creating the databases, we also need to establish the Stroom processing users
that the Stroom processing nodes will use to access each database.
For the &lt;code&gt;stroom&lt;/code&gt; database, we will use the database user &lt;code&gt;stroomuser&lt;/code&gt; with a password of &lt;code&gt;Stroompassword1@&lt;/code&gt; and for the &lt;code&gt;statistics&lt;/code&gt; database, we will use the database user &lt;code&gt;stroomstats&lt;/code&gt; with a password of &lt;code&gt;Stroompassword2@&lt;/code&gt;. One identifies a processing user as &lt;code&gt;&amp;lt;user&amp;gt;@&amp;lt;host&amp;gt;&lt;/code&gt; on a &lt;code&gt;grant&lt;/code&gt; SQL command.&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;stroom&lt;/code&gt; database instance, we will grant access for&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;stroomuser@localhost for local access for maintenance etc.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:stroomuser@stroomp00.strmdev00.org&#34;&gt;stroomuser@stroomp00.strmdev00.org&lt;/a&gt; for access by processing node stroomp00.strmdev00.org&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:stroomuser@stroomp01.strmdev00.org&#34;&gt;stroomuser@stroomp01.strmdev00.org&lt;/a&gt; for access by processing node stroomp01.strmdev00.org&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and in the &lt;code&gt;statistics&lt;/code&gt; database instance, we will grant access for&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;stroomstats@localhost for local access for maintenance etc.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:stroomstats@stroomp00.strmdev00.org&#34;&gt;stroomstats@stroomp00.strmdev00.org&lt;/a&gt; for access by processing node stroomp00.strmdev00.org&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;mailto:stroomstats@stroomp01.strmdev00.org&#34;&gt;stroomstats@stroomp01.strmdev00.org&lt;/a&gt; for access by processing node stroomp01.strmdev00.org&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thus for the &lt;code&gt;stroom&lt;/code&gt; database we execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql --user&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;root --port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;3307&lt;/span&gt; --socket&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/lib/mysql-mysqld0/mysql.sock --password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and on entering the administrator&amp;rsquo;s password, we arrive at the &lt;code&gt;MariaDB [(none)]&amp;gt;&lt;/code&gt; or &lt;code&gt;mysql&amp;gt;&lt;/code&gt; prompt. At this we create the database with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;database&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroom;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and then to establish the users, we execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;grant&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;privileges&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;on&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroom.&lt;span style=&#34;color:#555&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomuser&lt;span style=&#34;color:#555&#34;&gt;@&lt;/span&gt;localhost&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;identified&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Stroompassword1@&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;grant&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;privileges&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;on&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroom.&lt;span style=&#34;color:#555&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomuser&lt;span style=&#34;color:#555&#34;&gt;@&lt;/span&gt;stroomp00.strmdev00.org&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;identified&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Stroompassword1@&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;grant&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;privileges&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;on&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroom.&lt;span style=&#34;color:#555&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomuser&lt;span style=&#34;color:#555&#34;&gt;@&lt;/span&gt;stroomp01.strmdev00.org&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;identified&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Stroompassword1@&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;quit;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to exit.&lt;/p&gt;
&lt;p&gt;And for the &lt;code&gt;statistics&lt;/code&gt; database&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql --user&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;root --port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;3308&lt;/span&gt; --socket&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/lib/mysql-mysqld1/mysql.sock --password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;database&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;statistics&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and then to establish the users, we execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;grant&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;privileges&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;on&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;statistics&lt;/span&gt;.&lt;span style=&#34;color:#555&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomstats&lt;span style=&#34;color:#555&#34;&gt;@&lt;/span&gt;localhost&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;identified&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Stroompassword2@&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;grant&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;privileges&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;on&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;statistics&lt;/span&gt;.&lt;span style=&#34;color:#555&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomstats&lt;span style=&#34;color:#555&#34;&gt;@&lt;/span&gt;stroomp00.strmdev00.org&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;identified&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Stroompassword2@&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;grant&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;privileges&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;on&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;statistics&lt;/span&gt;.&lt;span style=&#34;color:#555&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomstats&lt;span style=&#34;color:#555&#34;&gt;@&lt;/span&gt;stroomp01.strmdev00.org&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;identified&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;by&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Stroompassword2@&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;quit;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to exit.&lt;/p&gt;
&lt;p&gt;Clearly if we need to add more processing nodes, additional &lt;code&gt;grant&lt;/code&gt; commands would be used. Further, if we were installing the databases in a single node Stroom environment, we would just have the first two pairs of &lt;code&gt;grants&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;configure-firewall&#34;&gt;Configure Firewall&lt;/h2&gt;
&lt;p&gt;Next we need to modify our firewall to allow remote access to our databases which listens on ports 3307 and 3308.
The simplest way to achieve this is with the commands&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;3307/tcp --permanent
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;3308/tcp --permanent
sudo firewall-cmd --reload
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --list-all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; that this allows ANY node to connect to your databases. You should give consideration to restricting this to only allowing processing node access.&lt;/p&gt;
&lt;h3 id=&#34;debugging-of-mariadb-for-stroom&#34;&gt;Debugging of Mariadb for Stroom&lt;/h3&gt;
&lt;p&gt;If there is a need to debug the Mariadb database and Stroom interaction, one can turn on auditing for the Mariadb service.
To do so, log onto the relevant database as the administrative user as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mysql --user&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;root --port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;3307&lt;/span&gt; --socket&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/lib/mysql-mysqld0/mysql.sock --password
or
mysql --user&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;root --port&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;3308&lt;/span&gt; --socket&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/lib/mysql-mysqld1/mysql.sock --password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and at the &lt;code&gt;MariaDB [(none)]&amp;gt; &lt;/code&gt; prompt enter&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;install plugin server_audit SONAME &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;server_audit&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#366&#34;&gt;set&lt;/span&gt; global &lt;span style=&#34;color:#033&#34;&gt;server_audit_file_path&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;/var/log/mariadb/mysqld-mysqld0_server_audit.log&amp;#39;&lt;/span&gt;;
or
&lt;span style=&#34;color:#366&#34;&gt;set&lt;/span&gt; global &lt;span style=&#34;color:#033&#34;&gt;server_audit_file_path&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;/var/log/mariadb/mysqld-mysqld1_server_audit.log&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#366&#34;&gt;set&lt;/span&gt; global &lt;span style=&#34;color:#033&#34;&gt;server_audit_logging&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;ON;
&lt;span style=&#34;color:#366&#34;&gt;set&lt;/span&gt; global &lt;span style=&#34;color:#033&#34;&gt;server_audit_file_rotate_size&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;10485760;
install plugin SQL_ERROR_LOG soname &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;sql_errlog&amp;#39;&lt;/span&gt;;
quit;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above will generate two log files,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/var/log/mariadb/mysqld-mysqld0_server_audit.log&lt;/code&gt; or &lt;code&gt;/var/log/mariadb/mysqld-mysqld1_server_audit.log&lt;/code&gt; which records all commands the respective databases run. We have configured the log file will rotate at 10MB in size.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/var/lib/mysql-mysqld0/sql_errors.log&lt;/code&gt; or &lt;code&gt;/var/lib/mysql-mysqld1/sql_errors.log&lt;/code&gt; which records all erroneous SQL commands. This log file will rotate at 10MB in size. Note we cannot set this filename via the UI, but it will be appear in the data directory.
All files will, by default, generate up to 9 rotated files.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you wish to rotate a log file manually, log into the database as the administrative user and execute either&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;set global server_audit_file_rotate_now=1;&lt;/code&gt; to rotate the audit log file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;set global sql_error_log_rotate=1;&lt;/code&gt; to rotate the sql_errlog log file&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;initial-database-access&#34;&gt;Initial Database Access&lt;/h3&gt;
&lt;p&gt;It should be noted that if you monitor the sql_errors.log log file on a new Stooom deployment, when the Stoom Application first starts, it&amp;rsquo;s initial access to the &lt;code&gt;stroom&lt;/code&gt; database will result in the following attempted sql statements.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f60&#34;&gt;2017&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;24&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomuser[stroomuser]&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomp00.strmdev00.org&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;[&lt;span style=&#34;color:#f60&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;126&lt;/span&gt;]&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;ERROR&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1146&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;Table&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;stroom.schema_version&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;doesn&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;t exist : SELECT version FROM schema_version ORDER BY installed_rank DESC
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;2017-04-16 16:24:50 stroomuser[stroomuser] @ stroomp00.strmdev00.org [192.168.2.126] ERROR 1146: Table &amp;#39;&lt;/span&gt;stroom.STROOM_VER&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39; doesn&amp;#39;&lt;/span&gt;t&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;exist&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;VER_MAJ,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;VER_MIN,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;VER_PAT&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;STROOM_VER&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;VER_MAJ&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;DESC&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;VER_MIN&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;DESC&lt;/span&gt;,&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;VER_PAT&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;DESC&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;2017&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;24&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomuser[stroomuser]&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomp00.strmdev00.org&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;[&lt;span style=&#34;color:#f60&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;126&lt;/span&gt;]&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;ERROR&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1146&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;Table&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;stroom.FD&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;doesn&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;t exist : SELECT ID FROM FD LIMIT 1
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;2017-04-16 16:24:50 stroomuser[stroomuser] @ stroomp00.strmdev00.org [192.168.2.126] ERROR 1146: Table &amp;#39;&lt;/span&gt;stroom.FEED&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39; doesn&amp;#39;&lt;/span&gt;t&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;exist&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;ID&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;FEED&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;LIMIT&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After this access the application will realise the database does not exist and it will initialise the database.&lt;/p&gt;
&lt;p&gt;In the case of the &lt;code&gt;statistics&lt;/code&gt; database you may note the following attempted access&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f60&#34;&gt;2017&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;04&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;25&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;09&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomstats[stroomstats]&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;stroomp00.strmdev00.org&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;[&lt;span style=&#34;color:#f60&#34;&gt;192&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;168&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;.&lt;span style=&#34;color:#f60&#34;&gt;126&lt;/span&gt;]&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;ERROR&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;1146&lt;/span&gt;:&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;Table&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;statistics.schema_version&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#bbb&#34;&gt; &lt;/span&gt;doesn&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;t exist : SELECT version FROM schema_version ORDER BY installed_rank DESC 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Again, at this point the application will initialise this database.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installhowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installhowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---installation&#34;&gt;Stroom HOWTO - Installation&lt;/h1&gt;
&lt;p&gt;This HOWTO is provided to assist users in setting up a number of different Stroom environments based on Centos 7.3 infrastructure.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;p&gt;The following assumptions are used in this document.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the user has reasonable RHEL/Centos System administration skills.&lt;/li&gt;
&lt;li&gt;installations are on Centos 7.3 minimal systems (fully patched).&lt;/li&gt;
&lt;li&gt;the term &amp;lsquo;node&amp;rsquo; is used to reference the &amp;lsquo;host&amp;rsquo; a service is running on.&lt;/li&gt;
&lt;li&gt;the Stroom Proxy and Application software runs as user &amp;lsquo;stroomuser&amp;rsquo; and will be deployed in this user&amp;rsquo;s home directory&lt;/li&gt;
&lt;li&gt;data will reside in a directory tree referenced via &amp;lsquo;/stroomdata&amp;rsquo;. It is up to the user to provision a filesystem here, noting sub-directories of it will be NFS shared in Multi Node Stroom Deployments&lt;/li&gt;
&lt;li&gt;any scripts or commands that should run are in code blocks and are designed to allow the user to cut then paste the commands onto their systems&lt;/li&gt;
&lt;li&gt;in this document, when a textual screen capture is documented, data entry is identified by the data surrounded by &amp;lsquo;&amp;lt;&lt;strong&gt;&amp;rsquo; &amp;lsquo;&lt;/strong&gt;&amp;gt;&amp;rsquo; . This excludes enter/return presses.&lt;/li&gt;
&lt;li&gt;better security of password choices, networking, firewalls, data stores, etc. can and should be achieved in various ways, but these HOWTOs are just a quick means of getting a working system, so only limited security is applied&lt;/li&gt;
&lt;li&gt;better configuration of the database (e.g. more memory. redundancy) should be considered in production environments&lt;/li&gt;
&lt;li&gt;the use of self signed certificates is appropriate for test systems, but users should consider appropriate CA infrastructure in production environments&lt;/li&gt;
&lt;li&gt;the user has access to a &lt;a href=&#34;https://www.google.com/chrome&#34; title=&#34;Google Chrome Web Browser&#34;&gt;Chrome (external link)&lt;/a&gt; web browser as Stroom is optimised for this browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;This HOWTO provides guidance on a variety of simple Stroom deployments.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#multi-node-stroom-cluster-proxy-and-application-deployment&#34;&gt;&lt;strong&gt;Multi Node Stroom Cluster (Proxy and Application)&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;for an environment where multiple nodes are required to handle the processing load.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#forwarding-stroom-proxy-deployment&#34;&gt;&lt;strong&gt;Forwarding Stroom Proxy&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;for extensive networks where one wants to aggregate data through a proxy before sending data to the central Stroom processing systems.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#standalone-stroom-proxy-deployment&#34;&gt;&lt;strong&gt;Standalone Stroom Proxy&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;for disconnected networks where collected data can be manually transferred to a Stroom processing service.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#addition-of-a-node-to-a-stroom-cluster-deployment&#34;&gt;&lt;strong&gt;Addition of a Node to Stroom Cluster&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;for when one needs to add an additional node to an existing cluster.&lt;/p&gt;
&lt;h2 id=&#34;nodename-nomenclature&#34;&gt;Nodename Nomenclature&lt;/h2&gt;
&lt;p&gt;For simplicity sake, the nodenames used in this HOWTO are geared towards the Multi Node Stroom Cluster deployment. That is,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the database nodename is &lt;code&gt;stroomdb0.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the processing nodenames are &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;, &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;, and &lt;code&gt;stroomp02.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the first node in our cluster, &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;, also has the CNAME &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the case of the Proxy only deployments,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the forwarding Stroom proxy nodename is &lt;code&gt;stoomfp0.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the standalone nodename will be &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;storage&#34;&gt;Storage&lt;/h2&gt;
&lt;p&gt;Both the Stroom Proxy and Application store data. The typical requirement is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;directory for Stroom proxy to store &lt;strong&gt;inbound data&lt;/strong&gt; files&lt;/li&gt;
&lt;li&gt;directory for Stroom application &lt;strong&gt;permanent data&lt;/strong&gt; files (events, etc.)&lt;/li&gt;
&lt;li&gt;directory for Stroom application &lt;strong&gt;index data&lt;/strong&gt; files&lt;/li&gt;
&lt;li&gt;directory for Stroom application &lt;strong&gt;working files&lt;/strong&gt; (temporary files, output, etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Where multiple processing nodes are involved, the application&amp;rsquo;s &lt;strong&gt;permanent data&lt;/strong&gt; directories need to be accessible by all participating nodes.&lt;/p&gt;
&lt;p&gt;Thus a hierarchy for a Stroom Proxy might by&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/stroomdata/stroom-proxy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and for an Application node&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/stroomdata/stroom-data&lt;/li&gt;
&lt;li&gt;/stroomdata/stroom-index&lt;/li&gt;
&lt;li&gt;/stroomdata/stroom-working&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the following examples, the storage hierarchy proposed will more suited for a multi node Stroom cluster, including the Forwarding or
Standalone proxy deployments. This is to simplify the documentation. Thus, the above structure is generalised into&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/stroomdata/stroom-working-p_nn_/proxy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/stroomdata/stroom-data-p_nn_&lt;/li&gt;
&lt;li&gt;/stroomdata/stroom-index-p_nn_&lt;/li&gt;
&lt;li&gt;/stroomdata/stroom-working-p_nn_&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;where &lt;em&gt;nn&lt;/em&gt; is a two digit node number. The reason for placing the proxy directory within the &lt;em&gt;Application&lt;/em&gt; working area
will be explained later.&lt;/p&gt;
&lt;p&gt;All data should be owned by the Stroom processing user. In this HOWTO, we will use &lt;code&gt;stroomuser&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;multi-node-stroom-cluster-proxy-and-application-deployment&#34;&gt;Multi Node Stroom Cluster (Proxy and Application) Deployment&lt;/h1&gt;
&lt;p&gt;In this deployment we will install the database on a given node then deploy both the Stroom Proxy and Stroom Application software
to both our processing nodes. At this point we will then integrate a web service to run &amp;lsquo;in-front&amp;rsquo; of our Stroom software and
then perform the initial configuration of Stroom via the user interface.&lt;/p&gt;
&lt;h2 id=&#34;database-installation&#34;&gt;Database Installation&lt;/h2&gt;
&lt;p&gt;The Stroom capability requires access to two MySQL/MariaDB databases. The first is for persisting application configuration and metadata information, and the second is for the Stroom Statistics capability.
Instructions for installation of the Stroom databases can be found &lt;a href=&#34;InstallDatabaseHowTo.md&#34; title=&#34;Database Installation&#34;&gt;here&lt;/a&gt;.
Although these instructions describe the deployment of the databases to their own node, there is no reason why one can&amp;rsquo;t
just install them both on the first (or only) Stroom node.&lt;/p&gt;
&lt;h2 id=&#34;prerequisite-software-installation&#34;&gt;Prerequisite Software Installation&lt;/h2&gt;
&lt;p&gt;Certain software packages are required for either the Stroom Proxy or Stroom Application to run.&lt;/p&gt;
&lt;p&gt;The core software list is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;java-1.8.0-openjdk&lt;/li&gt;
&lt;li&gt;java-1.8.0-openjdk-devel&lt;/li&gt;
&lt;li&gt;policycoreutils-python&lt;/li&gt;
&lt;li&gt;unzip&lt;/li&gt;
&lt;li&gt;zip&lt;/li&gt;
&lt;li&gt;mariadb or mysql client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the required software are packages available via standard repositories and hence we can simply execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel policycoreutils-python unzip zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One has a choice of database clients. MariaDB is directly supported by Centos 7 and is simplest to install. This is done via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install mariadb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One could deploy the MySQL database software as the alternative.&lt;/p&gt;
&lt;p&gt;&lt;a name=&#34;mysqlclientinstall&#34;&gt;&lt;/a&gt;To do this you need to install the MySQL Community repository files then install the client.
Instructions for installation of the MySQL Community repository files can be
found &lt;a href=&#34;InstallDatabaseHowTo.md#mysql-community-server-installation&#34; title=&#34;MySQL Community Repository Installation&#34;&gt;here&lt;/a&gt; or on
the &lt;a href=&#34;https://dev.mysql.com/downloads/repo/yum&#34; title=&#34;Download MySQL Yum Repository&#34;&gt;MySQL Site (external link)&lt;/a&gt;.
Once you have installed the MySQL repository files, install the client via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install mysql-community-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that additional software will be required for other integration components (e.g. Apache httpd/mod_jk). This is
described in the &lt;a href=&#34;#web-service-integration&#34; title=&#34;Web Service Integration&#34;&gt;Web Service Integration&lt;/a&gt; section of this document.&lt;/p&gt;
&lt;p&gt;Note also, that Standalone or Forwarding Stroom Proxy deployments do &lt;strong&gt;NOT&lt;/strong&gt; need a database client deployed.&lt;/p&gt;
&lt;h3 id=&#34;entropy-issues-in-virtual-environments&#34;&gt;Entropy Issues in Virtual environments&lt;/h3&gt;
&lt;p&gt;Both the Stroom Application and Stroom Proxy currently run on Tomcat (Version 7) which relies on the Java SecureRandom class to provide
random values for any generated session identifiers as well as other components. In some circumstances the Java runtime can be delayed if the entropy source that is
used to initialise SecureRandom is short of entropy. The delay is caused by the Java runtime waiting on the blocking entropy souce
/dev/random to have sufficient entropy. This quite often occurs in virtual environments were there are few sources that can contribute to
a system&amp;rsquo;s entropy.&lt;/p&gt;
&lt;p&gt;To view the current available entropy on a Linux system, run the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat /proc/sys/kernel/random/entropy_avail
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A reasonable value would be over 2000 and a poor value would be below a few hundred.&lt;/p&gt;
&lt;p&gt;If you are deploying Stroom onto systems with low available entropy, the start time for the Stroom Proxy can be as high as 5 minutes and for
the Application as high as 15 minutes.&lt;/p&gt;
&lt;p&gt;One software based solution would be to install the &lt;a href=&#34;http://www.issihosts.com/haveged&#34; title=&#34;Haveged Web Site&#34;&gt;haveged (external link)&lt;/a&gt; service that attempts to provide an easy-to-use, unpredictable random number generator based upon an adaptation of the HAVEGE algorithm.
To install execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yum -y install haveged
systemctl &lt;span style=&#34;color:#366&#34;&gt;enable&lt;/span&gt; haveged
systemctl start haveged
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For background reading in this matter, see &lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-setup-additional-entropy-for-cloud-servers-using-haveged&#34; title=&#34;Haveged Entropy Service&#34;&gt;this reference (external link)&lt;/a&gt; or &lt;a href=&#34;https://cwiki.apache.org/confluence/display/TOMCAT/HowTo+FasterStartUp&#34; title=&#34;How do I make Tomcat startup faster?&#34;&gt;this reference (external link)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;storage-scenario&#34;&gt;Storage Scenario&lt;/h2&gt;
&lt;p&gt;For the purpose of this Installation HOWTO, the following sets up the storage hierarchy for a two node processing
cluster. To share our &lt;strong&gt;permanent data&lt;/strong&gt; we will use NFS. Accept that the NFS deployment described here is very simple, and
in a production deployment, a &lt;em&gt;lot&lt;/em&gt; more security controls should be used. Further,&lt;/p&gt;
&lt;p&gt;Our hierarchy is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p00&lt;/code&gt;	- location to store Stroom application data files (events, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-index-p00&lt;/code&gt;	- location to store Stroom application index files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p00&lt;/code&gt;	- location to store Stroom application working files (e.g. temporary files, output, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p00/proxy&lt;/code&gt;	- location for Stroom proxy to store inbound data files&lt;/li&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p01&lt;/code&gt;	- location to store Stroom application data files (events, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-index-p01&lt;/code&gt;	- location to store Stroom application index files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p01&lt;/code&gt;	- location to store Stroom application working files (e.g. temporary files, output, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p01/proxy&lt;/code&gt;	- location for Stroom proxy to store inbound data files&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;creation-of-storage-hierarchy&#34;&gt;Creation of Storage Hierarchy&lt;/h4&gt;
&lt;p&gt;So, we first create processing user on all nodes as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo useradd --system stroomuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the relevant commands to create the above hierarchy would be&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /stroomdata/stroom-data-p00 /stroomdata/stroom-index-p00 /stroomdata/stroom-working-p00 /stroomdata/stroom-working-p00/proxy
sudo mkdir -p /stroomdata/stroom-data-p01  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# So that this node can mount stroomp01&amp;#39;s data directory&lt;/span&gt;
sudo chown -R stroomuser:stroomuser /stroomdata
sudo chmod -R &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; /stroomdata
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /stroomdata/stroom-data-p01 /stroomdata/stroom-index-p01 /stroomdata/stroom-working-p01 /stroomdata/stroom-working-p01/proxy
sudo mkdir -p /stroomdata/stroom-data-p00  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# So that this node can mount stroomp00&amp;#39;s data directory&lt;/span&gt;
sudo chown -R stroomuser:stroomuser /stroomdata
sudo chmod -R &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; /stroomdata
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;deployment-of-nfs-to-share-stroom-storage&#34;&gt;Deployment of NFS to share Stroom Storage&lt;/h4&gt;
&lt;p&gt;We will use NFS to cross mount the &lt;em&gt;permanent data&lt;/em&gt; directories. That is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt; will mount &lt;code&gt;stroomp01.strmdev00.org:/stroomdata/stroom-data-p01&lt;/code&gt; and,&lt;/li&gt;
&lt;li&gt;node &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt; will mount &lt;code&gt;stroomp00.strmdev00.org:/stroomdata/stroom-data-p00&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The HOWTO guide to deploy and configure NFS for our Scenario is &lt;a href=&#34;InstallNFSHowTo.md&#34; title=&#34;NFS Installation and Configuration&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;stroom-installation&#34;&gt;Stroom Installation&lt;/h2&gt;
&lt;h3 id=&#34;pre-installation-setup&#34;&gt;Pre-installation setup&lt;/h3&gt;
&lt;p&gt;Before installing either the Stroom Proxy or Stroom Application, we need establish various files and scripts within
the Stroom Processing user&amp;rsquo;s home directory to support the Stroom services and their persistence. This is setup is described
&lt;a href=&#34;InstallProcessingUserSetupHowTo.md&#34; title=&#34;Processing User Setup&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;stroom-proxy-installation&#34;&gt;Stroom Proxy Installation&lt;/h3&gt;
&lt;p&gt;Instructions for installation of the Stroom Proxy can be found &lt;a href=&#34;InstallProxyHowTo.md&#34; title=&#34;Installation of Stroom Proxy&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;stroom-application-installation&#34;&gt;Stroom Application Installation&lt;/h3&gt;
&lt;p&gt;Instructions for installation of the Stroom application can be found &lt;a href=&#34;InstallApplicationHowTo.md&#34; title=&#34;Installation of Stroom Application&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;web-service-integration&#34;&gt;Web Service Integration&lt;/h2&gt;
&lt;p&gt;One typically &amp;lsquo;fronts&amp;rsquo; either a Stroom Proxy or Stroom Application with a secure web service such as Apache&amp;rsquo;s Httpd or NGINX.
In our scenario, we will use SSL to secure the web service and further, we will use Apache&amp;rsquo;s Httpd.&lt;/p&gt;
&lt;p&gt;We first need to create certificates for use by the web service. The &lt;a href=&#34;InstallCertificatesHowTo.md&#34; title=&#34;SSL Certificate Generation&#34;&gt;following&lt;/a&gt;
provides instructions for this. The created certificates can then be used when configuration the web service.&lt;/p&gt;
&lt;p&gt;This HOWTO is designed to deploy Apache&amp;rsquo;s httpd web service as a front end (https) (to the user) and
Apache&amp;rsquo;s mod_jk as the interface between Apache and the Stroom tomcat applications. The instructions
to configure this can be found &lt;a href=&#34;InstallHttpdHowTo.md&#34; title=&#34;Apache Httpd/Mod_JK Installation&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Other Web service capability can be used, for example, &lt;a href=&#34;https://nginx.org&#34; title=&#34;NGINX Web Service Capability&#34;&gt;NGINX (external link)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;installation-validation&#34;&gt;Installation Validation&lt;/h2&gt;
&lt;p&gt;We will now check that the installation and web services integration has worked.&lt;/p&gt;
&lt;h3 id=&#34;sanity-firewall-check&#34;&gt;Sanity firewall check&lt;/h3&gt;
&lt;p&gt;To ensure you have the firewall correctly set up, the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo firewall-cmd --reload
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --list-all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;should result in&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public (active)
  target: default
  icmp-block-inversion: no
  interfaces: enp0s3
  sources: 
  services: dhcpv6-client http https nfs ssh
  ports: 8009/tcp 9080/tcp 8080/tcp 9009/tcp
  protocols: 
  masquerade: no
  forward-ports: 
  sourceports: 
  icmp-blocks: 
  rich rules: 
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;test-posting-of-data-to-the-stroom-service&#34;&gt;Test Posting of data to the Stroom service&lt;/h3&gt;
&lt;p&gt;You can test the data posting service with the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -k --data-binary @/etc/group &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://stroomp.strmdev00.org/stroom/datafeed&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Feed:TEST-FEED-V1_0&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;System:EXAMPLE_SYSTEM&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Environment:EXAMPLE_ENVIRONMENT&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which &lt;strong&gt;WILL&lt;/strong&gt; result in an error as we have not configured the Stroom Application as yet. The error should look like&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;html&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;head&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;title&lt;/span&gt;&amp;gt;Apache Tomcat/7.0.53 - Error report&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;title&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;style&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#555&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;--H1&lt;/span&gt; {&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-family&lt;/span&gt;:Tahoma,Arial,&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;sans-serif&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;color&lt;/span&gt;:&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;white&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;background-color&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;#525D76&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-size&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;px&lt;/span&gt;;} &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;H2&lt;/span&gt; {&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-family&lt;/span&gt;:Tahoma,Arial,&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;sans-serif&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;color&lt;/span&gt;:&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;white&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;background-color&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;#525D76&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-size&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;16&lt;/span&gt;&lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;px&lt;/span&gt;;} &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;H3&lt;/span&gt; {&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-family&lt;/span&gt;:Tahoma,Arial,&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;sans-serif&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;color&lt;/span&gt;:&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;white&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;background-color&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;#525D76&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-size&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;14&lt;/span&gt;&lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;px&lt;/span&gt;;} &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;BODY&lt;/span&gt; {&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-family&lt;/span&gt;:Tahoma,Arial,&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;sans-serif&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;color&lt;/span&gt;:&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;black&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;background-color&lt;/span&gt;:&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;white&lt;/span&gt;;} &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;B&lt;/span&gt; {&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-family&lt;/span&gt;:Tahoma,Arial,&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;sans-serif&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;color&lt;/span&gt;:&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;white&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;background-color&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;#525D76&lt;/span&gt;;} &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;P&lt;/span&gt; {&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-family&lt;/span&gt;:Tahoma,Arial,&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;sans-serif&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;background&lt;/span&gt;:&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;white&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;color&lt;/span&gt;:&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;black&lt;/span&gt;;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;font-size&lt;/span&gt;:&lt;span style=&#34;color:#f60&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#078;font-weight:bold&#34;&gt;px&lt;/span&gt;;}&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;A&lt;/span&gt; {&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;color&lt;/span&gt; : &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;black&lt;/span&gt;;}&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;A&lt;/span&gt;.&lt;span style=&#34;color:#0a8;font-weight:bold&#34;&gt;name&lt;/span&gt; {&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;color&lt;/span&gt; : &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;black&lt;/span&gt;;}&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;HR&lt;/span&gt; {&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;color&lt;/span&gt; : &lt;span style=&#34;color:#f60&#34;&gt;#525D76&lt;/span&gt;;}&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;&amp;gt;&lt;/span&gt;&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;style&lt;/span&gt;&amp;gt; &amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;head&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;body&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;h1&lt;/span&gt;&amp;gt;HTTP Status 406 - Stroom Status 110 - Feed is not set to receive data - &amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;h1&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;HR&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;noshade&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;noshade&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;b&lt;/span&gt;&amp;gt;type&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;b&lt;/span&gt;&amp;gt; Status report&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;b&lt;/span&gt;&amp;gt;message&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;b&lt;/span&gt;&amp;gt; &amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;u&lt;/span&gt;&amp;gt;Stroom Status 110 - Feed is not set to receive data - &amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;u&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;b&lt;/span&gt;&amp;gt;description&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;b&lt;/span&gt;&amp;gt; &amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;u&lt;/span&gt;&amp;gt;The resource identified by this request is only capable of generating responses with characteristics not acceptable according to the request &amp;#34;accept&amp;#34; headers.&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;u&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;p&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;HR&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;noshade&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;noshade&amp;#34;&lt;/span&gt;&amp;gt;&amp;lt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;h3&lt;/span&gt;&amp;gt;Apache Tomcat/7.0.53&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;h3&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;body&lt;/span&gt;&amp;gt;&amp;lt;/&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;html&lt;/span&gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you view the Stroom proxy log, &lt;code&gt;~/stroom-proxy/instance/logs/stroom.log&lt;/code&gt;, on both processing nodes, you will see on one node,
the &lt;em&gt;datafeed.DataFeedRequestHandler&lt;/em&gt; events running under, in this case, the &lt;em&gt;ajp-apr-9009-exec-1&lt;/em&gt; thread indicating the failure&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
2017-01-03T03:35:47.366Z WARN  [ajp-apr-9009-exec-1] datafeed.DataFeedRequestHandler (DataFeedRequestHandler.java:131) - &amp;quot;handleException()&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Expect=100-continue&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=39960cf9-e50b-4ae8-a5f2-449ee670d2eb&amp;quot;,&amp;quot;ReceivedTime=2017-01-03T03:35:46.915Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.220&amp;quot;,&amp;quot;RemoteHost=192.168.2.220&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=1051&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomp.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.21 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2&amp;quot;,&amp;quot;Stroom Status 110 - Feed is not set to receive data&amp;quot;
2017-01-03T03:35:47.367Z ERROR [ajp-apr-9009-exec-1] zip.StroomStreamException (StroomStreamException.java:131) - sendErrorResponse() - 406 Stroom Status 110 - Feed is not set to receive data - 
2017-01-03T03:35:47.368Z INFO  [ajp-apr-9009-exec-1] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 478 ms to process (concurrentRequestCount=1) 406&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Expect=100-continue&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=39960cf9-e50b-4ae8-a5f2-449ee670d2eb&amp;quot;,&amp;quot;ReceivedTime=2017-01-03T03:35:46.915Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.220&amp;quot;,&amp;quot;RemoteHost=192.168.2.220&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=1051&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomp.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.21 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2&amp;quot;
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Further, if you execute the data posting command (&lt;code&gt;curl&lt;/code&gt;) multiple times, you will see the loadbalancer working in that,
the above WARN/ERROR/INFO logs will swap between the proxy services (i.e. first error will be in stroomp00.strmdev00.org&amp;rsquo;s
proxy log file, then second on stroomp01.strmdev00.org&amp;rsquo;s proxy log file, then back to stroomp00.strmdev00.org and so on).&lt;/p&gt;
&lt;h2 id=&#34;stroom-application-configuration&#34;&gt;Stroom Application Configuration&lt;/h2&gt;
&lt;p&gt;Although we have installed our multi node Stroom cluster, we now need to configure it.
We do this via the user interface (UI).&lt;/p&gt;
&lt;h3 id=&#34;logging-into-the-stroom-ui-for-the-first-time&#34;&gt;Logging into the Stroom UI for the first time&lt;/h3&gt;
&lt;p&gt;To log into the UI of your newly installed Stroom instance, present the base URL to your
&lt;a href=&#34;https://www.google.com/chrome&#34; title=&#34;Google Chrome Web Browser&#34;&gt;Chrome (external link)&lt;/a&gt; browser. In this deployment, you should enter the URLS
&lt;code&gt;http://stroomp.strmdev00.org&lt;/code&gt;, or &lt;code&gt;https://stroomp.strmdev00.org&lt;/code&gt; or &lt;code&gt;https://stroomp.strmdev00.org/stroom&lt;/code&gt;, noting the first URLs
should automatically direct you to the last URL.&lt;/p&gt;
&lt;p&gt;If you have personal certificates loaded in your Chrome browser, you may be asked which certificate to use to authenticate yourself
to &lt;code&gt;stroomp.strmdev00.org:443&lt;/code&gt;. As Stroom has not been configured to use user certificates, the choice is not relevant, just choose one
and continue.&lt;/p&gt;
&lt;p&gt;Additionally, if you are using  self-signed certificates, your browser will generate an alert as per
&lt;img src=&#34;../resources/UI-Chrome-NoCa-00.png&#34; alt=&#34;Chrome SelfSigned Certificate Issue - Initial&#34; title=&#34;Self Signed Certificate Initial Warning&#34;&gt;&lt;/p&gt;
&lt;p&gt;To proceed you need to select the &lt;strong&gt;ADVANCED&lt;/strong&gt; hyperlink to see&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-Chrome-NoCa-01.png&#34; alt=&#34;Chrome SelfSigned Certificate Issue - Advanced&#34; title=&#34;Self Signed Certificate Advanced Warning&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you select the &lt;strong&gt;Proceed to stroomp.strmdev00.org (unsafe)&lt;/strong&gt; hyper-link you will be presented with the standard Stroom UI login page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-Login-00.png&#34; alt=&#34;Stroom User Interface login page&#34; title=&#34;Stroom UI Login Page&#34;&gt;&lt;/p&gt;
&lt;p&gt;This page has two panels - &lt;strong&gt;About Stroom&lt;/strong&gt; and &lt;strong&gt;Login&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;About Stroom&lt;/strong&gt; panel we see an introductory description of Stroom in the top left and deployment details in the bottom left of the panel. The deployment details provide&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Build Version:&lt;/code&gt; - the build version of the Stroom application deployed&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Build Date:&lt;/code&gt; - the date the version was built&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Up Date:&lt;/code&gt; - the install date&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Node Name:&lt;/code&gt; - the node within the Stroom cluster you have connected to&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;login-with-stroom-default-administrative-user&#34;&gt;Login with Stroom default Administrative User&lt;/h3&gt;
&lt;p&gt;Each new Stroom deployment automatically creates the administrative user &lt;code&gt;admin&lt;/code&gt; and this user&amp;rsquo;s password is initially set to &lt;code&gt;admin&lt;/code&gt;.
We will
&lt;a href=&#34;../Authentication/UserLoginHowTo.md&#34; title=&#34;Admin first login&#34;&gt;login as this user&lt;/a&gt;
which also validates that the database and UI is working correctly in that you can login and the password is &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;create-an-attributed-user-to-perform-configuration&#34;&gt;Create an Attributed User to perform configuration&lt;/h3&gt;
&lt;p&gt;We should configure Stroom using an &lt;em&gt;attributed user&lt;/em&gt; account.
That is, we should
&lt;a href=&#34;../Authentication/CreateUserHowTo.md&#34; title=&#34;Create Stroom User&#34;&gt;create&lt;/a&gt;
a user, in our case it will be &lt;code&gt;burn&lt;/code&gt; (the author) and once created, we login with that account then perform the initial configuration activities.
You don&amp;rsquo;t have to do this, but it is sound security practice.&lt;/p&gt;
&lt;p&gt;Once you have created the user you should
&lt;a href=&#34;../Authentication/UserLogoutHowTo.md&#34; title=&#34;User Logout&#34;&gt;log out&lt;/a&gt;
of the &lt;code&gt;admin&lt;/code&gt; account and log back in as our user &lt;code&gt;burn&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;configure-the-volumes-for-our-stroom-deployment&#34;&gt;Configure the Volumes for our Stroom deployment&lt;/h3&gt;
&lt;p&gt;Before we can store data within Stroom we need to configure the
&lt;a href=&#34;../../user-guide/volumes.md&#34; title=&#34;Stroom Volumes&#34;&gt;volumes&lt;/a&gt;
we have allocated in our Storage hierarchy. The
&lt;a href=&#34;InstallVolumesHowTo.md&#34; title=&#34;Initial Volume set-up&#34;&gt;Volume Maintenance HOWTO&lt;/a&gt;
shows how to do this.&lt;/p&gt;
&lt;h3 id=&#34;configure-the-nodes-for-our-stroom-deployment&#34;&gt;Configure the Nodes for our Stroom deployment&lt;/h3&gt;
&lt;p&gt;In a Stroom cluster, nodes are expected to communicate with each other on port 8080 over http. Our
installation in a multi node environment ensures the firewall will allow this but we also need to
configure the nodes. This is achieved via the Stroom UI where we set a Cluster URL for each node.
The following &lt;a href=&#34;InstallNodesHowTo.md&#34; title=&#34;Initial Node configuration&#34;&gt;Node Configuration HOWTO&lt;/a&gt; demonstrates how do
set the Cluster URL.&lt;/p&gt;
&lt;h3 id=&#34;data-stream-processing&#34;&gt;Data Stream Processing&lt;/h3&gt;
&lt;p&gt;To enable Stroom to process data, it&amp;rsquo;s
&lt;a href=&#34;../../user-guide/jobs.md#data-processor&#34; title=&#34;Data Processor&#34;&gt;Data Processors&lt;/a&gt;
need to be enabled. There are NOT enabled by default on installation. The following
&lt;a href=&#34;../General/TasksHowTo.md#enable-stream-processors&#34; title=&#34;Enable Stream Processors&#34;&gt;section&lt;/a&gt;
in our &lt;a href=&#34;../General/TasksHowTo.md&#34; title=&#34;Stroom Task HOWTO&#34;&gt;Stroom Tasks HowTo&lt;/a&gt; shows how to do this.&lt;/p&gt;
&lt;h2 id=&#34;testing-our-stroom-application-and-proxy-installation&#34;&gt;Testing our Stroom Application and Proxy Installation&lt;/h2&gt;
&lt;p&gt;To complete the installation process we will test that we can send and ingest data.&lt;/p&gt;
&lt;h3 id=&#34;add-a-test-feed&#34;&gt;Add a Test Feed&lt;/h3&gt;
&lt;p&gt;In order for Stroom to be able to handle various data sources, be they Apache HTTPD web access logs,
MicroSoft Windows Event logs or Squid Proxy logs, Stroom must be told what the data is when it is received.
This is achieved using
&lt;a href=&#34;../../user-guide/feeds.md&#34; title=&#34;Stroom Feeds&#34;&gt;Event Feeds&lt;/a&gt;.
Each feed has a unique name within the system.&lt;/p&gt;
&lt;p&gt;To test our installation can accept and ingest data, we will
&lt;a href=&#34;../General/FeedManagementHowTo.md#creation-of-an-event-feed&#34; title=&#34;Creation of an Event Feed&#34;&gt;create a test Event feed&lt;/a&gt;. The &amp;lsquo;name&amp;rsquo; of the feed will be
&lt;code&gt;TEST-FEED-V1_0&lt;/code&gt;. Note that in a production environment is is best that a well defined nomenclature is used for feed &amp;lsquo;names&amp;rsquo;. For our
testing purposes &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt; is sufficient.&lt;/p&gt;
&lt;h3 id=&#34;sending-test-data&#34;&gt;Sending Test Data&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Before testing our new feed, we should restart both our Stroom application services so that any volume changes are
propagated. This can be achieved by simply running&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
bin/StopServices.sh
bin/StartServices.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;on both nodes. It is suggested you first log out of Stroom, if you are currently logged in and you should monitor the Stroom
application logs to ensure it has successfully restarted. Remember to use the &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;Tp&lt;/code&gt; bash aliases we set up.&lt;/p&gt;
&lt;p&gt;For this test, we will send the contents of /etc/group to our test feed. We will also send the file from the cluster&amp;rsquo;s database
machine. The command to send this file is&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -k --data-binary @/etc/group &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://stroomp.strmdev00.org/stroom/datafeed&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Feed:TEST-FEED-V1_0&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;System:EXAMPLE_SYSTEM&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Environment:EXAMPLE_ENVIRONMENT&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We will test a number of features as part of our installation test. These are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;simple post of data&lt;/li&gt;
&lt;li&gt;simple post of data to validate load balancing is working&lt;/li&gt;
&lt;li&gt;simple post to &lt;em&gt;direct&lt;/em&gt; feed interface&lt;/li&gt;
&lt;li&gt;simple post to &lt;em&gt;direct&lt;/em&gt; feed interface to validate load balancing is working&lt;/li&gt;
&lt;li&gt;identify that the Stroom &lt;em&gt;Proxy Aggregation&lt;/em&gt; is working correctly&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As part of our testing will check the presence of the inbound data, as files, within the proxy storage area.
Now as the proxy storage area is also the location from which the Stroom application
automatically aggregates then ingests the data stored by the proxy, we can either turn off the
&lt;a href=&#34;../../user-guide/jobs.md#proxy-aggregation&#34; title=&#34;Stream Processor&#34;&gt;Proxy Aggregation&lt;/a&gt; task,
or attempt to
perform our tests noting that proxy aggregation occurs every 10 minutes by default. For simplicity, we will
&lt;a href=&#34;../General/TasksHowTo.md#turn-off-proxy-aggregation&#34; title=&#34;Turn off Proxy Aggregation&#34;&gt;turn off the &lt;code&gt;Proxy Aggregation&lt;/code&gt; task&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can now perform out tests. Follow the steps in the &lt;a href=&#34;InstallTestingHowTo.md#data-post-tests&#34; title=&#34;Data Post Tests&#34;&gt;Data Posting Tests&lt;/a&gt; section
of the &lt;a href=&#34;InstallTestingHowTo.md&#34; title=&#34;Stroom Installation Testing&#34;&gt;Testing Stroom Installation HOWTO&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;forwarding-stroom-proxy-deployment&#34;&gt;Forwarding Stroom Proxy Deployment&lt;/h1&gt;
&lt;p&gt;In this deployment will install a Stroom &lt;strong&gt;Forwarding Proxy&lt;/strong&gt; which is designed to aggregate data posted to it for managed forwarding to
a central Stroom processing system. This scenario is assuming we are installing on the fully patch Centos 7.3 host, &lt;code&gt;stroomfp0.strmdev00.org&lt;/code&gt;.
Further it assumes we have installed, configured and tested the destination Stroom system we will be forwarding to.&lt;/p&gt;
&lt;p&gt;We will first deploy the Stroom Proxy then configure it as a &lt;strong&gt;Forwarding Proxy&lt;/strong&gt; then integrate a web service to run &amp;lsquo;in-front&amp;rsquo; of
Proxy.&lt;/p&gt;
&lt;h2 id=&#34;prerequisite-software-installation-for-forwarding-proxy&#34;&gt;Prerequisite Software Installation for Forwarding Proxy&lt;/h2&gt;
&lt;p&gt;Certain software packages are required for the Stroom Proxy to run.&lt;/p&gt;
&lt;p&gt;The core software list is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;java-1.8.0-openjdk&lt;/li&gt;
&lt;li&gt;java-1.8.0-openjdk-devel&lt;/li&gt;
&lt;li&gt;policycoreutils-python&lt;/li&gt;
&lt;li&gt;unzip&lt;/li&gt;
&lt;li&gt;zip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the required software are packages available via standard repositories and hence we can simply execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel policycoreutils-python unzip zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that additional software will be required for other integration components (e.g. Apache httpd/mod_jk). This is
described in the
&lt;a href=&#34;#web-service-integration-for-forwarding-proxy&#34; title=&#34;Web Service Integration - Forwarding proxy&#34;&gt;Web Service Integration for Forwarding Proxy&lt;/a&gt;
section of this document.&lt;/p&gt;
&lt;h2 id=&#34;forwarding-proxy-storage&#34;&gt;Forwarding Proxy Storage&lt;/h2&gt;
&lt;p&gt;Since we are a proxy that stores data sent to it and forwards it each minute we have only one directory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-fp0/proxy&lt;/code&gt;    - location for Stroom proxy to store inbound data files prior to forwarding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will note that these HOWTOs use a consistent storage nomenclature for simplicity of documentations.&lt;/p&gt;
&lt;h3 id=&#34;creation-of-storage-for-forwarding-proxy&#34;&gt;Creation of Storage for Forwarding Proxy&lt;/h3&gt;
&lt;p&gt;We create the processing user, as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo useradd --system stroomuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then create the storage hierarchy with the commands&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /stroomdata/stroom-working-fp0/proxy
sudo chown -R stroomuser:stroomuser /stroomdata
sudo chmod -R &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; /stroomdata
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;stroom-forwarding-proxy-installation&#34;&gt;Stroom Forwarding Proxy Installation&lt;/h2&gt;
&lt;h3 id=&#34;pre-installation-setup-1&#34;&gt;Pre-installation setup&lt;/h3&gt;
&lt;p&gt;Before installing the Stroom Forwarding Proxy, we need establish various files and scripts within
the Stroom Processing user&amp;rsquo;s home directory to support the Stroom services and their persistence. This is setup is described
&lt;a href=&#34;InstallProcessingUserSetupHowTo.md&#34; title=&#34;Processing User Setup&#34;&gt;here&lt;/a&gt;. Although this setup HOWTO is orientated towards a complete Stroom Proxy
and Application installation, it does provide all the processing user setup requirements for a Stroom Proxy as well.&lt;/p&gt;
&lt;h3 id=&#34;stroom-forwarding-proxy-installation-1&#34;&gt;Stroom Forwarding Proxy Installation&lt;/h3&gt;
&lt;p&gt;Instructions for installation of the Stroom Proxy can be found &lt;a href=&#34;InstallProxyHowTo.md&#34; title=&#34;Installation of Stroom Proxy&#34;&gt;here&lt;/a&gt;, noting you
should follow the steps for configuring the proxy as a &lt;em&gt;Forwarding&lt;/em&gt; proxy.&lt;/p&gt;
&lt;h2 id=&#34;web-service-integration-for-forwarding-proxy&#34;&gt;Web Service Integration for Forwarding Proxy&lt;/h2&gt;
&lt;p&gt;One typically &amp;lsquo;fronts&amp;rsquo; a Stroom Proxy with a secure web service such as Apache&amp;rsquo;s Httpd or NGINX.
In our scenario, we will use SSL to secure the web service and further, we will use Apache&amp;rsquo;s Httpd.&lt;/p&gt;
&lt;p&gt;We first need to create certificates for use by the web service. The
&lt;a href=&#34;InstallCertificatesHowTo.md&#34; title=&#34;SSL Certificate Generation&#34;&gt;SSL Certificate Generation HOWTO&lt;/a&gt; provides instructions for this.
The created certificates can then be used when configuration the web service. NOTE also, that for a forwarding
proxy we will need to establish Key and Trust stores as well. This is also documented in the SSL Certificate Generation HOWTO
&lt;a href=&#34;InstallCertificatesHowTo.md#stroom-proxy-to-proxy-key-and-trust-stores&#34; title=&#34;Key and Trust Store Generation&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This HOWTO is designed to deploy Apache&amp;rsquo;s httpd web service as a front end (https) (to the user) and
Apache&amp;rsquo;s mod_jk as the interface between Apache and the Stroom tomcat applications. The instructions
to configure this can be found &lt;a href=&#34;InstallHttpdHowTo.md&#34; title=&#34;Apache Httpd/Mod_JK Installation&#34;&gt;here&lt;/a&gt;. Please take note of where a Stroom Proxy
configuration item is different to that of a Stroom Application processing node.&lt;/p&gt;
&lt;p&gt;Other Web service capability can be used, for example, &lt;a href=&#34;https://nginx.org&#34; title=&#34;NGINX Web Service Capability&#34;&gt;NGINX (external link)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;testing-our-forwarding-proxy-installation&#34;&gt;Testing our Forwarding Proxy Installation&lt;/h2&gt;
&lt;p&gt;To complete the installation process we will test that we can send data to the forwarding proxy and that it forwards the files
it receives to the central Stroom processing system. As stated earlier, it is assumed we have installed, configured and tested the destination
central Stroom processing system and thus we will have a test &lt;a href=&#34;../../user-guide/feeds.md&#34; title=&#34;Stroom Feeds&#34;&gt;Feed&lt;/a&gt;
already established - &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;sending-test-data-1&#34;&gt;Sending Test Data&lt;/h3&gt;
&lt;p&gt;For this test, we will send the contents of /etc/group to our test feed - &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt;. It doesn&amp;rsquo;t matter from which host we send the file from.
The command to send file is&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -k --data-binary @/etc/group &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://stroomfp0.strmdev00.org/stroom/datafeed&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Feed:TEST-FEED-V1_0&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;System:EXAMPLE_SYSTEM&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Environment:EXAMPLE_ENVIRONMENT&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Before testing, it is recommended you set up to monitor the Stroom proxy logs on the central server as well as on the Forwarding Proxy server.&lt;/p&gt;
&lt;p&gt;Follow the steps in the &lt;a href=&#34;InstallTestingHowTo.md#stroom-forwarding-proxy-testing&#34; title=&#34;Stroom Proxy Data Post Tests&#34;&gt;Forwarding Proxy Data Posting Tests&lt;/a&gt; section
of the &lt;a href=&#34;InstallTestingHowTo.md&#34; title=&#34;Stroom Installation Testing&#34;&gt;Testing Stroom Installation HOWTO&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;standalone-stroom-proxy-deployment&#34;&gt;Standalone Stroom Proxy Deployment&lt;/h1&gt;
&lt;p&gt;In this deployment will install a Stroom &lt;strong&gt;Standalone Proxy&lt;/strong&gt; which is designed to accept and store data posted to it for &lt;strong&gt;manual&lt;/strong&gt; forwarding to
a central Stroom processing system. This scenario is assuming we are installing on the fully patch Centos 7.3 host, &lt;code&gt;stroomsap0.strmdev00.org&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We will first deploy the Stroom Proxy then configure it as a &lt;strong&gt;Standalone Proxy&lt;/strong&gt; then integrate a web service to run &amp;lsquo;in-front&amp;rsquo; of
Proxy.&lt;/p&gt;
&lt;h2 id=&#34;prerequisite-software-installation-for-forwarding-proxy-1&#34;&gt;Prerequisite Software Installation for Forwarding Proxy&lt;/h2&gt;
&lt;p&gt;Certain software packages are required for the Stroom Proxy to run.&lt;/p&gt;
&lt;p&gt;The core software list is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;java-1.8.0-openjdk&lt;/li&gt;
&lt;li&gt;java-1.8.0-openjdk-devel&lt;/li&gt;
&lt;li&gt;policycoreutils-python&lt;/li&gt;
&lt;li&gt;unzip&lt;/li&gt;
&lt;li&gt;zip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the required software are packages available via standard repositories and hence we can simply execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel policycoreutils-python unzip zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that additional software will be required for other integration components (e.g. Apache httpd/mod_jk). This is
described in the
&lt;a href=&#34;#web-service-integration-for-standalone-proxy&#34; title=&#34;Web Service Integration - Standalone proxy&#34;&gt;Web Service Integration for Standalone Proxy&lt;/a&gt;
section of this document.&lt;/p&gt;
&lt;h2 id=&#34;standalone-proxy-storage&#34;&gt;Standalone Proxy Storage&lt;/h2&gt;
&lt;p&gt;Since we are a proxy that stores data sent to it we have only one directory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-sap0/proxy&lt;/code&gt;    - location for Stroom proxy to store inbound data files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will note that these HOWTOs use a consistent storage nomenclature for simplicity of documentations.&lt;/p&gt;
&lt;h3 id=&#34;creation-of-storage-for-standalone-proxy&#34;&gt;Creation of Storage for Standalone Proxy&lt;/h3&gt;
&lt;p&gt;We create the processing user, as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo useradd --system stroomuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then create the storage hierarchy with the commands&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /stroomdata/stroom-working-sap0/proxy
sudo chown -R stroomuser:stroomuser /stroomdata
sudo chmod -R &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; /stroomdata
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;stroom-standalone-proxy-installation&#34;&gt;Stroom Standalone Proxy Installation&lt;/h2&gt;
&lt;h3 id=&#34;pre-installation-setup-2&#34;&gt;Pre-installation setup&lt;/h3&gt;
&lt;p&gt;Before installing the Stroom Standalone Proxy, we need establish various files and scripts within
the Stroom Processing user&amp;rsquo;s home directory to support the Stroom services and their persistence. This is setup is described
&lt;a href=&#34;InstallProcessingUserSetupHowTo.md&#34; title=&#34;Processing User Setup&#34;&gt;here&lt;/a&gt;. Although this setup HOWTO is orientated towards a complete Stroom Proxy
and Application installation, it does provide all the processing user setup requirements for a Stroom Proxy as well.&lt;/p&gt;
&lt;h3 id=&#34;stroom-standalone-proxy-installation-1&#34;&gt;Stroom Standalone Proxy Installation&lt;/h3&gt;
&lt;p&gt;Instructions for installation of the Stroom Proxy can be found &lt;a href=&#34;InstallProxyHowTo.md&#34; title=&#34;Installation of Stroom Proxy&#34;&gt;here&lt;/a&gt;, noting you
should follow the steps for configuring the proxy as a  &lt;em&gt;Store_NoDB&lt;/em&gt; proxy.&lt;/p&gt;
&lt;h2 id=&#34;web-service-integration-for-standalone-proxy&#34;&gt;Web Service Integration for Standalone Proxy&lt;/h2&gt;
&lt;p&gt;One typically &amp;lsquo;fronts&amp;rsquo; a Stroom Proxy with a secure web service such as Apache&amp;rsquo;s Httpd or NGINX.
In our scenario, we will use SSL to secure the web service and further, we will use Apache&amp;rsquo;s Httpd.&lt;/p&gt;
&lt;p&gt;We first need to create certificates for use by the web service. The
&lt;a href=&#34;InstallCertificatesHowTo.md&#34; title=&#34;SSL Certificate Generation&#34;&gt;SSL Certificate Generation HOWTO&lt;/a&gt; provides instructions for this.
The created certificates can then be used when configuration the web service. There is no need for Trust or Key stores.&lt;/p&gt;
&lt;p&gt;This HOWTO is designed to deploy Apache&amp;rsquo;s httpd web service as a front end (https) (to the user) and
Apache&amp;rsquo;s mod_jk as the interface between Apache and the Stroom tomcat applications. The instructions
to configure this can be found &lt;a href=&#34;InstallHttpdHowTo.md&#34; title=&#34;Apache Httpd/Mod_JK Installation&#34;&gt;here&lt;/a&gt;. Please take note of where a Stroom Proxy
configuration item is different to that of a Stroom Application processing node.&lt;/p&gt;
&lt;p&gt;Other Web service capability can be used, for example, &lt;a href=&#34;https://nginx.org&#34; title=&#34;NGINX Web Service Capability&#34;&gt;NGINX (external link)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;testing-our-standalone-proxy-installation&#34;&gt;Testing our Standalone Proxy Installation&lt;/h2&gt;
&lt;p&gt;To complete the installation process we will test that we can send data to the standalone proxy and it stores it.&lt;/p&gt;
&lt;h3 id=&#34;sending-test-data-2&#34;&gt;Sending Test Data&lt;/h3&gt;
&lt;p&gt;For this test, we will send the contents of /etc/group to our test feed - &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt;. It doesn&amp;rsquo;t matter from which host we send the file from.
The command to send file is&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -k --data-binary @/etc/group &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://stroomsap0.strmdev00.org/stroom/datafeed&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Feed:TEST-FEED-V1_0&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;System:EXAMPLE_SYSTEM&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Environment:EXAMPLE_ENVIRONMENT&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Before testing, it is recommended you set up to monitor the Standalone Proxy logs.&lt;/p&gt;
&lt;p&gt;Follow the steps in the &lt;a href=&#34;InstallTestingHowTo.md#stroom-standalone-proxy-testing&#34; title=&#34;Stroom Proxy Data Post Tests&#34;&gt;Standalone Proxy Data Posting Tests&lt;/a&gt;
section of the &lt;a href=&#34;InstallTestingHowTo.md&#34; title=&#34;Stroom Installation Testing&#34;&gt;Testing Stroom Installation HOWTO&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;addition-of-a-node-to-a-stroom-cluster-deployment&#34;&gt;Addition of a Node to a Stroom Cluster Deployment&lt;/h1&gt;
&lt;p&gt;In this deployment we will deploy both the Stroom Proxy and Stroom Application software
to a new processing node we wish to add to our cluster. Once we have deploy and configured the Stroom software, we will then integrate a web
service to run &amp;lsquo;in-front&amp;rsquo; of our Stroom software, and then perform the initial configuration of to add this node via the user interface. The
node we will add is &lt;code&gt;stroomp02.strmdev00.org&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;grant-access-to-the-database-for-this-node&#34;&gt;Grant access to the database for this node&lt;/h2&gt;
&lt;p&gt;Connect to the Stroom database as the administrative (root) user, via the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mysql --user&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;root -p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and at the &lt;code&gt;MariaDB [(none)]&amp;gt;&lt;/code&gt; or &lt;code&gt;mysql&amp;gt; &lt;/code&gt; prompt enter&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;grant all privileges on stroom.* to stroomuser@stroomp02.strmdev00.org identified by &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Stroompassword1@&amp;#39;&lt;/span&gt;;
quit;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;prerequisite-software-installation-1&#34;&gt;Prerequisite Software Installation&lt;/h2&gt;
&lt;p&gt;Certain software packages are required for either the Stroom Proxy or Stroom Application to run.&lt;/p&gt;
&lt;p&gt;The core software list is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;java-1.8.0-openjdk&lt;/li&gt;
&lt;li&gt;java-1.8.0-openjdk-devel&lt;/li&gt;
&lt;li&gt;policycoreutils-python&lt;/li&gt;
&lt;li&gt;unzip&lt;/li&gt;
&lt;li&gt;zip&lt;/li&gt;
&lt;li&gt;mariadb or mysql client&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the required software are packages available via standard repositories and hence we can simply execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel policycoreutils-python unzip zip
sudo yum -y install mariadb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the above instance, the database client choice is MariaDB as it is directly supported by Centos 7. One could deploy the MySQL
database software as the alternative. If you have chosen a different database for the already deployed Stroom Cluster then you
should use that one. See &lt;a href=&#34;#mysqlclientinstall&#34;&gt;earlier&lt;/a&gt; in this document on how to install the MySQL Community client.&lt;/p&gt;
&lt;p&gt;Note that additional software will be required for other integration components (e.g. Apache httpd/mod_jk). This is
described in the &lt;a href=&#34;#web-service-integration&#34; title=&#34;Web Service Integration&#34;&gt;Web Service Integration&lt;/a&gt; section of this document.&lt;/p&gt;
&lt;h3 id=&#34;storage-scenario-1&#34;&gt;Storage Scenario&lt;/h3&gt;
&lt;p&gt;To maintain our Storage Scenario them, the scenario for this node is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp02.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p02&lt;/code&gt;        - location to store Stroom application data files (events, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-index-p02&lt;/code&gt;       - location to store Stroom application index files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p02&lt;/code&gt;     - location to store Stroom application working files (e.g. tmp, output, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p02/proxy&lt;/code&gt;       - location for Stroom proxy to store inbound data files&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;creation-of-storage-hierarchy-1&#34;&gt;Creation of Storage Hierarchy&lt;/h4&gt;
&lt;p&gt;So, we first create processing user on our new node as per&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo useradd --system stroomuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then create the storage via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /stroomdata/stroom-data-p02 /stroomdata/stroom-index-p02 /stroomdata/stroom-working-p02 /stroomdata/stroom-working-p02/proxy
sudo mkdir -p /stroomdata/stroom-data-p00  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# So that this node can mount stroomp00&amp;#39;s data directory&lt;/span&gt;
sudo mkdir -p /stroomdata/stroom-data-p01  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# So that this node can mount stroomp01&amp;#39;s data directory&lt;/span&gt;
sudo chown -R stroomuser:stroomuser /stroomdata
sudo chmod -R &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; /stroomdata
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As we need to share this new nodes &lt;strong&gt;permanent data&lt;/strong&gt; directories to the existing nodes in the Cluster, we need to
create mount point directories on our existing nodes in addition to deploying NFS.&lt;/p&gt;
&lt;p&gt;So we execute on&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /stroomdata/stroom-data-p02
sudo chmod &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; /stroomdata/stroom-data-p02
sudo chown stroomuser:stroomuser /stroomdata/stroom-data-p02
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and on&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mkdir -p /stroomdata/stroom-data-p02
sudo chmod &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; /stroomdata/stroom-data-p02
sudo chown stroomuser:stroomuser /stroomdata/stroom-data-p02
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;deployment-of-nfs-to-share-stroom-storage-1&#34;&gt;Deployment of NFS to share Stroom Storage&lt;/h4&gt;
&lt;p&gt;We will use NFS to cross mount the &lt;em&gt;permanent data&lt;/em&gt; directories. That is&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt; will mount
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stroomp01.strmdev00.org:/stroomdata/stroom-data-p01&lt;/code&gt; and,&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stroomp02.strmdev00.org:/stroomdata/stroom-data-p02&lt;/code&gt; and,&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;node &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt; will mount
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stroomp00.strmdev00.org:/stroomdata/stroom-data-p00&lt;/code&gt; and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stroomp02.strmdev00.org:/stroomdata/stroom-data-p02&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;node &lt;code&gt;stroomp02.strmdev00.org&lt;/code&gt; will mount
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;stroomp00.strmdev00.org:/stroomdata/stroom-data-p00&lt;/code&gt; and&lt;/li&gt;
&lt;li&gt;&lt;code&gt;stroomp01.strmdev00.org:/stroomdata/stroom-data-p01&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The HOWTO guide to deploy and configure NFS for our Scenario is &lt;a href=&#34;InstallNFSHowTo.md#addition-of-another-node&#34; title=&#34;NFS Installation and Configuration&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;stroom-installation-1&#34;&gt;Stroom Installation&lt;/h2&gt;
&lt;h3 id=&#34;pre-installation-setup-3&#34;&gt;Pre-installation setup&lt;/h3&gt;
&lt;p&gt;Before installing either the Stroom Proxy or Stroom Application, we need establish various files and scripts within
the Stroom Processing user&amp;rsquo;s home directory to support the Stroom services and their persistence. This is setup is described
&lt;a href=&#34;InstallProcessingUserSetupHowTo.md&#34; title=&#34;Processing User Setup&#34;&gt;here&lt;/a&gt;. Note you should remember to set the &lt;strong&gt;N&lt;/strong&gt; bash variable
when generating the Environment Variable files to &lt;em&gt;02&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;stroom-proxy-installation-1&#34;&gt;Stroom Proxy Installation&lt;/h3&gt;
&lt;p&gt;Instructions for installation of the Stroom Proxy can be found &lt;a href=&#34;InstallProxyHowTo.md&#34; title=&#34;Installation of Stroom Proxy&#34;&gt;here&lt;/a&gt;. Note you
will be deploying a &lt;em&gt;Store&lt;/em&gt; proxy and during the setup execution ensure you enter the appropriate values for NODE (&amp;lsquo;stroomp02&amp;rsquo;)
and REPO_DIR (&#39;/stroomdata/stroom-working-p02/proxy&#39;). All other values will be the same.&lt;/p&gt;
&lt;h3 id=&#34;stroom-application-installation-1&#34;&gt;Stroom Application Installation&lt;/h3&gt;
&lt;p&gt;Instructions for installation of the Stroom application can be found &lt;a href=&#34;InstallApplicationHowTo.md&#34; title=&#34;Installation of Stroom Application&#34;&gt;here&lt;/a&gt;.
When executing the setup script ensure you enter the appropriate values for TEMP_DIR (&#39;/stroomdata/stroom-working-p02&#39;) and NODE (&amp;lsquo;stroomp02&amp;rsquo;).
All other values will be the same. Note also that you will not have to wait for the &amp;lsquo;first&amp;rsquo; node to initialise the Stroom database as
this would have already been done when you first deployed your Stroom Cluster.&lt;/p&gt;
&lt;h2 id=&#34;web-service-integration-1&#34;&gt;Web Service Integration&lt;/h2&gt;
&lt;p&gt;One typically &amp;lsquo;fronts&amp;rsquo; either a Stroom Proxy or Stroom Application with a secure web service such as Apache&amp;rsquo;s Httpd or NGINX.
In our scenario, we will use SSL to secure the web service and further, we will use Apache&amp;rsquo;s Httpd.&lt;/p&gt;
&lt;p&gt;As we are a cluster, we use the same certificate as the other nodes. Thus we need to gain the certificate package from an existing node.&lt;/p&gt;
&lt;p&gt;So, on &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;, we replicate the directory ~stroomuser/stroom-jks to our new node. That is, tar it up, copy the tar file to
stroomp02 and untar it. We can make use of the other node&amp;rsquo;s mounted file system.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; ~stroomuser
tar cf stroom-jks.tar stroom-jks
mv stroom-jks.tar /stroomdata/stroom-data-p02
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then on our new node (&lt;code&gt;stroomp02.strmdev00.org&lt;/code&gt;) we extract the data.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; ~stroomuser
tar xf /stroomdata/stroom-data-p02/stroom-jks.tar &lt;span style=&#34;color:#555&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f /stroomdata/stroom-data-p02/stroom-jks.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now ensure protection, ownership and SELinux context for these files by running&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;chmod &lt;span style=&#34;color:#f60&#34;&gt;700&lt;/span&gt; ~stroomuser/stroom-jks/private ~stroomuser/stroom-jks
chown -R stroomuser:stroomuser ~stroomuser/stroom-jks
chcon -R --reference /etc/pki ~stroomuser/stroom-jks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This HOWTO is designed to deploy Apache&amp;rsquo;s httpd web service as a front end (https) (to the user) and
Apache&amp;rsquo;s mod_jk as the interface between Apache and the Stroom tomcat applications. The instructions
to configure this can be found &lt;a href=&#34;InstallHttpdHowTo.md&#34; title=&#34;Apache Httpd/Mod_JK Installation&#34;&gt;here&lt;/a&gt;.
You should pay particular attention to the section on the
&lt;a href=&#34;InstallHttpdHowTo.md#apache-modjk-configuration&#34; title=&#34;Apache Mod_JK Configuration&#34;&gt;Apache Mod_JK configuration&lt;/a&gt;
as you &lt;strong&gt;MUST&lt;/strong&gt; regenerate the Mod_JK workers.properties file on the existing cluster nodes as well as generating it on our new node.&lt;/p&gt;
&lt;p&gt;Other Web service capability can be used, for example, &lt;a href=&#34;https://nginx.org&#34; title=&#34;NGINX Web Service Capability&#34;&gt;NGINX (external link)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Note that once you have integrated the web services for our new node, you will need to restart the Apache systemd process on the existing
two nodes that that the new Mod_JK configuration has taken place.&lt;/p&gt;
&lt;h2 id=&#34;installation-validation-1&#34;&gt;Installation Validation&lt;/h2&gt;
&lt;p&gt;We will now check that the installation and web services integration has worked. We do this with a simple firewall check
and &lt;a href=&#34;#testing-our-new-node-installation&#34; title=&#34;Integration Tests&#34;&gt;later&lt;/a&gt; perform complete integration tests.&lt;/p&gt;
&lt;h3 id=&#34;sanity-firewall-check-1&#34;&gt;Sanity firewall check&lt;/h3&gt;
&lt;p&gt;To ensure you have the firewall correctly set up, the following command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo firewall-cmd --reload
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --list-all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;should result in&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public (active)
  target: default
  icmp-block-inversion: no
  interfaces: enp0s3
  sources: 
  services: dhcpv6-client http https nfs ssh
  ports: 8009/tcp 9080/tcp 8080/tcp 9009/tcp
  protocols: 
  masquerade: no
  forward-ports: 
  sourceports: 
  icmp-blocks: 
  rich rules: 
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;stroom-application-configuration---new-node&#34;&gt;Stroom Application Configuration - New Node&lt;/h2&gt;
&lt;p&gt;We will need to configure this new node&amp;rsquo;s Volumes, set it&amp;rsquo;s Cluster URL and enable it&amp;rsquo;s Stream Processors.
We do this by logging into the Stroom User Interface (UI) with an account with Administrator privileges. It
is recommended you use a attributed user for this activity. Once you have logged in you can configure this
new node.&lt;/p&gt;
&lt;h3 id=&#34;configure-the-volumes-for-our-stroom-deployment-1&#34;&gt;Configure the Volumes for our Stroom deployment&lt;/h3&gt;
&lt;p&gt;Before we can store data on this new Stroom node we need to configure it&amp;rsquo;s
&lt;a href=&#34;../../user-guide/volumes.md&#34; title=&#34;Stroom Volumes&#34;&gt;volumes&lt;/a&gt;
we have allocated in our Storage hierarchy. The section on adding new volumes in the
&lt;a href=&#34;InstallVolumesHowTo.md#adding-new-volumes&#34; title=&#34;Add new volumes to a Cluster&#34;&gt;Volume Maintenance HOWTO&lt;/a&gt;
shows how to do this.&lt;/p&gt;
&lt;h3 id=&#34;configure-the-nodes-for-our-stroom-deployment-1&#34;&gt;Configure the Nodes for our Stroom deployment&lt;/h3&gt;
&lt;p&gt;In a Stroom cluster, nodes are expected to communicate with each other on port 8080 over http. Our
installation in a multi node environment ensures the firewall will allow this but we also need to
configure the new node. This is achieved via the Stroom UI where we set a Cluster URL for our node.
The section on Configuring a new node in the
&lt;a href=&#34;InstallNodesHowTo.md#configure-new-node&#34; title=&#34;Configure a new Node&#34;&gt;Node Configuration HOWTO&lt;/a&gt; demonstrates how do
set the Cluster URL.&lt;/p&gt;
&lt;h3 id=&#34;data-stream-processing-1&#34;&gt;Data Stream Processing&lt;/h3&gt;
&lt;p&gt;To enable Stroom to process data, it&amp;rsquo;s
&lt;a href=&#34;../../user-guide/jobs.md#data-processor&#34; title=&#34;Data Processor&#34;&gt;Data Processors&lt;/a&gt;
need to be enabled. There are NOT enabled by default on installation. The following
&lt;a href=&#34;../General/TasksHowTo.md#enable-stream-processors-on-new-node&#34; title=&#34;Enable Stream Processors&#34;&gt;section&lt;/a&gt;
in our &lt;a href=&#34;../General/TasksHowTo.md&#34; title=&#34;Stroom Task HOWTO&#34;&gt;Stroom Tasks HowTo&lt;/a&gt; shows how to do this.&lt;/p&gt;
&lt;h2 id=&#34;testing-our-new-node-installation&#34;&gt;Testing our New Node Installation&lt;/h2&gt;
&lt;p&gt;To complete the installation process we will test that our new node has successfully integrated into our cluster.&lt;/p&gt;
&lt;p&gt;First we need to ensure we have restarted the Apache Httpd service (httpd.service) on the original nodes so that the new workers.properties
configuration files take effect.&lt;/p&gt;
&lt;p&gt;We now test the node integration by running the tests we use to validate a Multi Node Stroom Cluster Deployment found
&lt;a href=&#34;#sending-test-data&#34;&gt;here&lt;/a&gt; noting we should
monitor all three nodes proxy and application log files. Basically we are looking to see that this new node participates in the
load balancing for the &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt; cluster.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installhttpdhowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installhttpdhowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---apache-httpdmod_jk-configuration-for-stroom&#34;&gt;Stroom HOWTO - Apache Httpd/Mod_JK configuration for Stroom&lt;/h1&gt;
&lt;p&gt;The following is a HOWTO to assist users in configuring Apache&amp;rsquo;s HTTPD with Mod_JK for Stroom.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;p&gt;The following assumptions are used in this document.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the user has reasonable RHEL/Centos System administration skills&lt;/li&gt;
&lt;li&gt;installations are on Centos 7.3 minimal systems (fully patched)&lt;/li&gt;
&lt;li&gt;the security of the HTTPD deployment should be reviewed for a production environment.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation-of-apache-httpd-and-mod_jk-software&#34;&gt;Installation of Apache httpd and Mod_JK Software&lt;/h2&gt;
&lt;p&gt;To deploy Stroom using Apache&amp;rsquo;s httpd web service as a front end (https) and Apache&amp;rsquo;s mod_jk as the interface between Apache and the Stroom tomcat applications, we also need&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apr&lt;/li&gt;
&lt;li&gt;apr-util&lt;/li&gt;
&lt;li&gt;apr-devel&lt;/li&gt;
&lt;li&gt;gcc&lt;/li&gt;
&lt;li&gt;httpd&lt;/li&gt;
&lt;li&gt;httpd-devel&lt;/li&gt;
&lt;li&gt;mod_ssl&lt;/li&gt;
&lt;li&gt;epel-release&lt;/li&gt;
&lt;li&gt;tomcat-native&lt;/li&gt;
&lt;li&gt;apache&amp;rsquo;s mod_jk tomcat connector plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most of the required software are packages available via standard repositories and hence we can simply execute&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install apr apr-util apr-devel gcc httpd httpd-devel mod_ssl epel-release
sudo yum -y install tomcat-native
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The reason for the distinct &lt;code&gt;tomcat-native&lt;/code&gt; installation is that this package is from the &lt;a href=&#34;https://fedoraproject.org/wiki/EPEL&#34; title=&#34;Extra Packages for Enterprise Linux (EPEL)&#34;&gt;EPEL (external link)&lt;/a&gt; repository so it must be installed first.&lt;/p&gt;
&lt;p&gt;For the Apache mod_jk Tomcat connector we need to acquire a recent
&lt;a href=&#34;http://tomcat.apache.org/connectors-doc/&#34; title=&#34;The Apache Tomcat Connectors: mod_jk, ISAPI redirector, NSAPI redirector&#34;&gt;release (external link)&lt;/a&gt; and install it.
The following commands achieve this for the 1.2.42 release.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo bash
&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; /tmp
&lt;span style=&#34;color:#033&#34;&gt;V&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;1.2.42
wget https://www.apache.org/dist/tomcat/tomcat-connectors/jk/tomcat-connectors-&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;V&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;-src.tar.gz
tar xf tomcat-connectors-&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;V&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;-src.tar.gz
&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; tomcat-connectors-*-src/native
./configure --with-apxs&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/bin/apxs
make &lt;span style=&#34;color:#555&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install
&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; /tmp
rm -rf tomcat-connectors-*-src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Although you could remove the gcc compiler at this point, we leave it installed as one &lt;em&gt;should&lt;/em&gt; continue to upgrade the Tomcat Connectors to later releases.&lt;/p&gt;
&lt;h2 id=&#34;configure-apache-httpd&#34;&gt;Configure Apache httpd&lt;/h2&gt;
&lt;p&gt;We need to configure Apache as the &lt;code&gt;root&lt;/code&gt; user.&lt;/p&gt;
&lt;p&gt;If the Apache httpd service is &amp;lsquo;fronting&amp;rsquo; a Stroom user interface, we should create an index file (/var/www/html/index.html) on all nodes so browsing to
the root of the node will present the Stroom UI. This is not needed if you are deploying a Forwarding or Standalone Stroom proxy.&lt;/p&gt;
&lt;h3 id=&#34;forwarding-file-for-stroom-user-interface-deployments&#34;&gt;Forwarding file for Stroom User Interface deployments&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/var/www/html/index.html
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;html&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;head&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  &amp;lt;meta http-equiv=&amp;#34;Refresh&amp;#34; content=&amp;#34;0; URL=stroom&amp;#34;/&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;/head&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;/html&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;644&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Remember, deploy this file on all nodes running the Stroom Application.&lt;/p&gt;
&lt;h3 id=&#34;httpdconf-configuration&#34;&gt;Httpd.conf Configuration&lt;/h3&gt;
&lt;p&gt;We modify &lt;code&gt;/etc/httpd/conf/httpd.conf&lt;/code&gt; on all nodes, but backup the file first with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cp /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.ORIG
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Irrespective of the Stroom scenario being deployed - Multi Node Stroom (Application and Proxy), single Standalone Stroom Proxy or single Forwarding
Stroom Proxy, the configuration of the &lt;code&gt;/etc/httpd/conf/httpd.conf&lt;/code&gt; file is the same.&lt;/p&gt;
&lt;p&gt;We start by modify the configuration file by,
add just before the ServerRoot directive the following directives which are designed to make the httpd service more secure.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Stroom Change: Start - Apply generic security directives
ServerTokens Prod
ServerSignature Off
FileETag None
RewriteEngine On
RewriteCond %{THE_REQUEST} !HTTP/1.1$
RewriteRule .* - [F]
Header set X-XSS-Protection &amp;quot;1; mode=block&amp;quot;
# Stroom Change: End
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to specify a local disk on the
# Mutex directive, if file-based mutexes are used.  If you wish to share the
# same ServerRoot for multiple httpd daemons, you will need to change at
# least PidFile.
#
ServerRoot &amp;quot;/etc/httpd&amp;quot;

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;becomes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to specify a local disk on the
# Mutex directive, if file-based mutexes are used.  If you wish to share the
# same ServerRoot for multiple httpd daemons, you will need to change at
# least PidFile.
#
# Stroom Change: Start - Apply generic security directives
ServerTokens Prod
ServerSignature Off
FileETag None
RewriteEngine On
RewriteCond %{THE_REQUEST} !HTTP/1.1$
RewriteRule .* - [F]
Header set X-XSS-Protection &amp;quot;1; mode=block&amp;quot;
# Stroom Change: End
ServerRoot &amp;quot;/etc/httpd&amp;quot;

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We now block access to the /var/www directory by commenting out&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Directory &amp;quot;/var/www&amp;quot;&amp;gt;
  AllowOverride None
  # Allow open access:
  Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;that is&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
#
# Relax access to content within /var/www.
#
&amp;lt;Directory &amp;quot;/var/www&amp;quot;&amp;gt;
    AllowOverride None
    # Allow open access:
    Require all granted
&amp;lt;/Directory&amp;gt;

# Further relax access to the default document root:
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;becomes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
#
# Relax access to content within /var/www.
#
# Stroom Change: Start - Block access to /var/www
# &amp;lt;Directory &amp;quot;/var/www&amp;quot;&amp;gt;
#     AllowOverride None
#     # Allow open access:
#     Require all granted
# &amp;lt;/Directory&amp;gt;
# Stroom Change: End

# Further relax access to the default document root:
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;then within the /var/www/html directory turn off Indexes FollowSymLinks by commenting out the line&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Options Indexes FollowSymLinks
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
    # for more information.
    #
    Options Indexes FollowSymLinks

    #
    # AllowOverride controls what directives may be placed in .htaccess files.
    # It can be &amp;quot;All&amp;quot;, &amp;quot;None&amp;quot;, or any combination of the keywords:
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;becomes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
    # for more information.
    #
    # Stroom Change: Start - turn off indexes and FollowSymLinks
    # Options Indexes FollowSymLinks
    # Stroom Change: End

    #
    # AllowOverride controls what directives may be placed in .htaccess files.
    # It can be &amp;quot;All&amp;quot;, &amp;quot;None&amp;quot;, or any combination of the keywords:
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then finally we add two new log formats and configure the access log to use the new format. This is done within the &lt;code&gt;&amp;lt;IfModule logio_module&amp;gt;&lt;/code&gt; by adding the two new LogFormat directives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%u\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D %I/%O/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxUser
LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%{SSL_CLIENT_S_DN}x\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D %I/%O/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxSSLUser
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and replacing the CustomLog directive&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CustomLog &amp;quot;logs/access_log&amp;quot; combined
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CustomLog logs/access_log blackboxSSLUser
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
    LogFormat &amp;quot;%h %l %u %t \&amp;quot;%r\&amp;quot; %&amp;gt;s %b&amp;quot; common

    &amp;lt;IfModule logio_module&amp;gt;
      # You need to enable mod_logio.c to use %I and %O
      LogFormat &amp;quot;%h %l %u %t \&amp;quot;%r\&amp;quot; %&amp;gt;s %b \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %I %O&amp;quot; combinedio
    &amp;lt;/IfModule&amp;gt;

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a &amp;lt;VirtualHost&amp;gt;
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-&amp;lt;VirtualHost&amp;gt; access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    #CustomLog &amp;quot;logs/access_log&amp;quot; common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    CustomLog &amp;quot;logs/access_log&amp;quot; combined
&amp;lt;/IfModule&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;becomes&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
    LogFormat &amp;quot;%h %l %u %t \&amp;quot;%r\&amp;quot; %&amp;gt;s %b&amp;quot; common

    &amp;lt;IfModule logio_module&amp;gt;
      # You need to enable mod_logio.c to use %I and %O
      LogFormat &amp;quot;%h %l %u %t \&amp;quot;%r\&amp;quot; %&amp;gt;s %b \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %I %O&amp;quot; combinedio
      # Stroom Change: Start - Add new logformats
      LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%u\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D %I/%O/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxUser
      LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%{SSL_CLIENT_S_DN}x\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D %I/%O/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxSSLUser
      # Stroom Change: End
    &amp;lt;/IfModule&amp;gt;
    # Stroom Change: Start - Add new logformats without the additional byte values
    &amp;lt;IfModule !logio_module&amp;gt;
      LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%u\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D 0/0/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxUser
      LogFormat &amp;quot;%a/%{REMOTE_PORT}e %X %t %l \&amp;quot;%{SSL_CLIENT_S_DN}x\&amp;quot; \&amp;quot;%r\&amp;quot; %s/%&amp;gt;s %D 0/0/%B \&amp;quot;%{Referer}i\&amp;quot; \&amp;quot;%{User-Agent}i\&amp;quot; %V/%p&amp;quot; blackboxSSLUser
    &amp;lt;/IfModule&amp;gt;
    # Stroom Change: End

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a &amp;lt;VirtualHost&amp;gt;
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-&amp;lt;VirtualHost&amp;gt; access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    #CustomLog &amp;quot;logs/access_log&amp;quot; common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    # Stroom Change: Start - Make the access log use a new format
    # CustomLog &amp;quot;logs/access_log&amp;quot; combined
    CustomLog logs/access_log blackboxSSLUser
    # Stroom Change: End
&amp;lt;/IfModule&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Remember, deploy this file on all nodes.&lt;/p&gt;
&lt;h3 id=&#34;configuration-of-sslconf&#34;&gt;Configuration of ssl.conf&lt;/h3&gt;
&lt;p&gt;We modify &lt;code&gt;/etc/httpd/conf.d/ssl.conf&lt;/code&gt; on all nodes, backing up first,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-base&#34; data-lang=&#34;base&#34;&gt;cp /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/ssl.conf.ORIG
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The configuration of the &lt;code&gt;/etc/httpd/conf.d/ssl.conf&lt;/code&gt; &lt;strong&gt;does&lt;/strong&gt; change depending on the Stroom scenario deployed. In the following we will indicate
differences by tagged sub-headings. If the configuration applies irrespective of scenario, then &lt;strong&gt;All scenarios&lt;/strong&gt; is the tag, else the tag indicated the
type of Stroom deployment.&lt;/p&gt;
&lt;h4 id=&#34;sslconf-http-to-https-redirection---all-scenarios&#34;&gt;ssl.conf: HTTP to HTTPS Redirection - All scenarios&lt;/h4&gt;
&lt;p&gt;Before the &lt;VirtualHost _default_:443&gt; context we add http to https redirection by adding the directives (noting we specify the actual server name)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
  ServerName stroomp00.strmdev00.org
  Redirect permanent &amp;quot;/&amp;quot; &amp;quot;https://stroomp00.strmdev00.org/&amp;quot;
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is, we change&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
## SSL Virtual Host Context
##

&amp;lt;VirtualHost _default_:443&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
## SSL Virtual Host Context
##

# Stroom Change: Start - Add http redirection to https
&amp;lt;VirtualHost *:80&amp;gt;
  ServerName stroomp00.strmdev00.org
  Redirect permanent &amp;quot;/&amp;quot; &amp;quot;https://stroomp00.strmdev00.org/&amp;quot;
&amp;lt;/VirtualHost&amp;gt;
# Stroom Change: End

&amp;lt;VirtualHost _default_:443&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;sslconf-virtualhost-directives---multi-node-application-and-proxy-deployment&#34;&gt;ssl.conf: VirtualHost directives - Multi Node &amp;lsquo;Application and Proxy&amp;rsquo; deployment&lt;/h4&gt;
&lt;p&gt;Within the &lt;VirtualHost _default_:443&gt; context we set the directives, in this case, we use the CNAME &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ServerName stroomp.strmdev00.org
JkMount /stroom* loadbalancer
JkMount /stroom/remoting/cluster* local
JkMount /stroom/datafeed* loadbalancer_proxy
JkMount /stroom/remoting* loadbalancer_proxy
JkMount /stroom/datafeed/direct* loadbalancer
JkOptions +ForwardKeySize +ForwardURICompat +ForwardSSLCertChain -ForwardDirectories
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is, we change&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
&amp;lt;VirtualHost _default_:443&amp;gt;

# General setup for the virtual host, inherited from global configuration
#DocumentRoot &amp;quot;/var/www/html&amp;quot;
#ServerName www.example.com:443

# Use separate log files for the SSL virtual host; note that LogLevel
# is not inherited from httpd.conf.
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
&amp;lt;VirtualHost _default_:443&amp;gt;

# General setup for the virtual host, inherited from global configuration
#DocumentRoot &amp;quot;/var/www/html&amp;quot;
#ServerName www.example.com:443
# Stroom Change: Start - Set servername and mod_jk connectivity
ServerName stroomp.strmdev00.org
JkMount /stroom* loadbalancer
JkMount /stroom/remoting/cluster* local
JkMount /stroom/datafeed* loadbalancer_proxy
JkMount /stroom/remoting* loadbalancer_proxy
JkMount /stroom/datafeed/direct* loadbalancer
JkOptions +ForwardKeySize +ForwardURICompat +ForwardSSLCertChain -ForwardDirectories
# Stroom Change: End

# Use separate log files for the SSL virtual host; note that LogLevel
# is not inherited from httpd.conf.
...
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;sslconf-virtualhost-directives---standalone-or-forwarding-proxy-deployment&#34;&gt;ssl.conf: VirtualHost directives - Standalone or Forwarding Proxy deployment&lt;/h4&gt;
&lt;p&gt;Within the &lt;VirtualHost _default_:443&gt; context set the directives, in this case, for a node named say &lt;code&gt;stroomfp0.strmdev00.org&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ServerName stroomfp0.strmdev00.org
JkMount /stroom/datafeed* local_proxy
JkOptions +ForwardKeySize +ForwardURICompat +ForwardSSLCertChain -ForwardDirectories
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is, we change&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
&amp;lt;VirtualHost _default_:443&amp;gt;

# General setup for the virtual host, inherited from global configuration
#DocumentRoot &amp;quot;/var/www/html&amp;quot;
#ServerName www.example.com:443

# Use separate log files for the SSL virtual host; note that LogLevel
# is not inherited from httpd.conf.
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
&amp;lt;VirtualHost _default_:443&amp;gt;

# General setup for the virtual host, inherited from global configuration
#DocumentRoot &amp;quot;/var/www/html&amp;quot;
#ServerName www.example.com:443
# Stroom Change: Start - Set servername and mod_jk connectivity
ServerName stroomfp0.strmdev00.org
JkMount /stroom/datafeed* local_proxy
JkOptions +ForwardKeySize +ForwardURICompat +ForwardSSLCertChain -ForwardDirectories
# Stroom Change: End

# Use separate log files for the SSL virtual host; note that LogLevel
# is not inherited from httpd.conf.
...
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;sslconf-virtualhost-directives---single-node-application-and-proxy-deployment&#34;&gt;ssl.conf: VirtualHost directives - Single Node &amp;lsquo;Application and Proxy&amp;rsquo; deployment&lt;/h4&gt;
&lt;p&gt;Within the &lt;VirtualHost _default_:443&gt; context set the directives, in this case, for a node name &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ServerName stroomp00.strmdev00.org
JkMount /stroom* local
JkMount /stroom/remoting/cluster* local
JkMount /stroom/datafeed* local_proxy
JkMount /stroom/remoting* local_proxy
JkMount /stroom/datafeed/direct* local
JkOptions +ForwardKeySize +ForwardURICompat +ForwardSSLCertChain -ForwardDirectories
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is, we change&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
&amp;lt;VirtualHost _default_:443&amp;gt;

# General setup for the virtual host, inherited from global configuration
#DocumentRoot &amp;quot;/var/www/html&amp;quot;
#ServerName www.example.com:443

# Use separate log files for the SSL virtual host; note that LogLevel
# is not inherited from httpd.conf.
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
&amp;lt;VirtualHost _default_:443&amp;gt;

# General setup for the virtual host, inherited from global configuration
#DocumentRoot &amp;quot;/var/www/html&amp;quot;
#ServerName www.example.com:443
# Stroom Change: Start - Set servername and mod_jk connectivity
ServerName stroomp00.strmdev00.org
JkMount /stroom* local
JkMount /stroom/remoting/cluster* local
JkMount /stroom/datafeed* local_proxy
JkMount /stroom/remoting* local_proxy
JkMount /stroom/datafeed/direct* local
JkOptions +ForwardKeySize +ForwardURICompat +ForwardSSLCertChain -ForwardDirectories
# Stroom Change: End

# Use separate log files for the SSL virtual host; note that LogLevel
# is not inherited from httpd.conf.
...
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;sslconf-certificate-file-changes---all-scenarios&#34;&gt;ssl.conf: Certificate file changes - All scenarios&lt;/h4&gt;
&lt;p&gt;We replace the standard certificate files with the generated certificates. In the example below, we are using the multi node scenario, in
that the key file names are &lt;code&gt;stroomp.crt&lt;/code&gt; and &lt;code&gt;stroomp.key&lt;/code&gt;. For other scenarios, use the appropriate file names generated. We replace&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SSLCertificateFile /etc/pki/tls/certs/localhost.crt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SSLCertificateFile /home/stroomuser/stroom-jks/public/stroomp.crt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SSLCertificateKeyFile /etc/pki/tls/private/localhost.key
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SSLCertificateKeyFile /home/stroomuser/stroom-jks/private/stroomp.key
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is, change&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
# pass phrase.  Note that a kill -HUP will prompt again.  A new
# certificate can be generated using the genkey(1) command.
SSLCertificateFile /etc/pki/tls/certs/localhost.crt

#   Server Private Key:
#   If the key is not combined with the certificate, use this
#   directive to point at the key file.  Keep in mind that if
#   you&#39;ve both a RSA and a DSA private key you can configure
#   both in parallel (to also allow the use of DSA ciphers, etc.)
SSLCertificateKeyFile /etc/pki/tls/private/localhost.key

#   Server Certificate Chain:
#   Point SSLCertificateChainFile at a file containing the
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
# pass phrase.  Note that a kill -HUP will prompt again.  A new
# certificate can be generated using the genkey(1) command.
# Stroom Change: Start - Replace with Stroom server certificate
# SSLCertificateFile /etc/pki/tls/certs/localhost.crt
SSLCertificateFile /home/stroomuser/stroom-jks/public/stroomp.crt
# Stroom Change: End

#   Server Private Key:
#   If the key is not combined with the certificate, use this
#   directive to point at the key file.  Keep in mind that if
#   you&#39;ve both a RSA and a DSA private key you can configure
#   both in parallel (to also allow the use of DSA ciphers, etc.)
# Stroom Change: Start - Replace with Stroom server private key file
# SSLCertificateKeyFile /etc/pki/tls/private/localhost.key
SSLCertificateKeyFile /home/stroomuser/stroom-jks/private/stroomp.key
# Stroom Change: End

#   Server Certificate Chain:
#   Point SSLCertificateChainFile at a file containing the
...
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;sslconf-certificate-bundleno-ca-verification---all-scenarios&#34;&gt;ssl.conf: Certificate Bundle/NO-CA Verification - All scenarios&lt;/h4&gt;
&lt;p&gt;If you have signed your Stroom server certificate with a Certificate Authority, then change&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to be your own certificate bundle which you should probably store as &lt;code&gt;~stroomuser/stroom-jks/public/stroomp-ca-bundle.crt&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now if you are using a self signed certificate, you will need to set the Client Authentication to have a value of&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SSLVerifyClient optional_no_ca
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;noting that this may change if you actually use a CA.
That is, changing&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
#   Client Authentication (Type):
#   Client certificate verification type and depth.  Types are
#   none, optional, require and optional_no_ca.  Depth is a
#   number which specifies how deeply to verify the certificate
#   issuer chain before deciding the certificate is not valid.
#SSLVerifyClient require
#SSLVerifyDepth  10

#   Access Control:
#   With SSLRequire you can do per-directory access control based
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
#   Client Authentication (Type):
#   Client certificate verification type and depth.  Types are
#   none, optional, require and optional_no_ca.  Depth is a
#   number which specifies how deeply to verify the certificate
#   issuer chain before deciding the certificate is not valid.
#SSLVerifyClient require
#SSLVerifyDepth  10
# Stroom Change: Start - Set optional_no_ca (given we have a self signed certificate)
SSLVerifyClient optional_no_ca
# Stroom Change: End

#   Access Control:
#   With SSLRequire you can do per-directory access control based
...
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;sslconf-servlet-protection---single-or-multi-node-scenarios-not-for-standaloneforwarding-proxy&#34;&gt;ssl.conf: Servlet Protection - Single or Multi Node scenarios (not for Standalone/Forwarding Proxy)&lt;/h4&gt;
&lt;p&gt;We now need to secure certain Stroom Application servlets, to ensure they are only accessed under appropriate control.&lt;/p&gt;
&lt;p&gt;This set of servlets will be accessible by all nodes in the subnet 192.168.2 (as well as localhost). We achieve this by adding after the example Location directives&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Location ~ &amp;quot;stroom/(status|echo|sessionList|debug)&amp;quot; &amp;gt;
 Require all denied
 Require ip 127.0.0.1 192.168.2
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We further restrict the clustercall and export servlets to just the localhost. If we had multiple Stroom processing nodes, you would specify each node, or preferably, the subnet they are on. In our multi node case this is 192.168.2.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Location ~ &amp;quot;stroom/export/|stroom/remoting/clustercall.rpc&amp;quot; &amp;gt;
 Require all denied
 Require ip 127.0.0.1 192.168.2
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is, the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
#            and %{TIME_WDAY} &amp;gt;= 1 and %{TIME_WDAY} &amp;lt;= 5 \
#            and %{TIME_HOUR} &amp;gt;= 8 and %{TIME_HOUR} &amp;lt;= 20       ) \
#           or %{REMOTE_ADDR} =~ m/^192\.76\.162\.[0-9]+$/
#&amp;lt;/Location&amp;gt;

#   SSL Engine Options:
#   Set various options for the SSL engine.
#   o FakeBasicAuth:
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;changes to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
#            and %{TIME_WDAY} &amp;gt;= 1 and %{TIME_WDAY} &amp;lt;= 5 \
#            and %{TIME_HOUR} &amp;gt;= 8 and %{TIME_HOUR} &amp;lt;= 20       ) \
#           or %{REMOTE_ADDR} =~ m/^192\.76\.162\.[0-9]+$/
#&amp;lt;/Location&amp;gt;

# Stroom Change: Start - Lock access to certain servlets
&amp;lt;Location ~ &amp;quot;stroom/(status|echo|sessionList|debug)&amp;quot; &amp;gt;
 Require all denied
 Require ip 127.0.0.1 192.168.2
&amp;lt;/Location&amp;gt;
# Lock these Servlets more securely - to just localhost and processing node(s)
&amp;lt;Location ~ &amp;quot;stroom/export/|stroom/remoting/clustercall.rpc&amp;quot; &amp;gt;
 Require all denied
 Require ip 127.0.0.1 192.168.2
&amp;lt;/Location&amp;gt;
# Stroom Change: End

#   SSL Engine Options:
#   Set various options for the SSL engine.
#   o FakeBasicAuth:
...
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;sslconf-log-formats---all-scenarios&#34;&gt;ssl.conf: Log formats - All scenarios&lt;/h4&gt;
&lt;p&gt;Finally, as we make use of the Black Box Apache log format, we replace the standard format&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CustomLog logs/ssl_request_log \
        &amp;quot;%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \&amp;quot;%r\&amp;quot; %b&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;with&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CustomLog logs/ssl_request_log blackboxSSLUser
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That is, change&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
#   Per-Server Logging:
#   The home of a custom SSL log file. Use this when you want a
#   compact non-error SSL logfile on a virtual host basis.
CustomLog logs/ssl_request_log \
          &amp;quot;%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \&amp;quot;%r\&amp;quot; %b&amp;quot;

&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
#   Per-Server Logging:
#   The home of a custom SSL log file. Use this when you want a
#   compact non-error SSL logfile on a virtual host basis.
# Stroom Change: Start - Change ssl_request log to use our BlackBox format
# CustomLog logs/ssl_request_log \
#           &amp;quot;%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \&amp;quot;%r\&amp;quot; %b&amp;quot;
CustomLog logs/ssl_request_log blackboxSSLUser
# Stroom Change: End

&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Remember, in the case of Multi node stroom Application servers, deploy this file on all servers.&lt;/p&gt;
&lt;h3 id=&#34;apache-mod_jk-configuration&#34;&gt;Apache Mod_JK configuration&lt;/h3&gt;
&lt;p&gt;Apache Mod_JK has two configuration files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/etc/httpd/conf.d/mod_jk.conf - for the http server configuration&lt;/li&gt;
&lt;li&gt;/etc/httpd/conf/workers.properties - to configure the Tomcat workers&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In multi node scenarios, &lt;code&gt;/etc/httpd/conf.d/mod_jk.conf&lt;/code&gt; is the same on all servers, but the &lt;code&gt;/etc/httpd/conf/workers.properties&lt;/code&gt; file is different.
The contents of these two configuration files differ depending on the Stroom deployment. The following provide the various deployment scenarios.&lt;/p&gt;
&lt;h4 id=&#34;mod_jk-multi-node-application-and-proxy-deployment&#34;&gt;Mod_JK Multi Node Application and Proxy Deployment&lt;/h4&gt;
&lt;p&gt;For a Stroom Multi node Application and Proxy server,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we configure &lt;code&gt;/etc/httpd/conf.d/mod_jk.conf&lt;/code&gt; as per&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/httpd/conf.d/mod_jk.conf
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;LoadModule jk_module modules/mod_jk.so\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkWorkersFile conf/workers.properties\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkLogFile logs/mod_jk.log\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkLogLevel info\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkLogStampFormat  &amp;#34;[%%a %%b %%d %%H:%%M:%%S %%Y]&amp;#34;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkOptions +ForwardKeySize +ForwardURICompat +ForwardSSLCertChain -ForwardDirectories\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkRequestLogFormat &amp;#34;%%w %%V %%T&amp;#34;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom* loadbalancer\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom/remoting/cluster* local\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom/datafeed* loadbalancer_proxy\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom/remoting* loadbalancer_proxy\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom/datafeed/direct* loadbalancer\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Note: Replaced JkShmFile logs/jk.shm due to SELinux issues. Refer to\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=225452\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# The following makes use of the existing /run/httpd directory\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkShmFile run/jk.shm\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;Location /jkstatus/&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  JkMount status\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  Order deny,allow\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  Deny from all\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  Allow from 127.0.0.1\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;/Location&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;we configure &lt;code&gt;/etc/httpd/conf/workers.properties&lt;/code&gt; as per&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since we are deploying for a cluster with load balancing, we need a &lt;em&gt;workers.properties&lt;/em&gt; file per node. Executing the following will result in two files (&lt;em&gt;workers.properties.stroomp00&lt;/em&gt; and &lt;em&gt;workers.properties.stroomp01&lt;/em&gt;) which should be deployed to their respective servers.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#366&#34;&gt;cd&lt;/span&gt; /tmp
&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;# Set the list of nodes&lt;/span&gt;
&lt;span style=&#34;color:#033&#34;&gt;Nodes&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;stroomp00.strmdev00.org stroomp01.strmdev00.org&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; oN in &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;Nodes&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;do&lt;/span&gt;
  &lt;span style=&#34;color:#033&#34;&gt;_n&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;oN&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; | cut -f1 -d&lt;span style=&#34;color:#c30;font-weight:bold&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;
  &lt;span style=&#34;color:#555&#34;&gt;(&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Workers.properties for Stroom Cluster member: %s %s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;oN&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.list=loadbalancer,loadbalancer_proxy,local,local_proxy,status\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#033&#34;&gt;L_t&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#033&#34;&gt;Lp_t&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;for&lt;/span&gt; FQDN in &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;Nodes&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;FQDN&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; | cut -f1 -d&lt;span style=&#34;color:#c30;font-weight:bold&#34;&gt;\.&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.port=8009\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.host=%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;FQDN&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.type=ajp13\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.lbfactor=1\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.max_packet_size=65536\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.port=9009\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.host=%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;FQDN&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.type=ajp13\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.lbfactor=1\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.max_packet_size=65536\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#033&#34;&gt;L_t&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;L_t&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;,&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#033&#34;&gt;Lp_t&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;Lp_t&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;_proxy,&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;done&lt;/span&gt;
  &lt;span style=&#34;color:#033&#34;&gt;L&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;$L_t&lt;/span&gt; | sed -e &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;s/.$//&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;
  &lt;span style=&#34;color:#033&#34;&gt;Lp&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#366&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;$Lp_t&lt;/span&gt; | sed -e &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;s/.$//&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.loadbalancer.type=lb\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.loadbalancer.balance_workers=%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;$L&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.loadbalancer.sticky_session=1\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.loadbalancer_proxy.type=lb\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.loadbalancer_proxy.balance_workers=%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#033&#34;&gt;$Lp&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.loadbalancer_proxy.sticky_session=1\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local.type=lb\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local.balance_workers=%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;_n&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local.sticky_session=1\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local_proxy.type=lb\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local_proxy.balance_workers=%s_proxy\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;_n&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local_proxy.sticky_session=1\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.status.type=status\n&amp;#39;&lt;/span&gt;
  &lt;span style=&#34;color:#555&#34;&gt;)&lt;/span&gt; &amp;gt; workers.properties.&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;_n&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
  chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; workers.properties.&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;_n&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now depending in the node you are on, copy the relevant workers.properties.nodename file to /etc/httpd/conf/workers.properties. The following command makes this simple.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cp workers.properties.&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;hostname -s&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt; /etc/httpd/conf/workers.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you were to add an additional node to a multi node cluster, say the node &lt;code&gt;stroomp02.strmdev00.org&lt;/code&gt;, then you would re-run the above script with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;Nodes&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;stroomp00.strmdev00.org stroomp01.strmdev00.org stroomp02.strmdev00.org&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then redeploy all three files to the respective servers. Also note, that for the newly created workers.properties files for the existing nodes to
take effect you will need to restart the Apache Httpd service on both nodes.&lt;/p&gt;
&lt;p&gt;Remember, in multi node cluster deployments, the following files are the same and hence can be created on one node, but copied to the
others not forgetting to backup the other node&amp;rsquo;s original files. That is, the files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/var/www/html/index.html&lt;/li&gt;
&lt;li&gt;/etc/httpd/conf.d/mod_jk.conf&lt;/li&gt;
&lt;li&gt;/etc/httpd/conf/httpd.conf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;are to be the same on all nodes. Only the /etc/httpd/conf.d/ssl.conf and /etc/httpd/conf/workers.properties files change.&lt;/p&gt;
&lt;h4 id=&#34;mod_jk-standalone-or-forwarding-stroom-proxy-deployment&#34;&gt;Mod_JK Standalone or Forwarding Stroom Proxy Deployment&lt;/h4&gt;
&lt;p&gt;For a Stroom Standalone or Forwarding proxy,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we configure &lt;code&gt;/etc/httpd/conf.d/mod_jk.conf&lt;/code&gt; as per&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/httpd/conf.d/mod_jk.conf
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;LoadModule jk_module modules/mod_jk.so\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkWorkersFile conf/workers.properties\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkLogFile logs/mod_jk.log\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkLogLevel info\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkLogStampFormat  &amp;#34;[%%a %%b %%d %%H:%%M:%%S %%Y]&amp;#34;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkOptions +ForwardKeySize +ForwardURICompat +ForwardSSLCertChain -ForwardDirectories\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkRequestLogFormat &amp;#34;%%w %%V %%T&amp;#34;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom/datafeed* local_proxy\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Note: Replaced JkShmFile logs/jk.shm due to SELinux issues. Refer to\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=225452\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# The following makes use of the existing /run/httpd directory\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkShmFile run/jk.shm\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;Location /jkstatus/&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  JkMount status\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  Order deny,allow\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  Deny from all\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  Allow from 127.0.0.1\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;/Location&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;we configure &lt;code&gt;/etc/httpd/conf/workers.properties&lt;/code&gt; as per&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The variable &lt;strong&gt;N&lt;/strong&gt; in the script below is to be the node name (not FQDN) of your sever (i.e. stroomfp0).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;stroomfp0
&lt;span style=&#34;color:#033&#34;&gt;FQDN&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;hostname -f&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/httpd/conf/workers.properties
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.list=local_proxy,status\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.port=9009\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.host=%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;FQDN&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.type=ajp13\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.lbfactor=1\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local_proxy.type=lb\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local_proxy.balance_workers=%s_proxy\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local_proxy.sticky_session=1\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.status.type=status\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;mod_jk-single-node-application-and-proxy-deployment&#34;&gt;Mod_JK Single Node Application and Proxy Deployment&lt;/h4&gt;
&lt;p&gt;For a Stroom Single node Application and Proxy server,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we configure &lt;code&gt;/etc/httpd/conf.d/mod_jk.conf&lt;/code&gt; as per&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/httpd/conf.d/mod_jk.conf
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;LoadModule jk_module modules/mod_jk.so\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkWorkersFile conf/workers.properties\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkLogFile logs/mod_jk.log\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkLogLevel info\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkLogStampFormat  &amp;#34;[%%a %%b %%d %%H:%%M:%%S %%Y]&amp;#34;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkOptions +ForwardKeySize +ForwardURICompat +ForwardSSLCertChain -ForwardDirectories\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkRequestLogFormat &amp;#34;%%w %%V %%T&amp;#34;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom* local\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom/remoting/cluster* local\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom/datafeed* local_proxy\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom/remoting* local_proxy\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkMount /stroom/datafeed/direct* local\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Note: Replaced JkShmFile logs/jk.shm due to SELinux issues. Refer to\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=225452\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# The following makes use of the existing /run/httpd directory\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JkShmFile run/jk.shm\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;Location /jkstatus/&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  JkMount status\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  Order deny,allow\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  Deny from all\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  Allow from 127.0.0.1\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;/Location&amp;gt;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;we configure &lt;code&gt;/etc/httpd/conf/workers.properties&lt;/code&gt; as per&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The variable &lt;strong&gt;N&lt;/strong&gt; in the script below is to be the node name (not FQDN) of your sever (i.e. stroomp00).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;stroomp00
&lt;span style=&#34;color:#033&#34;&gt;FQDN&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;hostname -f&lt;span style=&#34;color:#c30&#34;&gt;`&lt;/span&gt;
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/httpd/conf/workers.properties
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.list=local,local_proxy,status\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.port=8009\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.host=%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;FQDN&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.type=ajp13\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.lbfactor=1\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s.max_packet_size=65536\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.port=9009\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.host=%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;FQDN&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.type=ajp13\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.lbfactor=1\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.%s_proxy.max_packet_size=65536\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local.type=lb\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local.balance_workers=%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local.sticky_session=1\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local_proxy.type=lb\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local_proxy.balance_workers=%s_proxy\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.local_proxy.sticky_session=1\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;worker.status.type=status\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;final-host-configuration-and-web-service-enablement&#34;&gt;Final host configuration and web service enablement&lt;/h2&gt;
&lt;p&gt;Now tidy up the SELinux context for access on all nodes and files via the commands&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;setsebool -P httpd_enable_homedirs on
setsebool -P httpd_can_network_connect on
chcon --reference /etc/httpd/conf.d/README /etc/httpd/conf.d/mod_jk.conf
chcon --reference /etc/httpd/conf/magic /etc/httpd/conf/workers.properties
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We also enable both http and https services via the firewall on all nodes. If you don&amp;rsquo;t want to present a http access point,
then don&amp;rsquo;t enable it in the firewall setting. This is done with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-service&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;http --permanent
firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-service&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;https --permanent
firewall-cmd --reload
firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --list-all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally enable then start the httpd service, correcting any errors. It should be noted that on any errors,
the suggestion of a systemctl status or viewing the journal are good, but also review information in the httpd error logs found in &lt;code&gt;/var/log/httpd/&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;systemctl &lt;span style=&#34;color:#366&#34;&gt;enable&lt;/span&gt; httpd.service
systemctl start httpd.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installnfshowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installnfshowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---nfs-installation-and-configuration&#34;&gt;Stroom HOWTO - NFS Installation and Configuration&lt;/h1&gt;
&lt;p&gt;The following is a HOWTO to assist users in the installation and set up of NFS to support the sharing of directories in a two node Stroom cluster or
add a new node to an existing cluster.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;p&gt;The following assumptions are used in this document.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the user has reasonable RHEL/Centos System administration skills&lt;/li&gt;
&lt;li&gt;installations are on Centos 7.3 minimal systems (fully patched)&lt;/li&gt;
&lt;li&gt;the user is or has deployed the example two node Stroom cluster storage hierarchy described &lt;a href=&#34;InstallHowTo.md#storage-scenario&#34; title=&#34;HOWTO Storage Scenario&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;the configuration of this NFS is NOT secure. It is highly recommended to improve it&amp;rsquo;s security in a production environment. This could include improved firewall configuration to limit NFS access, NFS4 with Kerberos etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;installation-of-nfs-software&#34;&gt;Installation of NFS software&lt;/h2&gt;
&lt;p&gt;We install NFS on each node, via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install nfs-utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and enable the relevant services, via&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-base&#34; data-lang=&#34;base&#34;&gt;sudo systemctl enable rpcbind
sudo systemctl enable nfs-server
sudo systemctl enable nfs-lock
sudo systemctl enable nfs-idmap
sudo systemctl start rpcbind
sudo systemctl start nfs-server
sudo systemctl start nfs-lock
sudo systemctl start nfs-idmap
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;configuration-of-nfs-exports&#34;&gt;Configuration of NFS exports&lt;/h2&gt;
&lt;p&gt;We now export the node&amp;rsquo;s /stroomdata directory (in case you want to share the working directories) by configuring /etc/exports. For simplicity sake, we will allow all nodes with the hostname nomenclature of stroomp*.strmdev00.org to mount the &lt;code&gt;/stroomdata&lt;/code&gt; directory. This means the same configuration applies to all nodes.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Share Stroom data directory
/stroomdata	stroomp*.strmdev00.org(rw,sync,no_root_squash)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This can be achieved with the following on both nodes&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo su -c &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;printf &amp;#39;# Share Stroom data directory\n&amp;#39; &amp;gt;&amp;gt; /etc/exports&amp;#34;&lt;/span&gt;
sudo su -c &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;printf &amp;#39;/stroomdata\tstroomp*.strmdev00.org(rw,sync,no_root_squash)\n&amp;#39; &amp;gt;&amp;gt; /etc/exports&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On both nodes restart the NFS service to ensure the above export takes effect via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl restart nfs-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;So that our nodes can offer their filesystems, we need to enable NFS access on the firewall.
This is done via&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-service&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;nfs --permanent
sudo firewall-cmd --reload
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --list-all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;test-mounting&#34;&gt;Test Mounting&lt;/h2&gt;
&lt;p&gt;You should do test mounts on each node.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mount -t nfs4 stroomp01.strmdev00.org:/stroomdata/stroom-data-p01 /stroomdata/stroom-data-p01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mount -t nfs4 stroomp00.strmdev00.org:/stroomdata/stroom-data-p00 /stroomdata/stroom-data-p00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are concerned you can&amp;rsquo;t see the mount with a &lt;code&gt;df&lt;/code&gt; try a &lt;code&gt;df --type=nfs4 -a&lt;/code&gt; or a &lt;code&gt;sudo df&lt;/code&gt;. Irrespective, once the mounting works, make the mounts permanent by adding the following to each node&amp;rsquo;s /etc/fstab file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;stroomp01.strmdev00.org:/stroomdata/stroom-data-p01 /stroomdata/stroom-data-p01 nfs4 soft,bg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;achieved with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo su -c &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;printf &amp;#39;stroomp01.strmdev00.org:/stroomdata/stroom-data-p01 /stroomdata/stroom-data-p01 nfs4 soft,bg\n&amp;#39; &amp;gt;&amp;gt; /etc/fstab&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;stroomp00.strmdev00.org:/stroomdata/stroom-data-p00 /stroomdata/stroom-data-p00 nfs4 soft,bg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;achieved with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo su -c &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;printf &amp;#39;stroomp00.strmdev00.org:/stroomdata/stroom-data-p00 /stroomdata/stroom-data-p00 nfs4 soft,bg\n&amp;#39; &amp;gt;&amp;gt; /etc/fstab&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this point reboot all processing nodes to ensure the directories mount automatically. You may need to give the nodes a minute to do this.&lt;/p&gt;
&lt;h2 id=&#34;addition-of-another-node&#34;&gt;Addition of another Node&lt;/h2&gt;
&lt;p&gt;If one needs to add another node to the cluster, lets say, &lt;code&gt;stroomp02.strmdev00.org&lt;/code&gt;, on which &lt;code&gt;/stroomdata&lt;/code&gt; follows the same storage hierarchy
as the existing nodes and all nodes have added mount points (directories) for this new node, you would take the following steps &lt;em&gt;in order&lt;/em&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Node: &lt;code&gt;stroomp02.strmdev00.org&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install NFS software as &lt;a href=&#34;InstallNFSHowTo.md#installation-of-nfs-software&#34; title=&#34;Installation of NFS Software&#34;&gt;above&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Configure the exports file as per&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo su -c &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;printf &amp;#39;# Share Stroom data directory\n&amp;#39; &amp;gt;&amp;gt; /etc/exports&amp;#34;&lt;/span&gt;
sudo su -c &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;printf &amp;#39;/stroomdata\tstroomp*.strmdev00.org(rw,sync,no_root_squash)\n&amp;#39; &amp;gt;&amp;gt; /etc/exports&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Restart the NFS service and make the firewall enable NFS access as per&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo systemctl restart nfs-server
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --add-service&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;nfs --permanent
sudo firewall-cmd --reload
sudo firewall-cmd --zone&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;public --list-all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Test mount the existing node file systems&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mount -t nfs4 stroomp00.strmdev00.org:/stroomdata/stroom-data-p00 /stroomdata/stroom-data-p00
sudo mount -t nfs4 stroomp01.strmdev00.org:/stroomdata/stroom-data-p01 /stroomdata/stroom-data-p01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Once the test mounts work, we make them permanent by adding the following to the /etc/fstab file.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;stroomp00.strmdev00.org:/home/stroomdata/stroom-data-p00 /home/stroomdata/stroom-data-p00 nfs4 soft,bg
stroomp01.strmdev00.org:/home/stroomdata/stroom-data-p01 /home/stroomdata/stroom-data-p01 nfs4 soft,bg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;achieved with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo su -c &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;printf &amp;#39;stroomp00.strmdev00.org:/stroomdata/stroom-data-p00 /stroomdata/stroom-data-p00 nfs4 soft,bg\n&amp;#39; &amp;gt;&amp;gt; /etc/fstab&amp;#34;&lt;/span&gt;
sudo su -c &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;printf &amp;#39;stroomp01.strmdev00.org:/stroomdata/stroom-data-p01 /stroomdata/stroom-data-p01 nfs4 soft,bg\n&amp;#39; &amp;gt;&amp;gt; /etc/fstab&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Node: &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt; &lt;strong&gt;and&lt;/strong&gt; &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Test mount the new node&amp;rsquo;s filesystem as per&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mount -t nfs4 stroomp02.strmdev00.org:/stroomdata/stroom-data-p02 /stroomdata/stroom-data-p02
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;Once the test mount works, make the mount permanent by adding the following to the /etc/fstab file&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;stroomp02.strmdev00.org:/stroomdata/stroom-data-p02 /stroomdata/stroom-data-p02 nfs4 soft,bg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;achieved with&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo su -c &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;printf &amp;#39;stroomp02.strmdev00.org:/stroomdata/stroom-data-p02 /stroomdata/stroom-data-p02 nfs4 soft,bg\n&amp;#39; &amp;gt;&amp;gt; /etc/fstab&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installnodeshowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installnodeshowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---node-cluster-url-setup&#34;&gt;Stroom HOWTO - Node Cluster URL Setup&lt;/h1&gt;
&lt;p&gt;In a Stroom cluster,
&lt;a href=&#34;../../user-guide/nodes.md&#34; title=&#34;Stroom Nodes&#34;&gt;Nodes&lt;/a&gt;
are expected to communicate with each other on port 8080 over http. To facilitate this, we need to set each node&amp;rsquo;s Cluster URL and the
following demonstrates this process.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;an account with the &lt;code&gt;Administrator&lt;/code&gt; Application &lt;a href=&#34;../../user-guide/roles.md&#34; title=&#34;Stroom Application Permissions&#34;&gt;Permission&lt;/a&gt; is currently logged in.&lt;/li&gt;
&lt;li&gt;we have a multi node Stroom cluster with two nodes, &lt;code&gt;stroomp00&lt;/code&gt; and &lt;code&gt;stroomp01&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;appropriate firewall configurations have been made&lt;/li&gt;
&lt;li&gt;in the scenario of adding a new node to our multi node deployment, the node added will be &lt;code&gt;stroomp02&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configure-two-nodes&#34;&gt;Configure Two Nodes&lt;/h2&gt;
&lt;p&gt;To configure the nodes, move to the &lt;code&gt;Monitoring&lt;/code&gt; item of the &lt;strong&gt;Main Menu&lt;/strong&gt; and select it to bring up the &lt;code&gt;Monitoring&lt;/code&gt; sub-menu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-MonitoringSubmenu-00.png&#34; alt=&#34;Stroom UI Node Management - Monitoring Menu&#34; title=&#34;Stroom UI Monitoring sub-menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;then move down and select the &lt;code&gt;Nodes&lt;/code&gt; sub-item to be presented with the &lt;code&gt;Nodes&lt;/code&gt; configuration tab as seen below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-NodeClusterSetup-01.png&#34; alt=&#34;Stroom UI Node Management - Management Tab&#34; title=&#34;Stroom UI Node Management - management tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;To set &lt;code&gt;stroomp00&lt;/code&gt;&amp;rsquo;s Cluster URL, move the it&amp;rsquo;s line in the display and select it. It will be highlighted.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-NodeClusterSetup-02.png&#34; alt=&#34;Stroom UI Node Management - Management Tab - Select first node&#34; title=&#34;Stroom UI Node Management - select first node&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then move the cursor to the &lt;em&gt;Edit Node&lt;/em&gt; icon &lt;img src=&#34;../resources/icons/edit.png&#34; alt=&#34;EditNode&#34; title=&#34;Edit Node&#34;&gt; in the top left of
the &lt;code&gt;Nodes&lt;/code&gt; tab and select it. On selection the &lt;code&gt;Edit Node&lt;/code&gt; configuration window will be displayed and into
the &lt;strong&gt;Cluster URL:&lt;/strong&gt; entry box, enter the first node&amp;rsquo;s URL of &lt;code&gt;http://stroomp00.strmdev00.org:8080/stroom/clustercall.rpc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-NodeClusterSetup-03.png&#34; alt=&#34;Stroom UI Node Management - First Node setup&#34; title=&#34;Stroom UI Node Management - set clustercall url for first node&#34;&gt;&lt;/p&gt;
&lt;p&gt;then press the
&lt;img src=&#34;../resources/icons/buttonOk.png&#34; alt=&#34;Stroom UI OkButton&#34; title=&#34;Stroom UI OkButton&#34;&gt;
at which we see the &lt;em&gt;Cluster URL&lt;/em&gt; has been set for the first node as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-NodeClusterSetup-04.png&#34; alt=&#34;Stroom UI Node Management - First Node set&#34; title=&#34;Stroom UI Node Management - set clustercall url on first node&#34;&gt;&lt;/p&gt;
&lt;p&gt;We next select the second node&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-NodeClusterSetup-05.png&#34; alt=&#34;Stroom UI Node Management - Management Tab - Select second node&#34; title=&#34;Stroom UI Node Management - select second node&#34;&gt;&lt;/p&gt;
&lt;p&gt;then move the cursor to the &lt;em&gt;Edit Node&lt;/em&gt; icon &lt;img src=&#34;../resources/icons/edit.png&#34; alt=&#34;EditNode&#34; title=&#34;Edit Node&#34;&gt; in the top left of
the &lt;code&gt;Nodes&lt;/code&gt; tab and select it. On selection the &lt;code&gt;Edit Node&lt;/code&gt; configuration window will be displayed and into
the &lt;strong&gt;Cluster URL:&lt;/strong&gt; entry box, enter the second node&amp;rsquo;s URL of &lt;code&gt;http://stroomp01.strmdev00.org:8080/stroom/clustercall.rpc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-NodeClusterSetup-06.png&#34; alt=&#34;Stroom UI Node Management - Second Node setup&#34; title=&#34;Stroom UI Node Management - set clustercall url for second node&#34;&gt;&lt;/p&gt;
&lt;p&gt;then press the
&lt;img src=&#34;../resources/icons/buttonOk.png&#34; alt=&#34;Stroom UI OkButton&#34; title=&#34;Stroom UI OkButton&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this we will see both nodes have the &lt;strong&gt;Cluster URLs&lt;/strong&gt; set.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-NodeClusterSetup-07.png&#34; alt=&#34;Stroom UI Node Management - Both Nodes setup&#34; title=&#34;Stroom UI Node Management - both nodes setup&#34;&gt;.&lt;/p&gt;
&lt;p&gt;You may need to press the &lt;em&gt;Refresh&lt;/em&gt; icon
&lt;img src=&#34;../resources/icons/refresh.png&#34; alt=&#34;Stroom UI Refresh&#34; title=&#34;Stroom UI RefreshButton&#34;&gt;
found at top left of &lt;code&gt;Nodes&lt;/code&gt; configuration tab, until both nodes show healthy pings.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-NodeClusterSetup-08.png&#34; alt=&#34;Stroom UI Node Management - Both Nodes ping&#34; title=&#34;Stroom UI Node Management - both nodes ping&#34;&gt;.&lt;/p&gt;
&lt;p&gt;If you do not get ping results for each node, then they are not configured correctly. In that situation,
review all log files and processes that you have performed.&lt;/p&gt;
&lt;p&gt;Once you have set the Cluster URLs of each node you should also set the &lt;em&gt;master assignment priority&lt;/em&gt; for each node to
be different to all of the others. In the image above both have been assigned equal priority - &lt;code&gt;1&lt;/code&gt;. We will
change &lt;code&gt;stroomp00&lt;/code&gt; to have a different priority - &lt;code&gt;3&lt;/code&gt;. You should note that the node with the highest
priority gains the &lt;code&gt;Master&lt;/code&gt; node status.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-NodeClusterSetup-09.png&#34; alt=&#34;Stroom UI Node Management - Node priority&#34; title=&#34;Stroom UI Node Management - set node priorities&#34;&gt;.&lt;/p&gt;
&lt;h2 id=&#34;configure-new-node&#34;&gt;Configure New Node&lt;/h2&gt;
&lt;p&gt;When one expands a Multi Node Stroom cluster deployment, after the installation of the Stroom Proxy and Application software and services on
the new node, one has to configure the new node&amp;rsquo;s Cluster URL.&lt;/p&gt;
&lt;p&gt;To configure the new node, move to the &lt;code&gt;Monitoring&lt;/code&gt; item of the &lt;strong&gt;Main Menu&lt;/strong&gt; and select it to bring up the &lt;code&gt;Monitoring&lt;/code&gt; sub-menu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-MonitoringSubmenu-00.png&#34; alt=&#34;Stroom UI Node Management - Monitoring Menu&#34; title=&#34;Stroom UI Monitoring sub-menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;then move down and select the &lt;code&gt;Nodes&lt;/code&gt; sub-item to be presented with the &lt;code&gt;Nodes&lt;/code&gt; configuration tab as seen below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-AddNewNode-00.png&#34; alt=&#34;Stroom UI New Node Management - Management Tab&#34; title=&#34;Stroom UI New Node Management - management tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;To set &lt;code&gt;stroomp02&lt;/code&gt;&amp;rsquo;s Cluster URL, move the it&amp;rsquo;s line in the display and select it. It will be highlighted.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-AddNewNode-01.png&#34; alt=&#34;Stroom UI Node Management - Management Tab - Select new node&#34; title=&#34;Stroom UI Node Management - select new node&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then move the cursor to the &lt;em&gt;Edit Node&lt;/em&gt; icon &lt;img src=&#34;../resources/icons/edit.png&#34; alt=&#34;EditNode&#34; title=&#34;Edit Node&#34;&gt; in the top left
of the &lt;code&gt;Nodes&lt;/code&gt; tab and select it. On selection the &lt;code&gt;Edit Node&lt;/code&gt; configuration window will be displayed
and into the &lt;strong&gt;Cluster URL:&lt;/strong&gt; entry box, enter the first node&amp;rsquo;s URL of &lt;code&gt;http://stroomp02.strmdev00.org:8080/stroom/clustercall.rpc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-AddNewNode-02.png&#34; alt=&#34;Stroom UI New Node Management - Node setup&#34; title=&#34;Stroom UI New Node Management - set clustercall url for new node&#34;&gt;&lt;/p&gt;
&lt;p&gt;then press the
&lt;img src=&#34;../resources/icons/buttonOk.png&#34; alt=&#34;Stroom UI OkButton&#34; title=&#34;Stroom UI OkButton&#34;&gt;
button at which we see the &lt;em&gt;Cluster URL&lt;/em&gt; has been set for the first node as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-AddNewNode-03.png&#34; alt=&#34;Stroom UI New Node Management - New Node set&#34; title=&#34;Stroom UI New Node Management - set clustercall url on new node&#34;&gt;&lt;/p&gt;
&lt;p&gt;You need to press the &lt;em&gt;Refresh&lt;/em&gt; icon
&lt;img src=&#34;../resources/icons/refresh.png&#34; alt=&#34;Stroom UI Refresh&#34; title=&#34;Stroom UI RefreshButton&#34;&gt;
found at top left of &lt;code&gt;Nodes&lt;/code&gt; configuration tab, until the new node shows a healthy ping.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-AddNewNode-04.png&#34; alt=&#34;Stroom UI New Node Management - All Nodes ping&#34; title=&#34;Stroom UI New Node Management - all nodes ping&#34;&gt;.&lt;/p&gt;
&lt;p&gt;If you do not get a ping results for the new node, then it is not configured correctly. In that situation, review all log files
and processes that you have performed.&lt;/p&gt;
&lt;p&gt;Once you have set the Cluster URL you should also set the &lt;em&gt;master assignment priority&lt;/em&gt; for each node to
be different to all of the others. In the image above both &lt;code&gt;stroomp01&lt;/code&gt; and the new node, &lt;code&gt;stroomp02&lt;/code&gt;, have been
assigned equal priority - &lt;code&gt;1&lt;/code&gt;. We will change &lt;code&gt;stroomp01&lt;/code&gt; to have a different priority - &lt;code&gt;2&lt;/code&gt;. You should note that the node
with the highest priority maintains the &lt;code&gt;Master&lt;/code&gt; node status.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-AddNewNode-05.png&#34; alt=&#34;Stroom UI New Node Management - Node priority&#34; title=&#34;Stroom UI New Node Management - set node priorities&#34;&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installprocessingusersetuphowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installprocessingusersetuphowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---processing-user-setup&#34;&gt;Stroom HOWTO - Processing User Setup&lt;/h1&gt;
&lt;p&gt;This HOWTO demonstrates how to set up various files and scripts that the Stroom processing user requires.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;the user has reasonable RHEL/Centos System administration skills&lt;/li&gt;
&lt;li&gt;installation is on a fully patched minimal Centos 7.3 instance.&lt;/li&gt;
&lt;li&gt;the application user &lt;code&gt;stroomuser&lt;/code&gt; has been created&lt;/li&gt;
&lt;li&gt;the user is deploying for either&lt;/li&gt;
&lt;li&gt;the example two node Stroom cluster whose storage is described &lt;a href=&#34;InstallHowTo.md#storage-scenario&#34; title=&#34;HOWTO Storage Scenario&#34;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;a simple Forwarding or Standalone Proxy&lt;/li&gt;
&lt;li&gt;adding a node to an existing Stroom cluster&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;set-up-the-stroom-processing-users-environment&#34;&gt;Set up the Stroom processing user&amp;rsquo;s environment&lt;/h2&gt;
&lt;p&gt;To automate the running of a Stroom Proxy or Application service under out Stroom processing user, &lt;code&gt;stroomuser&lt;/code&gt;, there are a number of configuration files and scripts we need to deploy.&lt;/p&gt;
&lt;p&gt;We first become the stroomuser&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;environment-variable-files&#34;&gt;Environment Variable files&lt;/h3&gt;
&lt;p&gt;When either a Stroom Proxy or Application starts, it needs predefined environment variables. We set these up in the &lt;code&gt;stroomuser&lt;/code&gt; home directory.
We need two files for this. The first is for the Stroom processes themselves and the second is for the Stroom systemd service we deploy. The
difference is that for the Stroom processes, we need to &lt;code&gt;export&lt;/code&gt; the environment variables where as the Stroom systemd service file just needs to read them.&lt;/p&gt;
&lt;p&gt;The JAVA_HOME and PATH variables are to support Java running the Tomcat instances.
The STROOM_TMP variable is set to a working area for the Stroom Application to use. The application accesses this environment variable internally
via the ${stroom_tmp} context variable. Note that we only need the STROOM_TMP variable for Stroom Application deployments, so one
could remove it from the files for a Forwarding or Standalone proxy deployment.&lt;/p&gt;
&lt;p&gt;With respect to the working area, we will make use of the &lt;a href=&#34;InstallHowTo.md#storage-scenario&#34; title=&#34;HOWTO Storage Scenario&#34;&gt;Storage Scenario&lt;/a&gt; we have defined and hence use the directory &lt;code&gt;/stroomdata/stroom-working-p_nn_&lt;/code&gt; where &lt;em&gt;nn&lt;/em&gt; is the hostname node number (i.e 00 for host stroomp00, 01 for host stroomp01, etc).&lt;/p&gt;
&lt;p&gt;So, for the first node, &lt;em&gt;00&lt;/em&gt;, we run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f60&#34;&gt;00&lt;/span&gt;
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;~/env.sh
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Environment variables for Stroom services\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;export JAVA_HOME=/usr/lib/jvm/java-1.8.0\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;export PATH=${JAVA_HOME}/bin:${PATH}\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;export STROOM_TMP=/stroomdata/stroom-working-p%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;~/env_service.sh
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Environment variables for Stroom services, executed out of systemd service\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JAVA_HOME=/usr/lib/jvm/java-1.8.0\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;PATH=${JAVA_HOME}/bin:${PATH}\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;STROOM_TMP=/stroomdata/stroom-working-p%s\n&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;N&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;then we can change the &lt;strong&gt;N&lt;/strong&gt; variable on each successive node and run the above.&lt;/p&gt;
&lt;p&gt;Alternately, for a Stroom Forwarding or Standalone proxy, the following would be sufficient&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;~/env.sh
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Environment variables for Stroom services\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;export JAVA_HOME=/usr/lib/jvm/java-1.8.0\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;export PATH=${JAVA_HOME}/bin:${PATH}\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;~/env_service.sh
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Environment variables for Stroom services, executed out of systemd service\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;JAVA_HOME=/usr/lib/jvm/java-1.8.0\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;PATH=${JAVA_HOME}/bin:${PATH}\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And we integrate the environment into our bash instantiation script as well as setting up useful bash functions. This is the same for all nodes.
Note that the &lt;code&gt;T&lt;/code&gt; and &lt;code&gt;Tp&lt;/code&gt; aliases are always installed whether they are of use of not. IE a Standalone or Forwarding Stroom Proxy could make
no use of the &lt;code&gt;T&lt;/code&gt; shell alias.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;~/.bashrc
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;. ~/env.sh\n\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Simple functions to support Stroom\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# T - continually monitor (tail) the Stroom application log\n&amp;#39;&lt;/span&gt;  &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Tp - continually monitor (tail) the Stroom proxy log\n&amp;#39;&lt;/span&gt;  &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;function T {\n  tail --follow=name ~/stroom-app/instance/logs/stroom.log\n}\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;function Tp {\n  tail --follow=name ~/stroom-proxy/instance/logs/stroom.log\n}\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And test it has set up correctly&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;. ./.bashrc
which java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which should return &lt;code&gt;/usr/lib/jvm/java-1.8.0/bin/java&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;establish-simple-startstop-scripts&#34;&gt;Establish Simple Start/Stop Scripts&lt;/h3&gt;
&lt;p&gt;We create some simple start/stop scripts that start, or stop, all the available Stroom services. At this point, it&amp;rsquo;s just the Stroom application and proxy.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt; ! -d ~/bin &lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;then&lt;/span&gt; mkdir ~/bin; &lt;span style=&#34;color:#069;font-weight:bold&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;~/bin/StartServices.sh
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;#!/bin/bash\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Start all Stroom services\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Set list of services\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Services=&amp;#34;stroom-proxy stroom-app&amp;#34;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;for service in ${Services}; do\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  if [ -f ${service}/bin/start.sh ]; then\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;    bash ${service}/bin/start.sh\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  fi\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;done\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;~/bin/StopServices.sh
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;#!/bin/bash\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Stop all Stroom services\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Set list of services\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Services=&amp;#34;stroom-proxy stroom-app&amp;#34;\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;for service in ${Services}; do\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  if [ -f ${service}/bin/stop.sh ]; then\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;    bash ${service}/bin/stop.sh\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;  fi\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;done\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;750&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Although one can modify the above for Stroom Forwarding or Standalone Proxy deployments, there is no issue if you use the same scripts.&lt;/p&gt;
&lt;h2 id=&#34;establish-and-deploy-systemd-services&#34;&gt;Establish and Deploy Systemd services&lt;/h2&gt;
&lt;h3 id=&#34;processing-or-proxy-node&#34;&gt;Processing or Proxy node&lt;/h3&gt;
&lt;p&gt;For a standard Stroom Processing or Proxy nodes, we can use the following service script.
(Noting this is done as root)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo bash
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/systemd/system/stroom-services.service
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Install in /etc/systemd/system\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Enable via systemctl enable stroom-services.service\n\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Unit]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Who we are\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Description=Stroom Service\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# We want the network and httpd up before us\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Requires=network-online.target httpd.service\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;After= httpd.service network-online.target\n\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Service]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Source our environment file so the Stroom service start/stop scripts work\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;EnvironmentFile=/home/stroomuser/env_service.sh\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Type=oneshot\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ExecStart=/bin/su --login stroomuser /home/stroomuser/bin/StartServices.sh\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ExecStop=/bin/su --login stroomuser /home/stroomuser/bin/StopServices.sh\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;RemainAfterExit=yes\n\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Install]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;WantedBy=multi-user.target\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;single-node-scenario-with-local-database&#34;&gt;Single Node Scenario with local database&lt;/h3&gt;
&lt;p&gt;Should you only have a deployment where the database is on a processing node, use the following service script. The only
difference is the Stroom dependency on the database. The database dependency below is for the MariaDB database. If you had
installed the MySQL Community database, then replace &lt;code&gt;mariadb.service&lt;/code&gt; with &lt;code&gt;mysqld.service&lt;/code&gt;.
(Noting this is done as root)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo bash
&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;/etc/systemd/system/stroom-services.service
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Install in /etc/systemd/system\n&amp;#39;&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Enable via systemctl enable stroom-services.service\n\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Unit]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Who we are\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Description=Stroom Service\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# We want the network, httpd and Database up before us\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Requires=network-online.target httpd.service mariadb.service\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;After=mariadb.service httpd.service network-online.target\n\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Service]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;# Source our environment file so the Stroom service start/stop scripts work\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;EnvironmentFile=/home/stroomuser/env_service.sh\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Type=oneshot\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ExecStart=/bin/su --login stroomuser /home/stroomuser/bin/StartServices.sh\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;ExecStop=/bin/su --login stroomuser /home/stroomuser/bin/StopServices.sh\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;RemainAfterExit=yes\n\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;[Install]\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#366&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;WantedBy=multi-user.target\n&amp;#39;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
chmod &lt;span style=&#34;color:#f60&#34;&gt;640&lt;/span&gt; &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;F&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;enable-the-service&#34;&gt;Enable the service&lt;/h3&gt;
&lt;p&gt;Now we enable the Stroom service, but we &lt;strong&gt;DO NOT&lt;/strong&gt; start it as we will manually start the Stroom services as part of
the installation process.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;systemctl &lt;span style=&#34;color:#366&#34;&gt;enable&lt;/span&gt; stroom-services.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installproxyhowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installproxyhowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---installation-of-stroom-proxy&#34;&gt;Stroom HOWTO - Installation of Stroom Proxy&lt;/h1&gt;
&lt;p&gt;This HOWTO describes the installation and configuration of the Stroom Proxy software.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;p&gt;The following assumptions are used in this document.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the user has reasonable RHEL/Centos System administration skills.&lt;/li&gt;
&lt;li&gt;installation is on a fully patched minimal Centos 7.3 instance.&lt;/li&gt;
&lt;li&gt;the Stroom database has been created and resides on the host &lt;code&gt;stroomdb0.strmdev00.org&lt;/code&gt; listening on port 3307.&lt;/li&gt;
&lt;li&gt;the Stroom database user is &lt;code&gt;stroomuser&lt;/code&gt; with a password of &lt;code&gt;Stroompassword1@&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;the application user &lt;code&gt;stroomuser&lt;/code&gt; has been created.&lt;/li&gt;
&lt;li&gt;the user is or has deployed the two node Stroom cluster described &lt;a href=&#34;InstallHowTo.md#storage-scenario&#34; title=&#34;HOWTO Storage Scenario&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;the user has set up the Stroom processing user as described &lt;a href=&#34;InstallProcessingUserSetupHowTo.md&#34; title=&#34;Processing User Setup&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;the prerequisite software has been installed.&lt;/li&gt;
&lt;li&gt;when a screen capture is documented, data entry is identified by the data surrounded by &amp;lsquo;&amp;lt;&lt;strong&gt;&amp;rsquo; &amp;lsquo;&lt;/strong&gt;&amp;gt;&amp;rsquo; . This excludes enter/return presses.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;confirm-prerequisite-software-installation&#34;&gt;Confirm Prerequisite Software Installation&lt;/h2&gt;
&lt;p&gt;The following command will ensure the prerequisite software has been deployed&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel policycoreutils-python unzip zip
sudo yum -y install mariadb
or
sudo yum -y install mysql-community-client
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that we do &lt;strong&gt;NOT&lt;/strong&gt; need the database client software for a Forwarding or Standalone proxy.&lt;/p&gt;
&lt;h2 id=&#34;get-the-software&#34;&gt;Get the Software&lt;/h2&gt;
&lt;p&gt;The following will gain the identified, in this case release &lt;code&gt;5.1-beta.10&lt;/code&gt;, Stroom Application software release from github, then deploy it. You should regularly monitor the site for newer releases.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
&lt;span style=&#34;color:#033&#34;&gt;Prx&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;v5.1-beta.10
wget https://github.com/gchq/stroom-proxy/releases/download/&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;Prx&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;/stroom-proxy-distribution-&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;Prx&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;.zip
unzip stroom-proxy-distribution-&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;Prx&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;configure-the-software&#34;&gt;Configure the Software&lt;/h2&gt;
&lt;p&gt;There are three different types of Stroom Proxy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Store&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;em&gt;store&lt;/em&gt; proxy accepts batches of events, as files. It will validate the batch with the database then store the batches as files in a configured directory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Store_NoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;em&gt;store_nodb&lt;/em&gt; proxy accepts batches of events, as files. It has no connectivity to the database, so it assumes all batches are valid, so it stores the batches as files in a configured directory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forwarding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;em&gt;forwarding&lt;/em&gt; proxy accepts batches of events, as files. It has indirect connectivity to the database via the destination proxy, so it validates the batches then stores the batches as files in a configured directory until they are periodically forwarded to the configured destination Stroom proxy.&lt;/p&gt;
&lt;p&gt;We will demonstrate the installation of each.&lt;/p&gt;
&lt;h3 id=&#34;store-proxy-configuration&#34;&gt;Store Proxy Configuration&lt;/h3&gt;
&lt;p&gt;In our &lt;em&gt;Store&lt;/em&gt; Proxy description below, we will use the multi node deployment scenario. That is we are deploying the &lt;em&gt;Store&lt;/em&gt; proxy on multiple Stroom nodes (stroomp00, stroomp01) and we have configured our storage as per the &lt;a href=&#34;InstallHowTo.md#storage-scenario&#34; title=&#34;HOWTO Storage Scenario&#34;&gt;Storage Scenario&lt;/a&gt; which means the directories to install the inbound batches of data are &lt;code&gt;/stroomdata/stroom-working-p00/proxy&lt;/code&gt; and &lt;code&gt;/stroomdata/stroom-working-p01/proxy&lt;/code&gt; depending on the node.&lt;/p&gt;
&lt;p&gt;To install a &lt;em&gt;Store&lt;/em&gt; proxy, we run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;stroom-proxy/bin/setup.sh store
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;during which one is prompted for a number of configuration settings. Use the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NODE to be the hostname (not FQDN) of your host (i.e. &#39;stroomp00&#39; or &#39;stroomp01&#39; depending on the node we are installing on)
PORT_PREFIX should use the default, just press return
REPO_DIR should be set to &#39;/stroomdata/stroom-working-p00/proxy&#39; or &#39;/stroomdata/stroom-working-p01/proxy&#39; depending on the node we are installing on
REPO_FORMAT can be left as the default, just press return
JDBC_CLASSNAME should use the default, just press return
JDBC_URL should be set to &#39;jdbc:mysql://stroomdb0.strmdev00.org:3307/stroom&#39;
DB_USERNAME should be our processing user, &#39;stroomuser&#39;
DB_PASSWORD should be the one we set when creating the stroom database, that is &#39;Stroompassword1@&#39;
JAVA_OPTS can use the defaults, but ensure you have sufficient memory, either change or accept the default
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point, the script will configure the proxy. There should be no errors, but review the output.
If you make a mistake in the above, just re-run the script.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The selection of the &lt;code&gt;REPO_DIR&lt;/code&gt; above and the setting of the &lt;code&gt;STROOM_TMP&lt;/code&gt; environment variable &lt;a href=&#34;InstallProcessingUserSetupHowTo.md&#34; title=&#34;Processing User Setup&#34;&gt;earlier&lt;/a&gt; ensure that not only inbound files are placed in the &lt;code&gt;REPO_DIR&lt;/code&gt; location but the Stroom Application itself will access the same directory when it aggregates inbound data for ingest in it&amp;rsquo;s proxy aggregation threads.&lt;/p&gt;
&lt;h3 id=&#34;forwarding-proxy-configuration&#34;&gt;Forwarding Proxy Configuration&lt;/h3&gt;
&lt;p&gt;In our &lt;em&gt;Forwarding&lt;/em&gt; Proxy description below, we will deploy on a host named &lt;code&gt;stroomfp0&lt;/code&gt; and it will store the files in &lt;code&gt;/stroomdata/stroom-working-fp0/proxy&lt;/code&gt;. Remember, we are being consistent with our Storage hierarchy to make documentation and scripting simpler. Our destination host to periodically forward the files to will be &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt; (the CNAME for &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;To install a &lt;em&gt;Forwarding&lt;/em&gt; proxy, we run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;stroom-proxy/bin/setup.sh forward
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;during which one is prompted for a number of configuration settings. Use the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NODE to be the hostname (not FQDN) of your host (i.e. &#39;stroomfp0&#39; in our example)
PORT_PREFIX should use the default, just press return
REPO_DIR should be set to &#39;/stroomdata/stroom-working-fp0/proxy&#39; which we created earlier.
REPO_FORMAT can be left as the default, just press return
FORWARD_SERVER should be set to our stroom server. (i.e. &#39;stroomp.strmdev00.org&#39; in our example)
JAVA_OPTS can use the defaults, but ensure you have sufficient memory, either change or accept the default
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point, the script will configure the proxy. There should be no errors, but review the output.&lt;/p&gt;
&lt;h3 id=&#34;store-no-database-proxy-configuration&#34;&gt;Store No Database Proxy Configuration&lt;/h3&gt;
&lt;p&gt;In our &lt;em&gt;Store_NoDB&lt;/em&gt; Proxy description below, we will deploy on a host named &lt;code&gt;stroomsap0&lt;/code&gt; and it will store the files in &lt;code&gt;/stroomdata/stroom-working-sap0/proxy&lt;/code&gt;. Remember, we are being consistent with our Storage hierarchy to make documentation and scripting simpler.&lt;/p&gt;
&lt;p&gt;To install a &lt;em&gt;Store_NoDB&lt;/em&gt; proxy, we run&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;stroom-proxy/bin/setup.sh store_nodb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;during which one is prompted for a number of configuration settings. Use the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NODE to be the hostname (not FQDN) of your host (i.e. &#39;stroomsap0&#39; in our example)
PORT_PREFIX should use the default, just press return
REPO_DIR should be set to &#39;/stroomdata/stroom-working-sap0/proxy&#39; which we created earlier.
REPO_FORMAT can be left as the default, just press return
JAVA_OPTS can use the defaults, but ensure you have sufficient memory, either change or accept the default
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point, the script will configure the proxy. There should be no errors, but review the output.&lt;/p&gt;
&lt;h2 id=&#34;apachemod_jk-change&#34;&gt;Apache/Mod_JK change&lt;/h2&gt;
&lt;p&gt;For all proxy deployments, if we are using Apache&amp;rsquo;s mod_jk then we need to ensure the proxy&amp;rsquo;s AJP connector specifies a 64K packetSize. View the file &lt;code&gt;stroom-proxy/instance/conf/server.xml&lt;/code&gt; to ensure the Connector element for the AJP protocol has a packetSize attribute of &lt;code&gt;65536&lt;/code&gt;. For example,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;grep AJP stroom-proxy/instance/conf/server.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;shows&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Connector port=&amp;quot;9009&amp;quot; protocol=&amp;quot;AJP/1.3&amp;quot; connectionTimeout=&amp;quot;20000&amp;quot; redirectPort=&amp;quot;8443&amp;quot; maxThreads=&amp;quot;200&amp;quot; packetSize=&amp;quot;65536&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This check is required for earlier releases of the Stroom Proxy. Releases since &lt;code&gt;v5.1-beta.4&lt;/code&gt; have set the AJP packetSize.&lt;/p&gt;
&lt;h2 id=&#34;start-the-proxy-service&#34;&gt;Start the Proxy Service&lt;/h2&gt;
&lt;p&gt;We can now manually start our proxy service. Do so as the &lt;code&gt;stroomuser&lt;/code&gt; with the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;stroom-proxy/bin/start.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now monitor the directory &lt;code&gt;stroom-proxy/instance/logs&lt;/code&gt; for any errors. Initially you will see the log files &lt;code&gt;localhost_access_log.YYYY-MM-DD.txt&lt;/code&gt; and &lt;code&gt;catalina.out&lt;/code&gt;. Check them for errors and correct (or pose a question to this arena).
The context path and unknown version warnings in &lt;code&gt;catalina.out&lt;/code&gt; can be ignored.&lt;/p&gt;
&lt;p&gt;Eventually (about 60 seconds) the log file &lt;code&gt;stroom-proxy/instance/logs/stroom.log&lt;/code&gt; will appear. Again check it for errors.
The proxy will have completely started when you see the messages&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INFO  [localhost-startStop-1] spring.StroomBeanLifeCycleReloadableContextBeanProcessor (StroomBeanLifeCycleReloadableContextBeanProcessor.java:109) - ** proxyContext 0 START COMPLETE **
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INFO  [localhost-startStop-1] spring.StroomBeanLifeCycleReloadableContextBeanProcessor (StroomBeanLifeCycleReloadableContextBeanProcessor.java:109) - ** webContext 0 START COMPLETE **
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you leave it for a while you will eventually see cyclic (10 minute cycle) messages of the form&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INFO  [Repository Reader Thread 1] repo.ProxyRepositoryReader (ProxyRepositoryReader.java:170) - run() - Cron Match at YYYY-MM-DD ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If a proxy takes too long to start, you should read the section on &lt;a href=&#34;InstallHowTo.md#entropy-issues-in-virtual-environments&#34; title=&#34;Entropy Issues in Virtual environments&#34;&gt;Entropy Issues&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;proxy-repository-format&#34;&gt;Proxy Repository Format&lt;/h2&gt;
&lt;p&gt;A Stroom Proxy stores inbound files in a hierarchical file system whose root is supplied during the proxy setup (&lt;code&gt;REPO_DIR&lt;/code&gt;) and as files arrive they are given a &lt;em&gt;repository id&lt;/em&gt; that is a one-up number starting at one (1). The files are stored in a specific &lt;em&gt;repository format&lt;/em&gt;.
The default template is &lt;code&gt;${pathId}/${id}&lt;/code&gt; and this pattern will produce the following output files under &lt;code&gt;REPO_DIR&lt;/code&gt; for the given repository id&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Repository Id&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;FilePath&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;000.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;100&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;100.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1000&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;001/001000.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;10000&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;010/010000.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;100000&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;100/100000.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Since version v5.1-beta.4, this template can be specified during proxy setup via the entry to the &lt;code&gt;Stroom Proxy Repository Format&lt;/code&gt; prompt&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
@@REPO_FORMAT@@ : Stroom Proxy Repository Format [${pathId}/${id}] &amp;gt; 
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The template uses replacement variables to form the file path. As indicated above, the default template is &lt;code&gt;${pathId}/${id}&lt;/code&gt; where &lt;code&gt;${pathId}&lt;/code&gt; is the automatically generated directory for a given &lt;em&gt;repository id&lt;/em&gt; and &lt;code&gt;${id}&lt;/code&gt; is the &lt;em&gt;repository id&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Other replacement variables can be used to in the template including http header meta data parameters (e.g. &amp;lsquo;${feed}&#39;) and time based parameters (e.g. &amp;lsquo;${year}&#39;). Replacement variables that cannot be resolved will be output as &amp;lsquo;_&amp;rsquo;. You must ensure that all templates include the &amp;lsquo;${id}&amp;rsquo; replacement variable at the start of the file name, failure to do this will result in an invalid repository.&lt;/p&gt;
&lt;p&gt;Available time based parameters are based on the file&amp;rsquo;s time of processing and are zero filled (excluding &lt;code&gt;ms&lt;/code&gt;).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;year&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;four digit year&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;month&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit month&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;day&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit day&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hour&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit hour&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;minute&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit minute&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;second&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit second&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;millis&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;three digit milliseconds value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ms&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;milliseconds since Epoch value&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;proxy-repository-template-examples&#34;&gt;Proxy Repository Template Examples&lt;/h3&gt;
&lt;p&gt;For each of the following templates applied to a Store NoDB Proxy, the resultant proxy directory tree is shown after three posts were sent to the test feed &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt; and two posts to the test feed &lt;code&gt;FEED-NOVALUE-V9_0&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;example-a---the-default---pathidid&#34;&gt;Example A - The default - &lt;code&gt;${pathId}/${id}&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;stroomuser@stroomsap0 ~&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;$ find /stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/001.zip
/stroomdata/stroom-working-sap0/proxy/002.zip
/stroomdata/stroom-working-sap0/proxy/003.zip
/stroomdata/stroom-working-sap0/proxy/004.zip
/stroomdata/stroom-working-sap0/proxy/005.zip
&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;stroomuser@stroomsap0 ~&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;example-b---a-feed-orientated-structure---feedyearmonthdaypathidid&#34;&gt;Example B - A feed orientated structure - &lt;code&gt;${feed}/${year}/${month}/${day}/${pathId}/${id}&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;stroomuser@stroomsap0 ~&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;$ find /stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07/23
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07/23/001.zip
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07/23/002.zip
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07/23/003.zip
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017/07
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017/07/23
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017/07/23/004.zip
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017/07/23/005.zip
&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;stroomuser@stroomsap0 ~&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;example-c---a-date-orientated-structure---yearmonthdaypathidid&#34;&gt;Example C - A date orientated structure - &lt;code&gt;${year}/${month}/${day}/${pathId}/${id}&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;stroomuser@stroomsap0 ~&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;$ find /stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/2017
/stroomdata/stroom-working-sap0/proxy/2017/07
/stroomdata/stroom-working-sap0/proxy/2017/07/23
/stroomdata/stroom-working-sap0/proxy/2017/07/23/001.zip
/stroomdata/stroom-working-sap0/proxy/2017/07/23/002.zip
/stroomdata/stroom-working-sap0/proxy/2017/07/23/003.zip
/stroomdata/stroom-working-sap0/proxy/2017/07/23/004.zip
/stroomdata/stroom-working-sap0/proxy/2017/07/23/005.zip
&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;stroomuser@stroomsap0 ~&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;example-d---a-feed-orientated-structure-but-with-a-bad-parameter---feedbadparamdaypathidid&#34;&gt;Example D - A feed orientated structure, but with a bad parameter - &lt;code&gt;${feed}/${badparam}/${day}/${pathId}/${id}&lt;/code&gt;&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;stroomuser@stroomsap0 ~&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;$ find /stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_/23
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_/23/001.zip
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_/23/002.zip
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_/23/003.zip
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/_
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/_/23
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/_/23/004.zip
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/_/23/005.zip
&lt;span style=&#34;color:#555&#34;&gt;[&lt;/span&gt;stroomuser@stroomsap0 ~&lt;span style=&#34;color:#555&#34;&gt;]&lt;/span&gt;$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and one would also see a warning for each post in the proxy&amp;rsquo;s log file of the form&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WARN  [ajp-apr-9009-exec-4] repo.StroomFileNameUtil (StroomFileNameUtil.java:133) - Unused variables found: [badparam]
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installtestinghowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installtestinghowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---testing-stroom-installation&#34;&gt;Stroom HOWTO - Testing Stroom Installation&lt;/h1&gt;
&lt;p&gt;This HOWTO will demonstrate various ways to test that your Stroom installation has been successful.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Stroom Single or Multi Node Cluster Testing&lt;/li&gt;
&lt;li&gt;the &lt;a href=&#34;InstallHowTo.md#multi-node-stroom-cluster-proxy-and-application-deployment&#34; title=&#34;Multi Node Stroom Cluster (Proxy and Application&#34;&gt;Multi Node Stroom Cluster (Proxy and Application)&lt;/a&gt; has been deployed&lt;/li&gt;
&lt;li&gt;a &lt;a href=&#34;InstallHowTo.md#add-a-test-feed&#34; title=&#34;Add a Test Feed&#34;&gt;Test Feed&lt;/a&gt;, &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt; has been added&lt;/li&gt;
&lt;li&gt;Proxy aggregation has been turned off on all Stroom &lt;em&gt;Store&lt;/em&gt; Proxies&lt;/li&gt;
&lt;li&gt;the Stroom Proxy Repository Format (&lt;code&gt;REPO_FORMAT&lt;/code&gt;) chosen was the default - &lt;code&gt;${pathId}/${id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Stroom Forwarding Proxy Testing&lt;/li&gt;
&lt;li&gt;the &lt;a href=&#34;InstallHowTo.md#multi-node-stroom-cluster-proxy-and-application-deployment&#34; title=&#34;Multi Node Stroom Cluster (Proxy and Application&#34;&gt;Multi Node Stroom Cluster (Proxy and Application)&lt;/a&gt; has been deployed&lt;/li&gt;
&lt;li&gt;the &lt;a href=&#34;InstallHowTo.md#forwarding-stroom-proxy-deployment&#34; title=&#34;Stroom Forwarding Proxy&#34;&gt;Stroom Forwarding Proxy&lt;/a&gt; has been deployed&lt;/li&gt;
&lt;li&gt;a &lt;a href=&#34;InstallHowTo.md#add-a-test-feed&#34; title=&#34;Add a Test Feed&#34;&gt;Test Feed&lt;/a&gt;, &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt; has been added&lt;/li&gt;
&lt;li&gt;the Stroom Proxy Repository Format (&lt;code&gt;REPO_FORMAT&lt;/code&gt;) chosen was the default - &lt;code&gt;${pathId}/${id&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Stroom Standalone Proxy Testing&lt;/li&gt;
&lt;li&gt;the &lt;a href=&#34;InstallHowTo.md#standalone-stroom-proxy-deployment&#34; title=&#34;Stroom Standalone Proxy&#34;&gt;Stroom Standalone Proxy&lt;/a&gt; has been deployed&lt;/li&gt;
&lt;li&gt;the Stroom Proxy Repository Format (&lt;code&gt;REPO_FORMAT&lt;/code&gt;) chosen was the default - &lt;code&gt;${pathId}/${id&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;stroom-single-or-multi-node-cluster-testing&#34;&gt;Stroom Single or Multi Node Cluster Testing&lt;/h2&gt;
&lt;h3 id=&#34;data-post-tests&#34;&gt;Data Post Tests&lt;/h3&gt;
&lt;h4 id=&#34;simple-post-tests&#34;&gt;Simple Post tests&lt;/h4&gt;
&lt;p&gt;These tests are to ensure the Stroom &lt;em&gt;Store&lt;/em&gt; proxy and it&amp;rsquo;s connection to the database is working along with the Apache mod_jk loadbalancer.
We will send a file to the load balanced &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt; node (really &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;) and each time we send the file,
it&amp;rsquo;s receipt should be managed by alternate proxy nodes. As a number of elements can effect load balancing, it is not always guaranteed
to alternate every time but for the most part it will.&lt;/p&gt;
&lt;p&gt;Perform the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Log onto the Stroom database node (stroomdb0.strmdev00.org) as any user.&lt;/li&gt;
&lt;li&gt;Log onto both Stroom nodes and become the &lt;code&gt;stroomuser&lt;/code&gt; and monitor each node&amp;rsquo;s Stroom proxy service using the &lt;code&gt;Tp&lt;/code&gt; bash macro. That is, on each node, run&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
Tp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You will note events of the form from
&lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
2017-01-14T06:22:26.672Z INFO  [ProxyProperties refresh thread 0] datafeed.ProxyHandlerFactory$1 (ProxyHandlerFactory.java:96) - refreshThread() - Started
2017-01-14T06:30:00.993Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-14T06:30:00.993Z
2017-01-14T06:40:00.245Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-14T06:40:00.245Z
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and from &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
2017-01-14T06:22:26.828Z INFO  [ProxyProperties refresh thread 0] datafeed.ProxyHandlerFactory$1 (ProxyHandlerFactory.java:96) - refreshThread() - Started
2017-01-14T06:30:00.066Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-14T06:30:00.066Z
2017-01-14T06:40:00.318Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-14T06:40:00.318Z
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;On the Stroom database node, execute the command&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -k --data-binary @/etc/group &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://stroomp.strmdev00.org/stroom/datafeed&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Feed:TEST-FEED-V1_0&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;System:EXAMPLE_SYSTEM&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Environment:EXAMPLE_ENVIRONMENT&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are monitoring the proxy log of &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt; you would see two new logs indicating the successful arrival of the file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T06:46:06.411Z INFO  [ajp-apr-9009-exec-1] handler.LogRequestHandler (LogRequestHandler.java:37) - log() - guid=54dc0da2-f35c-4dc2-8a98-448415ffc76b,feed=TEST-FEED-V1_0,system=EXAMPLE_SYSTEM,environment=EXAMPLE_ENVIRONMENT,remotehost=192.168.2.144,remoteaddress=192.168.2.144
2017-01-14T06:46:06.449Z INFO  [ajp-apr-9009-exec-1] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 571 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=54dc0da2-f35c-4dc2-8a98-448415ffc76b&amp;quot;,&amp;quot;ReceivedTime=2017-01-14T06:46:05.883Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.144&amp;quot;,&amp;quot;RemoteHost=192.168.2.144&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=527&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomp.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.29.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;On the Stroom database node, again execute the command&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -k --data-binary @/etc/group &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://stroomp.strmdev00.org/stroom/datafeed&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Feed:TEST-FEED-V1_0&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;System:EXAMPLE_SYSTEM&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Environment:EXAMPLE_ENVIRONMENT&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you are monitoring the proxy log of &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt; you should see a new log. As foreshadowed, we didn&amp;rsquo;t as the time delay resulted
in the first node getting the file. That is &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt; log file gained the two entries&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T06:47:26.642Z INFO  [ajp-apr-9009-exec-2] handler.LogRequestHandler (LogRequestHandler.java:37) - log() - guid=941d2904-734f-4764-9ccf-4124b94a56f6,feed=TEST-FEED-V1_0,system=EXAMPLE_SYSTEM,environment=EXAMPLE_ENVIRONMENT,remotehost=192.168.2.144,remoteaddress=192.168.2.144
2017-01-14T06:47:26.645Z INFO  [ajp-apr-9009-exec-2] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 174 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=941d2904-734f-4764-9ccf-4124b94a56f6&amp;quot;,&amp;quot;ReceivedTime=2017-01-14T06:47:26.470Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.144&amp;quot;,&amp;quot;RemoteHost=192.168.2.144&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=527&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomp.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.29.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Again on the database node, execute the command and this time we see that node &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt; received the file as per&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T06:47:30.782Z INFO  [ajp-apr-9009-exec-1] handler.LogRequestHandler (LogRequestHandler.java:37) - log() - guid=2cef6e23-b0e6-4d75-8374-cca7caf66e15,feed=TEST-FEED-V1_0,system=EXAMPLE_SYSTEM,environment=EXAMPLE_ENVIRONMENT,remotehost=192.168.2.144,remoteaddress=192.168.2.144
2017-01-14T06:47:30.816Z INFO  [ajp-apr-9009-exec-1] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 593 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=2cef6e23-b0e6-4d75-8374-cca7caf66e15&amp;quot;,&amp;quot;ReceivedTime=2017-01-14T06:47:30.238Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.144&amp;quot;,&amp;quot;RemoteHost=192.168.2.144&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=527&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomp.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.29.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;Running the curl post command in quick succession shows the loadbalancer working &amp;hellip; four executions result in seeing our pair of logs appearing on alternate proxies.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;stroomp00&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T06:52:09.815Z INFO  [ajp-apr-9009-exec-3] handler.LogRequestHandler (LogRequestHandler.java:37) - log() - guid=bf0bc38c-3533-4d5c-9ddf-5d30c0302787,feed=TEST-FEED-V1_0,system=EXAMPLE_SYSTEM,environment=EXAMPLE_ENVIRONMENT,remotehost=192.168.2.144,remoteaddress=192.168.2.144
2017-01-14T06:52:09.817Z INFO  [ajp-apr-9009-exec-3] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 262 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=bf0bc38c-3533-4d5c-9ddf-5d30c0302787&amp;quot;,&amp;quot;ReceivedTime=2017-01-14T06:52:09.555Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.144&amp;quot;,&amp;quot;RemoteHost=192.168.2.144&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=527&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomp.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.29.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;stroomp01&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T06:52:11.139Z INFO  [ajp-apr-9009-exec-2] handler.LogRequestHandler (LogRequestHandler.java:37) - log() - guid=1088fdd8-6869-489f-8baf-948891363734,feed=TEST-FEED-V1_0,system=EXAMPLE_SYSTEM,environment=EXAMPLE_ENVIRONMENT,remotehost=192.168.2.144,remoteaddress=192.168.2.144
2017-01-14T06:52:11.150Z INFO  [ajp-apr-9009-exec-2] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 289 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=1088fdd8-6869-489f-8baf-948891363734&amp;quot;,&amp;quot;ReceivedTime=2017-01-14T06:52:10.861Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.144&amp;quot;,&amp;quot;RemoteHost=192.168.2.144&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=527&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomp.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.29.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;stroomp00&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T06:52:12.284Z INFO  [ajp-apr-9009-exec-4] handler.LogRequestHandler (LogRequestHandler.java:37) - log() - guid=def94a4a-cf78-4c4d-9261-343663f7f79a,feed=TEST-FEED-V1_0,system=EXAMPLE_SYSTEM,environment=EXAMPLE_ENVIRONMENT,remotehost=192.168.2.144,remoteaddress=192.168.2.144
2017-01-14T06:52:12.289Z INFO  [ajp-apr-9009-exec-4] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 5.0 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=def94a4a-cf78-4c4d-9261-343663f7f79a&amp;quot;,&amp;quot;ReceivedTime=2017-01-14T06:52:12.284Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.144&amp;quot;,&amp;quot;RemoteHost=192.168.2.144&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=527&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomp.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.29.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;stroomp01&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T06:52:13.374Z INFO  [ajp-apr-9009-exec-3] handler.LogRequestHandler (LogRequestHandler.java:37) - log() - guid=55dda4c9-2c76-43c8-9b48-dcdb3a1f459b,feed=TEST-FEED-V1_0,system=EXAMPLE_SYSTEM,environment=EXAMPLE_ENVIRONMENT,remotehost=192.168.2.144,remoteaddress=192.168.2.144
2017-01-14T06:52:13.378Z INFO  [ajp-apr-9009-exec-3] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 3.0 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=55dda4c9-2c76-43c8-9b48-dcdb3a1f459b&amp;quot;,&amp;quot;ReceivedTime=2017-01-14T06:52:13.374Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.144&amp;quot;,&amp;quot;RemoteHost=192.168.2.144&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=527&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomp.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.29.0&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point we will see what the proxies have received.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On each node run the command&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ls -l /stroomdata/stroom-working*/proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On &lt;code&gt;stroomp00&lt;/code&gt; we see&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[stroomuser@stroomp00 ~]$ ls -l /stroomdata/stroom-working*/proxy
total 16
-rw-rw-r--. 1 stroomuser stroomuser 785 Jan 14 17:46 001.zip
-rw-rw-r--. 1 stroomuser stroomuser 783 Jan 14 17:47 002.zip
-rw-rw-r--. 1 stroomuser stroomuser 784 Jan 14 17:52 003.zip
-rw-rw-r--. 1 stroomuser stroomuser 783 Jan 14 17:52 004.zip
[stroomuser@stroomp00 ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and on &lt;code&gt;stroomp01&lt;/code&gt; we see&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[stroomuser@stroomp01 ~]$ ls -l /stroomdata/stroom-working*/proxy
total 12
-rw-rw-r--. 1 stroomuser stroomuser 785 Jan 14 17:47 001.zip
-rw-rw-r--. 1 stroomuser stroomuser 783 Jan 14 17:52 002.zip
-rw-rw-r--. 1 stroomuser stroomuser 784 Jan 14 17:52 003.zip
[stroomuser@stroomp01 ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;which corresponds to the seven posts of data and the associated events in the proxy logs. To see the contents of one of these files we execute on either node, the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;unzip -c /stroomdata/stroom-working*/proxy/001.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;to see&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Archive:  /stroomdata/stroom-working-p00/proxy/001.zip
  inflating: 001.dat
root:x:0:
bin:x:1:
daemon:x:2:
sys:x:3:
adm:x:4:
tty:x:5:
disk:x:6:
lp:x:7:
mem:x:8:
kmem:x:9:
wheel:x:10:burn
cdrom:x:11:
mail:x:12:postfix
man:x:15:
dialout:x:18:
floppy:x:19:
games:x:20:
tape:x:30:
video:x:39:
ftp:x:50:
lock:x:54:
audio:x:63:
nobody:x:99:
users:x:100:
utmp:x:22:
utempter:x:35:
input:x:999:
systemd-journal:x:190:
systemd-bus-proxy:x:998:
systemd-network:x:192:
dbus:x:81:
polkitd:x:997:
ssh_keys:x:996:
dip:x:40:
tss:x:59:
sshd:x:74:
postdrop:x:90:
postfix:x:89:
chrony:x:995:
burn:x:1000:burn
mysql:x:27:

  inflating: 001.meta
content-type:application/x-www-form-urlencoded
Environment:EXAMPLE_ENVIRONMENT
Feed:TEST-FEED-V1_0
GUID:54dc0da2-f35c-4dc2-8a98-448415ffc76b
host:stroomp.strmdev00.org
ReceivedTime:2017-01-14T06:46:05.883Z
RemoteAddress:192.168.2.144
RemoteHost:192.168.2.144
StreamSize:527
System:EXAMPLE_SYSTEM
user-agent:curl/7.29.0

[stroomuser@stroomp00 ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Checking the /etc/group file on &lt;code&gt;stroomdb0.strmdev00.org&lt;/code&gt; confirms the above contents. For the present, ignore
the metadata file present in the zip archive.&lt;/p&gt;
&lt;p&gt;If you execute the same command on the other files, all that changes is the value of the &lt;em&gt;ReceivedTime:&lt;/em&gt; attribute in the &lt;code&gt;.meta&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;For those curious about the file size differences, this is a function of the compression process within the proxy.
Using &lt;code&gt;stroomp01&lt;/code&gt;&amp;rsquo;s files and extracting them manually and renaming them results in the six files&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[stroomuser@stroomp01 xx]$ ls -l
total 24
-rw-rw-r--. 1 stroomuser stroomuser 527 Jan 14 17:47 A_001.dat
-rw-rw-r--. 1 stroomuser stroomuser 321 Jan 14 17:47 A_001.meta
-rw-rw-r--. 1 stroomuser stroomuser 527 Jan 14 17:52 B_001.dat
-rw-rw-r--. 1 stroomuser stroomuser 321 Jan 14 17:52 B_001.meta
-rw-rw-r--. 1 stroomuser stroomuser 527 Jan 14 17:52 C_001.dat
-rw-rw-r--. 1 stroomuser stroomuser 321 Jan 14 17:52 C_001.meta
[stroomuser@stroomp01 xx]$ cmp A_001.dat B_001.dat
[stroomuser@stroomp01 xx]$ cmp B_001.dat C_001.dat
[stroomuser@stroomp01 xx]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We have effectively tested the receipt of our data and the load balancing of the Apache mod_jk installation.&lt;/p&gt;
&lt;h4 id=&#34;simple-direct-post-tests&#34;&gt;Simple Direct Post tests&lt;/h4&gt;
&lt;p&gt;In this test we will use the direct feed interface of the Stroom application, rather than sending data via the proxy.
One would normally use this interface for time sensitive data which shouldn&amp;rsquo;t aggregate in a proxy waiting for
the Stroom application to collect it. In this situation we use the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -k --data-binary @/etc/group &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://stroomp.strmdev00.org/stroom/datafeed/direct&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Feed:TEST-FEED-V1_0&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;System:EXAMPLE_SYSTEM&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Environment:EXAMPLE_ENVIRONMENT&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To prepare for this test, we monitor the Stroom application log using the &lt;code&gt;T&lt;/code&gt; bash alias on each node. So on each node run the command&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
T
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;On each node you should see &lt;em&gt;LifecyleTask&lt;/em&gt; events, for example,&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T07:42:08.281Z INFO  [Stroom P2 #7 - LifecycleTask] spring.StroomBeanMethodExecutable (StroomBeanMethodExecutable.java:47) - Executing nodeStatusExecutor.exec
2017-01-14T07:42:18.284Z INFO  [Stroom P2 #2 - LifecycleTask] spring.StroomBeanMethodExecutable (StroomBeanMethodExecutable.java:47) - Executing SQLStatisticEventStore.evict
2017-01-14T07:42:18.284Z INFO  [Stroom P2 #10 - LifecycleTask] spring.StroomBeanMethodExecutable (StroomBeanMethodExecutable.java:47) - Executing activeQueriesManager.evictExpiredElements
2017-01-14T07:42:18.285Z INFO  [Stroom P2 #7 - LifecycleTask] spring.StroomBeanMethodExecutable (StroomBeanMethodExecutable.java:47) - Executing distributedTaskFetcher.execute
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To perform the test, on the database node, run the posting command a number of times in rapid succession. This will result
in  &lt;em&gt;server.DataFeedServiceImpl&lt;/em&gt; events in both log files. The Stroom application log is quite busy, you may have to look for these logs.&lt;/p&gt;
&lt;p&gt;In the following we needed to execute the posting command three times before seeing the data arrive on both nodes. Looking at the arrival
times, the file turned up on the second node twice before appearing on the first node.
&lt;code&gt;strooomp00:&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T07:43:09.394Z INFO  [ajp-apr-8009-exec-6] server.DataFeedServiceImpl (DataFeedServiceImpl.java:133) - handleRequest response 200 - 0 - OK
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and on &lt;code&gt;stroomp01:&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T07:43:05.614Z INFO  [ajp-apr-8009-exec-1] server.DataFeedServiceImpl (DataFeedServiceImpl.java:133) - handleRequest response 200 - 0 - OK
2017-01-14T07:43:06.821Z INFO  [ajp-apr-8009-exec-2] server.DataFeedServiceImpl (DataFeedServiceImpl.java:133) - handleRequest response 200 - 0 - OK
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To confirm this data arrived, we need to view the &lt;strong&gt;Data&lt;/strong&gt; pane of our &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt; tab. To do this, log onto the Stroom UI then
move the cursor to the &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt; entry in the &lt;code&gt;Explorer&lt;/code&gt; tab and select the item with a left click&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-TestDirectFeed-00.png&#34; alt=&#34;Stroom UI Test Feed - Open Feed&#34; title=&#34;Stroom UI Test Feed - Open Feed&#34;&gt;&lt;/p&gt;
&lt;p&gt;and double click on the entry to see our &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt; tab.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-TestDirectFeed-01.png&#34; alt=&#34;Stroom UI Test Feed - Opened Feed&#34; title=&#34;Stroom UI Test Feed - Opened Feed&#34;&gt;
and it is noted that we are viewing the Feed&amp;rsquo;s attributes as we can see the &lt;strong&gt;Setting&lt;/strong&gt; hyper-link highlighted. As we want to see the Data we have received for this feed, move the cursor to the &lt;strong&gt;Data&lt;/strong&gt; hyper-link and select it to see
&lt;img src=&#34;../resources/UI-TestDirectFeed-02.png&#34; alt=&#34;Stroom UI Test Feed - Opened Feed Data&#34; title=&#34;Stroom UI Test Feed - Opened Feed view Data&#34;&gt;.&lt;/p&gt;
&lt;p&gt;These three entries correspond to the three posts we performed.&lt;/p&gt;
&lt;p&gt;We have successfully tested direct posting to a Stroom feed and that the Apache mod_jk loadbalancer also works for this posting method.&lt;/p&gt;
&lt;h4 id=&#34;test-proxy-aggregation-is-working&#34;&gt;Test Proxy Aggregation is Working&lt;/h4&gt;
&lt;p&gt;To test that the Proxy Aggregation is working,
we need to &lt;a href=&#34;../General/TasksHowTo.md#turn-on-proxy-aggregation&#34; title=&#34;Enable Proxy Aggregation&#34;&gt;enable&lt;/a&gt; on each node.&lt;/p&gt;
&lt;p&gt;By enabling the Proxy Aggregation process, both nodes immediately performed the task as indicated by each node&amp;rsquo;s Stroom application logs as per
&lt;code&gt;stroomp00:&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T07:58:58.752Z INFO  [Stroom P2 #3 - LifecycleTask] server.ProxyAggregationExecutor (ProxyAggregationExecutor.java:138) - exec() - started
2017-01-14T07:58:58.937Z INFO  [Stroom P2 #2 - GenericServerTask] server.ProxyAggregationExecutor$2 (ProxyAggregationExecutor.java:203) - processFeedF
iles() - Started TEST-FEED-V1_0 (4 Files)
2017-01-14T07:58:59.045Z INFO  [Stroom P2 #2 - GenericServerTask] server.ProxyAggregationExecutor$2 (ProxyAggregationExecutor.java:265) - processFeedF
iles() - Completed TEST-FEED-V1_0 in 108 ms
2017-01-14T07:58:59.101Z INFO  [Stroom P2 #3 - LifecycleTask] server.ProxyAggregationExecutor (ProxyAggregationExecutor.java:152) - exec() - completed
 in 349 ms
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and &lt;code&gt;stroomp01:&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-14T07:59:16.687Z INFO  [Stroom P2 #10 - LifecycleTask] server.ProxyAggregationExecutor (ProxyAggregationExecutor.java:138) - exec() - started
2017-01-14T07:59:16.799Z INFO  [Stroom P2 #5 - GenericServerTask] server.ProxyAggregationExecutor$2 (ProxyAggregationExecutor.java:203) - processFeedF
iles() - Started TEST-FEED-V1_0 (3 Files)
2017-01-14T07:59:16.909Z INFO  [Stroom P2 #5 - GenericServerTask] server.ProxyAggregationExecutor$2 (ProxyAggregationExecutor.java:265) - processFeedF
iles() - Completed TEST-FEED-V1_0 in 110 ms
2017-01-14T07:59:16.997Z INFO  [Stroom P2 #10 - LifecycleTask] server.ProxyAggregationExecutor (ProxyAggregationExecutor.java:152) - exec() - complete
d in 310 ms
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And on refreshing the top pane of the &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt; tab we see that two more &lt;em&gt;batches&lt;/em&gt; of data have arrived.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-TestProxyAggregation-01.png&#34; alt=&#34;Stroom UI Test Feed - Proxy Aggregated Data Arrival&#34; title=&#34;Stroom UI Test Feed - Proxy Aggregated data arrival&#34;&gt;.&lt;/p&gt;
&lt;p&gt;This demonstrates that Proxy Aggregation is working.&lt;/p&gt;
&lt;h2 id=&#34;stroom-forwarding-proxy-testing&#34;&gt;Stroom Forwarding Proxy Testing&lt;/h2&gt;
&lt;h3 id=&#34;data-post-tests-1&#34;&gt;Data Post Tests&lt;/h3&gt;
&lt;h4 id=&#34;simple-post-tests-1&#34;&gt;Simple Post tests&lt;/h4&gt;
&lt;p&gt;This test is to ensure the Stroom &lt;em&gt;Forwarding&lt;/em&gt; proxy and it&amp;rsquo;s connection to the central Stroom Processing system is working.&lt;/p&gt;
&lt;p&gt;We will send a file to our &lt;em&gt;Forwarding&lt;/em&gt; proxy (&lt;code&gt;stroomfp0.strmdev00.org&lt;/code&gt;) and monitor this nodes&#39; proxy log files as well as all the
destination nodes proxy log files. The reason for monitoring all the destination system&amp;rsquo;s proxy log files is that the destination system is
probably load balancing and hence the forwarded file may turn up on any of the destination nodes.&lt;/p&gt;
&lt;p&gt;Perform the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Log onto any host where you will perform the &lt;code&gt;curl&lt;/code&gt; post&lt;/li&gt;
&lt;li&gt;Monitor all proxy log files&lt;/li&gt;
&lt;li&gt;Log onto the Forwarding Proxy node and become the &lt;code&gt;stroomuser&lt;/code&gt; and monitor the Stroom proxy service using the &lt;code&gt;Tp&lt;/code&gt; bash macro.&lt;/li&gt;
&lt;li&gt;Log onto the destination Stroom nodes and become the &lt;code&gt;stroomuser&lt;/code&gt; and monitor each node&amp;rsquo;s Stroom proxy service using the &lt;code&gt;Tp&lt;/code&gt; bash macro. That is, on each node, run&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
Tp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;On the &amp;lsquo;posting&amp;rsquo; node, run the command&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -k --data-binary @/etc/group &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://stroomfp0.strmdev00.org/stroom/datafeed&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Feed:TEST-FEED-V1_0&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;System:EXAMPLE_SYSTEM&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Environment:EXAMPLE_ENVIRONMENT&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the Stroom Forwarding proxy log, &lt;code&gt;~/stroom-proxy/instance/logs/stroom.log&lt;/code&gt;, you will see the arrival of the
file as per the &lt;em&gt;datafeed.DataFeedRequestHandler$1&lt;/em&gt; event running under, in this case, the &lt;em&gt;ajp-apr-9009-exec-1&lt;/em&gt; thread.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
2017-01-01T23:17:00.240Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-01T23:17:00.240Z
2017-01-01T23:18:00.275Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-01T23:18:00.275Z
2017-01-01T23:18:12.367Z INFO  [ajp-apr-9009-exec-1] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 782 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Expect=100-continue&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=9601198e-98db-4cae-8b71-9404722ef1f9&amp;quot;,&amp;quot;ReceivedTime=2017-01-01T23:18:11.588Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.220&amp;quot;,&amp;quot;RemoteHost=192.168.2.220&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=1051&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomfp0.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.21 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And then at the next
periodic interval (60 second intervals) this file will be forwarded to the main stroom proxy
server &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt; as shown by the &lt;em&gt;handler.ForwardRequestHandler&lt;/em&gt; events running under the &lt;em&gt;pool-10-thread-2&lt;/em&gt; thread.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2017-01-01T23:19:00.304Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-01T23:19:00.304Z
2017-01-01T23:19:00.586Z INFO  [pool-10-thread-2] handler.ForwardRequestHandler (ForwardRequestHandler.java:109) - handleHeader() - https://stroomp00.strmdev00.org/stroom/datafeed Sending request {ReceivedPath=stroomfp0.strmdev00.org, Feed=TEST-FEED-V1_0, Compression=ZIP}
2017-01-01T23:19:00.990Z INFO  [pool-10-thread-2] handler.ForwardRequestHandler (ForwardRequestHandler.java:89) - handleFooter() - b5722ead-714b-411b-a09f-901fb8b20389 took 403 ms to forward 1.4 kB response 200 - {ReceivedPath=stroomfp0.strmdev00.org, Feed=TEST-FEED-V1_0, GUID=b5722ead-714b-411b-a09f-901fb8b20389, Compression=ZIP}
2017-01-01T23:20:00.064Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-01T23:20:00.064Z
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;On one of the central processing nodes, when the file is send by the Forwarding Proxy, you will see the file&amp;rsquo;s arrival as per
the &lt;em&gt;datafeed.DataFeedRequestHandler$1&lt;/em&gt; event in the &lt;em&gt;ajp-apr-9009-exec-3&lt;/em&gt; thread.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
2017-01-01T23:00:00.236Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-01T23:00:00.236Z
2017-01-01T23:10:00.473Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-01T23:10:00.473Z
2017-01-01T23:19:00.787Z INFO  [ajp-apr-9009-exec-3] handler.LogRequestHandler (LogRequestHandler.java:37) - log() - guid=b5722ead-714b-411b-a09f-901fb8b20389,feed=TEST-FEED-V1_0,system=null,environment=null,remotehost=null,remoteaddress=null
2017-01-01T23:19:00.981Z INFO  [ajp-apr-9009-exec-3] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 196 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Cache-Control=no-cache&amp;quot;,&amp;quot;Compression=ZIP&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=b5722ead-714b-411b-a09f-901fb8b20389&amp;quot;,&amp;quot;ReceivedPath=stroomfp0.strmdev00.org&amp;quot;,&amp;quot;Transfer-Encoding=chunked&amp;quot;,&amp;quot;accept=text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2&amp;quot;,&amp;quot;connection=keep-alive&amp;quot;,&amp;quot;content-type=application/audit&amp;quot;,&amp;quot;host=stroomp00.strmdev00.org&amp;quot;,&amp;quot;pragma=no-cache&amp;quot;,&amp;quot;user-agent=Java/1.8.0_111&amp;quot;
2017-01-01T23:20:00.771Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-01T23:20:00.771Z
...
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;stroom-standalone-proxy-testing&#34;&gt;Stroom Standalone Proxy Testing&lt;/h2&gt;
&lt;h3 id=&#34;data-post-tests-2&#34;&gt;Data Post Tests&lt;/h3&gt;
&lt;h4 id=&#34;simple-post-tests-2&#34;&gt;Simple Post tests&lt;/h4&gt;
&lt;p&gt;This test is to ensure the Stroom &lt;em&gt;Store NODB&lt;/em&gt; or &lt;em&gt;Standalone&lt;/em&gt; proxy is working.&lt;/p&gt;
&lt;p&gt;We will send a file to our &lt;em&gt;Standalone&lt;/em&gt; proxy (&lt;code&gt;stroomsap0.strmdev00.org&lt;/code&gt;) and monitor this nodes&#39; proxy log files as well the directory the
received files are meant to be stored in.&lt;/p&gt;
&lt;p&gt;Perform the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Log onto any host where you will perform the &lt;code&gt;curl&lt;/code&gt; post&lt;/li&gt;
&lt;li&gt;Log onto the Standalone Proxy node and become the &lt;code&gt;stroomuser&lt;/code&gt; and monitor the Stroom proxy service using the &lt;code&gt;Tp&lt;/code&gt; bash macro. That is run&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo -i -u stroomuser
Tp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;On the &amp;lsquo;posting&amp;rsquo; node, run the command&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -k --data-binary @/etc/group &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;https://stroomsap0.strmdev00.org/stroom/datafeed&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Feed:TEST-FEED-V1_0&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;System:EXAMPLE_SYSTEM&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Environment:EXAMPLE_ENVIRONMENT&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the stroom proxy log, &lt;code&gt;~/stroom-proxy/instance/logs/stroom.log&lt;/code&gt;, you will see the arrival of the file via both the &lt;em&gt;handler.LogRequestHandler&lt;/em&gt; and  &lt;em&gt;datafeed.DataFeedRequestHandler$1&lt;/em&gt; events running under, in this case, the &lt;em&gt;ajp-apr-9009-exec-1&lt;/em&gt; thread.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
2017-01-02T02:10:00.325Z INFO  [Repository Reader Thread 1] handler.ProxyRepositoryReader (ProxyRepositoryReader.java:143) - run() - Cron Match at 2017-01-02T02:10:00.325Z
2017-01-02T02:11:34.501Z INFO  [ajp-apr-9009-exec-1] handler.LogRequestHandler (LogRequestHandler.java:37) - log() - guid=ebd11215-7d4c-4be6-a524-358015e2ac38,feed=TEST-FEED-V1_0,system=EXAMPLE_SYSTEM,environment=EXAMPLE_ENVIRONMENT,remotehost=192.168.2.220,remoteaddress=192.168.2.220
2017-01-02T02:11:34.528Z INFO  [ajp-apr-9009-exec-1] datafeed.DataFeedRequestHandler$1 (DataFeedRequestHandler.java:104) - &amp;quot;doPost() - Took 33 ms to process (concurrentRequestCount=1) 200&amp;quot;,&amp;quot;Environment=EXAMPLE_ENVIRONMENT&amp;quot;,&amp;quot;Expect=100-continue&amp;quot;,&amp;quot;Feed=TEST-FEED-V1_0&amp;quot;,&amp;quot;GUID=ebd11215-7d4c-4be6-a524-358015e2ac38&amp;quot;,&amp;quot;ReceivedTime=2017-01-02T02:11:34.501Z&amp;quot;,&amp;quot;RemoteAddress=192.168.2.220&amp;quot;,&amp;quot;RemoteHost=192.168.2.220&amp;quot;,&amp;quot;System=EXAMPLE_SYSTEM&amp;quot;,&amp;quot;accept=*/*&amp;quot;,&amp;quot;content-length=1051&amp;quot;,&amp;quot;content-type=application/x-www-form-urlencoded&amp;quot;,&amp;quot;host=stroomsap0.strmdev00.org&amp;quot;,&amp;quot;user-agent=curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.21 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2&amp;quot;
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Further, if you check the proxy&amp;rsquo;s storage directory, you will see the file &lt;code&gt;001.zip&lt;/code&gt;. The file names number upwards from 001.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ls -l /stroomdata/stroom-working-sap0/proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;shows&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[stroomuser@stroomsap0 ~]$ ls -l /stroomdata/stroom-working-sap0/proxy
total 4
-rw-rw-r--. 1 stroomuser stroomuser 1107 Jan  2 13:11 001.zip
[stroomuser@stroomsap0 ~]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;On viewing the contents of this file we see both a &lt;code&gt;.dat&lt;/code&gt; and &lt;code&gt;.meta&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[stroomuser@stroomsap0 ~]$ (cd /stroomdata/stroom-working-sap0/proxy; unzip 001.zip)
Archive:  001.zip
  inflating: 001.dat                 
  inflating: 001.meta                
[stroomuser@stroomsap0 ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;.dat&lt;/code&gt; file holds the content of the file we posted - &lt;code&gt;/etc/group&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[stroomuser@stroomsap0 ~]$ (cd /stroomdata/stroom-working-sap0/proxy; head -5 001.dat)
root:x:0:
bin:x:1:bin,daemon
daemon:x:2:bin,daemon
sys:x:3:bin,adm
adm:x:4:adm,daemon
[stroomuser@stroomsap0 ~]$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;.meta&lt;/code&gt; file is generated by the proxy and holds information about the posted file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[stroomuser@stroomsap0 ~]$ (cd /stroomdata/stroom-working-sap0/proxy; cat 001.meta)
content-type:application/x-www-form-urlencoded
Environment:EXAMPLE_ENVIRONMENT
Feed:TEST-FEED-V1_0
GUID:ebd11215-7d4c-4be6-a524-358015e2ac38
host:stroomsap0.strmdev00.org
ReceivedTime:2017-01-02T02:11:34.501Z
RemoteAddress:192.168.2.220
RemoteHost:192.168.2.220
StreamSize:1051
System:EXAMPLE_SYSTEM
user-agent:curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.21 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2
[stroomuser@stroomsap0 ~]$ (cd /stroomdata/stroom-working-sap0/proxy; rm 001.meta 001.dat)
[stroomuser@stroomsap0 ~]$ 
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installvolumeshowto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installvolumeshowto/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---volume-maintenance&#34;&gt;Stroom HOWTO - Volume Maintenance&lt;/h1&gt;
&lt;p&gt;Stroom stores data in
&lt;a href=&#34;../../user-guide/volumes.md&#34; title=&#34;Stroom Volumes&#34;&gt;volumes&lt;/a&gt;.
These are the logical link to the Storage hierarchy we setup on the operating system. This HOWTO will demonstrate how one first sets up volumes and also how
to add additional volumes if one expanded an existing Stroom cluster.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;an account with the &lt;code&gt;Administrator&lt;/code&gt; Application &lt;a href=&#34;../../user-guide/roles.md&#34; title=&#34;Stroom Application Permissions&#34;&gt;Permission&lt;/a&gt; is currently logged in.&lt;/li&gt;
&lt;li&gt;we will add volumes as per the Multi Node Stroom deployment Storage hierarchy&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;configure-the-volumes&#34;&gt;Configure the Volumes&lt;/h2&gt;
&lt;p&gt;We need to configure the volumes for Stroom. The follow demonstrates adding the volumes for two nodes, but demonstrates the process for a single node
deployment as well the volume maintenance needed when expanding a Multi Node Cluster when adding in a new node.&lt;/p&gt;
&lt;p&gt;To configure the volumes, move to the &lt;code&gt;Tools&lt;/code&gt; item of the &lt;strong&gt;Main Menu&lt;/strong&gt; and select it to bring up the &lt;code&gt;Tools&lt;/code&gt; sub-menu.
&lt;img src=&#34;../resources/UI-ToolsSubmenu-00.png&#34; alt=&#34;Stroom UI Volume Management - Tools Menu&#34; title=&#34;Stroom UI Tools sub-menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;then move down and select the &lt;code&gt;Volumes&lt;/code&gt; sub-item to be presented with the &lt;code&gt;Volumes&lt;/code&gt; configuration window as seen below.
&lt;img src=&#34;../resources/UI-ManageVolumes-01.png&#34; alt=&#34;Stroom UI Volume Management - Configuration&#34; title=&#34;Stroom UI Volumes - configuration window&#34;&gt;&lt;/p&gt;
&lt;p&gt;The attributes we see for each volume are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node - the processing node the volume resides on (this is just the node name entered when configuration the Stroom application)&lt;/li&gt;
&lt;li&gt;Path - the path to the volume&lt;/li&gt;
&lt;li&gt;Volume Type - The type of volume&lt;/li&gt;
&lt;li&gt;Public - to indicate that all nodes would access this volume&lt;/li&gt;
&lt;li&gt;Private - to indicate that only the local node will access this volume&lt;/li&gt;
&lt;li&gt;Stream Status&lt;/li&gt;
&lt;li&gt;Active - to store data within the volume&lt;/li&gt;
&lt;li&gt;Inactive - to &lt;strong&gt;NOT&lt;/strong&gt; store data within the volume&lt;/li&gt;
&lt;li&gt;Closed - had stored data within the volume, but now no more data can be stored&lt;/li&gt;
&lt;li&gt;Index Status&lt;/li&gt;
&lt;li&gt;Active - to store index data within the volume&lt;/li&gt;
&lt;li&gt;Inactive - to &lt;strong&gt;NOT&lt;/strong&gt; store index data within the volume&lt;/li&gt;
&lt;li&gt;Closed - had stored index data within the volume, but now no more index data can be stored&lt;/li&gt;
&lt;li&gt;Usage Date - the date and time the volume was last used&lt;/li&gt;
&lt;li&gt;Limit - the maximum amount of data the system will store on the volume&lt;/li&gt;
&lt;li&gt;Used - the amount of data in use on the volume&lt;/li&gt;
&lt;li&gt;Free - the amount of available storage on the volume&lt;/li&gt;
&lt;li&gt;Use% - the usage percentage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are setting up Stroom for the first time and you had accepted the default for the &lt;strong&gt;CREATE_DEFAULT_VOLUME_ON_START&lt;/strong&gt; configuration option (&lt;em&gt;true&lt;/em&gt;) when
configuring the Stroom service application, you will see two default volumes have already been created. Had you set this option to &lt;em&gt;false&lt;/em&gt; then the window would be empty.&lt;/p&gt;
&lt;h4 id=&#34;add-volumes&#34;&gt;Add Volumes&lt;/h4&gt;
&lt;p&gt;Now from our two node Stroom Cluster example, our storage hierarchy was&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p00&lt;/code&gt;        - location to store Stroom application data files (events, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-index-p00&lt;/code&gt;       - location to store Stroom application index files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p00&lt;/code&gt;     - location to store Stroom application working files (e.g. temporary files, output, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p00/proxy&lt;/code&gt;       - location for Stroom proxy to store inbound data files&lt;/li&gt;
&lt;li&gt;Node: &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p01&lt;/code&gt;        - location to store Stroom application data files (events, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-index-p01&lt;/code&gt;       - location to store Stroom application index files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p01&lt;/code&gt;     - location to store Stroom application working files (e.g. temporary files, output, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p01/proxy&lt;/code&gt;       - location for Stroom proxy to store inbound data files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From this we need to create four volumes. On &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt; we create&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p00&lt;/code&gt;        - location to store Stroom application data files (events, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-index-p00&lt;/code&gt;       - location to store Stroom application index files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and on &lt;code&gt;stroomp01.strmdev00.org&lt;/code&gt; we create&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p01&lt;/code&gt;        - location to store Stroom application data files (events, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-index-p01&lt;/code&gt;       - location to store Stroom application index files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So the first step to configure a volume is to move the cursor to the &lt;em&gt;New&lt;/em&gt; icon &lt;img src=&#34;../resources/icons/add.png&#34; alt=&#34;New&#34; title=&#34;New&#34;&gt; in the top left of
the &lt;code&gt;Volumes&lt;/code&gt; window and select it. This will bring up the &lt;code&gt;Add Volume&lt;/code&gt; configuration window&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-02.png&#34; alt=&#34;Stroom UI Volume Management - Add Volume&#34; title=&#34;Stroom UI Add Volume - Volume configuration window&#34;&gt;&lt;/p&gt;
&lt;p&gt;As you can see, the entry box titles reflect the attributes of a volume. So we will add the first
nodes &lt;em&gt;data&lt;/em&gt; volume&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p00&lt;/code&gt;        - location to store Stroom application data files (events, etc.) for this node
for node &lt;code&gt;stroomp00&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you move the the &lt;em&gt;Node&lt;/em&gt; drop down entry box and select it you will be presented with a choice of available
nodes - in this case &lt;code&gt;stroomp00&lt;/code&gt; and &lt;code&gt;stroomp01&lt;/code&gt; as we have a two node cluster with these node names.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-03.png&#34; alt=&#34;Stroom UI Volume Management - Add Volume - Select node&#34; title=&#34;Stroom UI Add Volume - select node&#34;&gt;&lt;/p&gt;
&lt;p&gt;By selecting the node &lt;code&gt;stroomp00&lt;/code&gt; we see&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-04.png&#34; alt=&#34;Stroom UI Volume Management - Add Volume - Selected node&#34; title=&#34;Stroom UI Add Volume - selected node&#34;&gt;&lt;/p&gt;
&lt;p&gt;To configure the rest of the attributes for this volume, we:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;enter the &lt;em&gt;Path&lt;/em&gt; to our first node&amp;rsquo;s &lt;em&gt;data&lt;/em&gt; volume&lt;/li&gt;
&lt;li&gt;select a &lt;em&gt;Volume Type&lt;/em&gt; of &lt;em&gt;Public&lt;/em&gt; as this is a data volume we want all nodes to access&lt;/li&gt;
&lt;li&gt;select a &lt;em&gt;Stream Status&lt;/em&gt; of &lt;em&gt;Active&lt;/em&gt; to indicate we want to store data on it&lt;/li&gt;
&lt;li&gt;select an &lt;em&gt;Index Status&lt;/em&gt; of &lt;em&gt;Inactive&lt;/em&gt; as we do &lt;strong&gt;NOT&lt;/strong&gt; want index data stored on it&lt;/li&gt;
&lt;li&gt;set a &lt;em&gt;Limit&lt;/em&gt; of 12GB for allowed storage&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-05.png&#34; alt=&#34;Stroom UI Volume Management - Add Volume - Adding First Data Volume&#34; title=&#34;Stroom UI Add Volume - adding first data volume&#34;&gt;&lt;/p&gt;
&lt;p&gt;and on selection of the
&lt;img src=&#34;../resources/icons/buttonOk.png&#34; alt=&#34;Stroom UI OkButton&#34; title=&#34;Stroom UI OkButton&#34;&gt;
we see the changes in the &lt;code&gt;Volumes&lt;/code&gt; configuration window&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-06.png&#34; alt=&#34;Stroom UI Volume Management - Add Volume - Added First Data Volume&#34; title=&#34;Stroom UI Add Volume - added first data volume&#34;&gt;&lt;/p&gt;
&lt;p&gt;We next add the first node&amp;rsquo;s index volume, as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-07.png&#34; alt=&#34;Stroom UI Volume Management - Add Volume - Adding First Index Volume&#34; title=&#34;Stroom UI Add Volume - adding first index volume&#34;&gt;&lt;/p&gt;
&lt;p&gt;And after adding the second node&amp;rsquo;s volumes we are finally presented with our configured volumes&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-08.png&#34; alt=&#34;Stroom UI Volume Management - Add Volume - All Volumes Added&#34; title=&#34;Stroom UI Add Volume - all volumes added&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;delete-default-volumes&#34;&gt;Delete Default Volumes&lt;/h4&gt;
&lt;p&gt;We now need to deal with our default volumes. We want to delete them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-09.png&#34; alt=&#34;Stroom UI Volume Management - Delete Default Volumes&#34; title=&#34;Stroom UI Delete Default - display default&#34;&gt;&lt;/p&gt;
&lt;p&gt;So we move the cursor to the first volume&amp;rsquo;s line (&lt;em&gt;stroomp00 /home/stroomuser/stroom-app/volumes/defaultindexVolume&lt;/em&gt; &amp;hellip;) and select the line then move the cursor to the  &lt;em&gt;Delete&lt;/em&gt; icon &lt;img src=&#34;../resources/icons/delete.png&#34; alt=&#34;Delete&#34; title=&#34;Delete&#34;&gt; in the top left of the &lt;code&gt;Volumes&lt;/code&gt; window and select it. On selection you will be given a confirmation request&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-10.png&#34; alt=&#34;Stroom UI Volume Management - Delete Default Volumes Confirm&#34; title=&#34;Stroom UI Delete Default - confirm deletion&#34;&gt;&lt;/p&gt;
&lt;p&gt;at which we press the
&lt;img src=&#34;../resources/icons/buttonOk.png&#34; alt=&#34;Stroom UI OkButton&#34; title=&#34;Stroom UI OkButton&#34;&gt;
button to see the first default volume has been deleted&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-11.png&#34; alt=&#34;Stroom UI Volume Management - Delete Default Volumes First Complete&#34; title=&#34;Stroom UI Delete Default - first volume deleted&#34;&gt;&lt;/p&gt;
&lt;p&gt;and after we select then delete the second default volume( &lt;em&gt;stroomp00 /home/stroomuser/stroom-app/volumes/defaultStreamVolume&lt;/em&gt; &amp;hellip;), we are left with&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageVolumes-12.png&#34; alt=&#34;Stroom UI Volume Management - Delete Default Volumes All Deleted&#34; title=&#34;Stroom UI Delete Default - all deleted&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this one can close the &lt;code&gt;Volumes&lt;/code&gt; configuration window by pressing the
&lt;img src=&#34;../resources/icons/buttonClose.png&#34; alt=&#34;Stroom UI CloseButton&#34; title=&#34;Stroom UI CloseButton&#34;&gt; button.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: At the time of writing there is an issue regarding volumes&lt;/p&gt;
&lt;h5 id=&#34;stroom-github-issue-84----httpsgithubcomgchqstroomissues84&#34;&gt;Stroom Github Issue 84  - &lt;a href=&#34;https://github.com/gchq/stroom/issues/84&#34;&gt;https://github.com/gchq/stroom/issues/84&lt;/a&gt;&lt;/h5&gt;
&lt;p&gt;Due to Issue 84, if we delete volumes in a multi node environment, the deletion is not propagated to all other nodes in a cluster. Thus if we attempted to use the volumes we would get a database error.
The current &lt;em&gt;workaround&lt;/em&gt; is to restart all the Stroom applications which will cause a reload of all volume information. This &lt;strong&gt;MUST&lt;/strong&gt; be done before sending any data to your multi-node Stroom cluster.&lt;/p&gt;
&lt;h2 id=&#34;adding-new-volumes&#34;&gt;Adding new Volumes&lt;/h2&gt;
&lt;p&gt;When one expands a Multi Node Stroom cluster deployment, after the installation of the Stroom Proxy and Application software and services on the new node,
one has to configure the new volumes that are on the new node. The following demonstrates this assuming we are adding&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the new node is &lt;code&gt;stroomp02&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the storage hierarchy for this node is&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p02&lt;/code&gt;        - location to store Stroom application data files (events, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-index-p02&lt;/code&gt;       - location to store Stroom application index files&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p02&lt;/code&gt;     - location to store Stroom application working files (e.g. tmp, output, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-working-p02/proxy&lt;/code&gt;       - location for Stroom proxy to store inbound data files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From this we need to create two volumes on &lt;code&gt;stroomp02&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-data-p02&lt;/code&gt;        - location to store Stroom application data files (events, etc.) for this node&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/stroomdata/stroom-index-p02&lt;/code&gt;       - location to store Stroom application index files&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To configure the volumes, move to the &lt;code&gt;Tools&lt;/code&gt; item of the &lt;strong&gt;Main Menu&lt;/strong&gt; and select it to bring up the &lt;code&gt;Tools&lt;/code&gt; sub-menu.
&lt;img src=&#34;../resources/UI-ToolsSubmenu-00.png&#34; alt=&#34;Stroom UI Volume Management - Tools Menu&#34; title=&#34;Stroom UI Tools sub-menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;then move down and select the &lt;code&gt;Volumes&lt;/code&gt; sub-item to be presented with the &lt;code&gt;Volumes&lt;/code&gt; configuration window as. We then move the cursor to
the &lt;em&gt;New&lt;/em&gt; icon &lt;img src=&#34;../resources/icons/add.png&#34; alt=&#34;New&#34; title=&#34;New&#34;&gt; in the top left of the &lt;code&gt;Volumes&lt;/code&gt; window and select it. This will bring up the &lt;code&gt;Add Volume&lt;/code&gt; configuration window where we select our volume&amp;rsquo;s node &lt;code&gt;stroomp02&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageNewVolume-00.png&#34; alt=&#34;Stroom UI Volume Management - Configuration - New Node Data Start&#34; title=&#34;Stroom UI Volumes - New Node configuration window start data volume&#34;&gt;&lt;/p&gt;
&lt;p&gt;We select this node and then configure the rest of the attributes for this &lt;em&gt;data&lt;/em&gt; volume&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageNewVolume-01.png&#34; alt=&#34;Stroom UI Volume Management - Configuration - New Node Data&#34; title=&#34;Stroom UI Volumes - New Node configuration window data volume&#34;&gt;&lt;/p&gt;
&lt;p&gt;then press the
&lt;img src=&#34;../resources/icons/buttonOk.png&#34; alt=&#34;Stroom UI OkButton&#34; title=&#34;Stroom UI OkButton&#34;&gt; button.&lt;/p&gt;
&lt;p&gt;We then add another volume for the &lt;em&gt;index&lt;/em&gt; volume for this node with attributes as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageNewVolume-02.png&#34; alt=&#34;Stroom UI Volume Management - Configuration - New Index Added&#34; title=&#34;Stroom UI Volumes - New Node configuration window index volume added&#34;&gt;&lt;/p&gt;
&lt;p&gt;And on pressing the &lt;img src=&#34;../resources/icons/buttonOk.png&#34; alt=&#34;Stroom UI OkButton&#34; title=&#34;Stroom UI OkButton&#34;&gt; button we see our two new volumes for this node have been added.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/UI-ManageNewVolume-03.png&#34; alt=&#34;Stroom UI Volume Management - Configuration - New Node Added&#34; title=&#34;Stroom UI Volumes - New Node configuration window volumes added&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this one can close the &lt;code&gt;Volumes&lt;/code&gt; configuration window by pressing the
&lt;img src=&#34;../resources/icons/buttonClose.png&#34; alt=&#34;Stroom UI CloseButton&#34; title=&#34;Stroom UI CloseButton&#34;&gt; button.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/referencefeeds/createsimplereferencefeed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/referencefeeds/createsimplereferencefeed/</guid>
      <description>
        
        
        &lt;h1 id=&#34;stroom-howto---create-a-simple-reference-feed&#34;&gt;Stroom HOWTO - Create a Simple Reference Feed&lt;/h1&gt;
&lt;p&gt;A &lt;strong&gt;Reference Feed&lt;/strong&gt; is a temporal set of data that a pipeline&amp;rsquo;s translation can look up to gain additional information to decorate the subject data of the translation. For example, an XML Event.&lt;/p&gt;
&lt;p&gt;A Reference Feed is temporal, in that, each time a new set of reference data is loaded into Stroom, the effective date (for the data) is also recorded. Thus by using a timestamp field with the subject data, the appropriate batch of reference data can be accessed.&lt;/p&gt;
&lt;p&gt;A typical reference data set to support the Stroom XML Event schema might be on that relates to devices. Such a data set can contain the device logical identifiers such as fully qualified domain name and ip address and their geographical location information such as country, site, building, room and timezone.&lt;/p&gt;
&lt;p&gt;The following example will describe how to create a reference feed for such device data. we will call the reference feed &lt;code&gt;GeoHost-V1.0-REFERENCE&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;reference-data&#34;&gt;Reference Data&lt;/h2&gt;
&lt;p&gt;Our reference data will be supplied in a &lt;TAB&gt; separated file containing the fields&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the device Fully Qualified Domain Name&lt;/li&gt;
&lt;li&gt;the device IP Address&lt;/li&gt;
&lt;li&gt;the device Country location (using ISO 3166-1 alpha-3 codes)&lt;/li&gt;
&lt;li&gt;the device Site location&lt;/li&gt;
&lt;li&gt;the device Building location&lt;/li&gt;
&lt;li&gt;the device TimeZone location (both standard then daylight timezone offsets from UTC)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For simplicity, our example will use a file with just 3 entries&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FQDN	IPAddress	Country	Site	Building	Room	TimeZones
stroomnode00.strmdev00.org	192.168.2.245	GBR	Bristol-S00	GZero	R00	+00:00/+01:00
stroomnode01.strmdev01.org	192.168.3.117	AUS	Sydney-S04	R6	5-134	+10:00/+11:00
host01.company4.org	192.168.4.220	USA	LosAngeles-S19	ILM	C5-54-2	-08:00/-07:00
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A copy of this sample data source can be found &lt;a href=&#34;GeoHostReference.log&#34; title=&#34;GeoHost REFERENCE  sample logs&#34;&gt;here&lt;/a&gt;. Save a copy of this data to your local environment for use later in this HOWTO. Save this file as a text document with ANSI encoding.&lt;/p&gt;
&lt;h2 id=&#34;creation&#34;&gt;Creation&lt;/h2&gt;
&lt;p&gt;To create our Reference Event stream we need to create:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;Feed&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;Pipeline&lt;/strong&gt; to automatically process and store the Reference data&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;Text Parser&lt;/strong&gt; to convert the text file into simple XML record format, and&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;Translation&lt;/strong&gt; to create reference data maps&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;create-feed&#34;&gt;Create Feed&lt;/h3&gt;
&lt;p&gt;First, within the Explorer pane, and with the cursor having selected the Event Sources group, right click the mouse to have the object context menu appear.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-00.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Feed&#34; title=&#34;New Feed&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you hover over the &lt;img src=&#34;../resources/icons/newItemv6.png&#34; alt=&#34;newItem&#34; title=&#34;New Item&#34;&gt; icon then the New sub-context menu will be revealed.&lt;/p&gt;
&lt;p&gt;Now hover the mouse over the &lt;img src=&#34;../resources/icons/feedItem.png&#34; alt=&#34;Stroom UI FeedItem&#34; title=&#34;FeedItem&#34;&gt; icon and right click to select.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-01.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Feed Selection window&#34; title=&#34;New Feed Selection window&#34;&gt;&lt;/p&gt;
&lt;p&gt;When the &lt;strong&gt;New Feed&lt;/strong&gt; selection windows comes up, navigate to the &lt;code&gt;Event Sources&lt;/code&gt; system group. Then enter the name of the reference feed &lt;code&gt;GeoHost-V1.0-REFERENCE&lt;/code&gt; onto the &lt;strong&gt;Name:&lt;/strong&gt; text entry box.
On pressing the OK button we will see the following Feed configuration tab appear.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-03.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Feed Data tab&#34; title=&#34;New Feed Data tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;Click on the &lt;strong&gt;Settings&lt;/strong&gt; sub-item in the &lt;code&gt;GeoHost-V1.0-REFERENCE&lt;/code&gt; Feed tab to populate the initial Settings configuration. Enter an appropriate description, classification and click on the &lt;strong&gt;Reference Feed&lt;/strong&gt; check box&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-04.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Feed Settings tab&#34; title=&#34;New Feed Settings tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;and we then use the Stream Type drop-down menu to set the stream type as Raw Reference. At this point we save our configuration so far, by clicking on the &lt;img src=&#34;../resources/icons/save.png&#34; alt=&#34;Save&#34; title=&#34;Save&#34;&gt; icon. The save icon becomes ghosted and our feed configuration has been saved.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-05.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Feed Settings window configuration&#34; title=&#34;New Feed Settings window configuration&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;load-sample-reference-data&#34;&gt;Load sample Reference data&lt;/h3&gt;
&lt;p&gt;At this point we want to load our sample reference data, in order to develop our reference feed. We can do this two ways - posting the file to our Stroom web server, or directly upload the data using the user interface. For this example we will use Stroom&amp;rsquo;s user interface upload facility.&lt;/p&gt;
&lt;p&gt;First, open the &lt;strong&gt;Data&lt;/strong&gt; sub-item in the &lt;code&gt;GeoHost-V1.0-REFERENCE&lt;/code&gt; feed configuration tab to reveal&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-06.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Reference Data configuration tab&#34; title=&#34;Reference Data configuration tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note the Upload icon &lt;img src=&#34;../resources/icons/upload.png&#34; alt=&#34;Upload&#34; title=&#34;Upload&#34;&gt; in the bottom left of the &lt;strong&gt;Stream table&lt;/strong&gt; (top pane). On clicking the Upload icon, we are presented with the data upload selection window.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-07.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Upload Selection window&#34; title=&#34;Upload Selection window&#34;&gt;&lt;/p&gt;
&lt;p&gt;Naturally, as this is a reference feed we are creating and this is raw data we are uploading, we select a &lt;strong&gt;Stream Type:&lt;/strong&gt; of Raw Reference. We need to set the &lt;strong&gt;Effective:&lt;/strong&gt; date (really a timestamp) for this specific &lt;em&gt;stream&lt;/em&gt; of reference data. Clicking in the &lt;strong&gt;Effective:&lt;/strong&gt; entry box will cause a calendar selection window to be displayed (initially set to the current date).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-08.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Upload data settings&#34; title=&#34;Upload data settings&#34;&gt;&lt;/p&gt;
&lt;p&gt;We are going to set the effective date to be late in 2019. Normally, you would choose a time stamp that matches the generation of the reference data. Click on the blue Previous Month icon (a less than symbol &lt;code&gt;&amp;lt;&lt;/code&gt;) on the Year/Month line to move back to December 2019.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-09.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Calendar Effective Date Selection&#34; title=&#34;Calendar Effective Date Selection&#34;&gt;&lt;/p&gt;
&lt;p&gt;Select the 1st (clicking on 1) at which point the calendar selection window will disappear and a time of 2019-12-01T00:00:00.000Z is displayed. This is the default whenever  using the calendar selection window in Stroom - the resultant timestamp is that of the day selected at 00:00:00 (Zulu time).
To get the calendar selection window to disappear, click anywhere outside of the timestamp entry box.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-10.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Upload data choose file&#34; title=&#34;Upload data choose file&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note, if you happen to click on the &lt;strong&gt;OK&lt;/strong&gt; button before selecting the &lt;strong&gt;File&lt;/strong&gt; (or Stream Type for that matter), an appropriate Alert dialog box will be displayed&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-11.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Upload Data No file set&#34; title=&#34;Upload Data No file set&#34;&gt;&lt;/p&gt;
&lt;p&gt;We don&amp;rsquo;t need to set &lt;strong&gt;Meta Data&lt;/strong&gt; for this stream of reference data, but we (obviously) need to select the file. For the purposes of this example, we will utilise the file &lt;strong&gt;GeoHostReference.log&lt;/strong&gt; you downloaded earlier in the &lt;strong&gt;Reference Data&lt;/strong&gt; section of this document. This file contains a header and three lines of reference data as per&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FQDN	IPAddress	Country	Site	Building	Room	TimeZones
stroomnode00.strmdev00.org	192.168.2.245	GBR	Bristol-S00	GZero	R00	+00:00/+01:00
stroomnode01.strmdev01.org	192.168.3.117	AUS	Sydney-S04	R6	5-134	+10:00/+11:00
host01.company4.org	192.168.4.220	USA	LosAngeles-S19	ILM	C5-54-2	-08:00/-07:00
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When we construct the pipeline for this reference feed, we will see how to make use of the header line.&lt;/p&gt;
&lt;p&gt;So, click on the &lt;strong&gt;Choose File&lt;/strong&gt; button to bring up a file selector window. Navigate within the selector window to the location on your location machine where you have saved the GeoHostReference.log file. On clicking &lt;strong&gt;Open&lt;/strong&gt; we return to the &lt;strong&gt;Upload&lt;/strong&gt; window with the file selected.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-12.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Upload Reference Data - File chosen&#34; title=&#34;Upload Reference Data - File chosen&#34;&gt;&lt;/p&gt;
&lt;p&gt;On clicking &lt;strong&gt;OK&lt;/strong&gt; we get an Alert dialog window to advise a file has been uploaded.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-13.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Upload Alert window&#34; title=&#34;Upload Alert window&#34;&gt;&lt;/p&gt;
&lt;p&gt;at which point we press &lt;strong&gt;Close&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;At this point, the &lt;strong&gt;Upload&lt;/strong&gt; selection window closes, and we see our file displayed  in the &lt;code&gt;GeoHost-V1.0-REFERENCE&lt;/code&gt; &lt;strong&gt;Data&lt;/strong&gt; stream table.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-14.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Upload Display raw reference stream&#34; title=&#34;Upload Display raw reference stream&#34;&gt;&lt;/p&gt;
&lt;p&gt;When we click on the newly up-loaded stream in the &lt;em&gt;Stream Table&lt;/em&gt; pane we see the other two panes fill with information.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-15.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Upload Selected stream&#34; title=&#34;Upload Selected stream&#34;&gt;&lt;/p&gt;
&lt;p&gt;The middle pane shows the selected or &lt;em&gt;Specific&lt;/em&gt; feed and any linked streams. A linked stream could be the resultant Reference data set generated from a Raw Reference stream. If errors occur during processing of the stream, then a linked stream could be an Error stream.&lt;/p&gt;
&lt;p&gt;The bottom pane displays the selected stream&amp;rsquo;s data or meta-data. If we click on the &lt;strong&gt;Meta&lt;/strong&gt; link at the top of this pane, we will see the &lt;em&gt;Metadata&lt;/em&gt; associated with this stream. We also note that the &lt;strong&gt;Meta&lt;/strong&gt; link at the bottom of the pane is now embolden.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-16.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Upload Selected stream - meta-data&#34; title=&#34;Upload Selected stream - meta-data&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can see the metadata we set - the EffectiveTime, and implicitly, the Feed but we also see additional fields that Stroom has added that provide more detail about the data and its delivery to Stroom such as how and when it was received. We now need to switch back to the Data display as we need to author our reference feed translation.&lt;/p&gt;
&lt;h3 id=&#34;create-pipeline&#34;&gt;Create Pipeline&lt;/h3&gt;
&lt;p&gt;We now need to create the pipeline for our reference feed so that we can create our translation and hence create reference data for our feed.&lt;/p&gt;
&lt;p&gt;Within the Explorer pane, and having selected the &lt;code&gt;Event Sources&lt;/code&gt; system group, right click to bring up the object context menu, then the New sub-context menu. Move to the &lt;img src=&#34;../resources/icons/pipeLineItem.png&#34; alt=&#34;PipelineItem&#34; title=&#34;PipelineItem&#34;&gt; and left click to select. When the &lt;em&gt;New Pipeline&lt;/em&gt; selection window appears, navigate to, then select the &lt;code&gt;Feeds and Translations&lt;/code&gt; system group then enter the name of the reference feed, GeoHost-V1.0-REFERENCE in the &lt;strong&gt;Name:&lt;/strong&gt; text entry box.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-17.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Pipeline - GEOHOST Reference&#34; title=&#34;New Pipeline - GeoHost-V1.0-REFERENCE&#34;&gt;&lt;/p&gt;
&lt;p&gt;On pressing the &lt;strong&gt;OK&lt;/strong&gt; button you will be presented with the new pipeline&amp;rsquo;s configuration tab&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-18.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Pipeline - Configuration tab&#34; title=&#34;New Pipeline - Configuration tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;Within &lt;strong&gt;Settings&lt;/strong&gt;, enter an appropriate description as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-19.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Pipeline - Configured settings&#34; title=&#34;New Pipeline - Configured settings&#34;&gt;&lt;/p&gt;
&lt;p&gt;We now need to select the structure this pipeline will use. We need to move from the &lt;strong&gt;Settings&lt;/strong&gt; sub-item on the pipeline configuration tab to the &lt;strong&gt;Structure&lt;/strong&gt; sub-item. This is done by clicking on the &lt;strong&gt;Structure&lt;/strong&gt; link, at which we will see&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-20.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Pipeline - Structure configuration&#34; title=&#34;New Pipeline - Structure configuration&#34;&gt;&lt;/p&gt;
&lt;p&gt;As this pipeline will be processing reference data, we would use a &lt;code&gt;Reference Data&lt;/code&gt; pipeline. This is done by inheriting it from a defined set of Standard Pipelines. To do this, click on the menu selection icon &lt;img src=&#34;../resources/icons/menu-selection-horizontal.png&#34; alt=&#34;Menu Selection&#34; title=&#34;Menu Selection&#34;&gt; to the right of the &lt;strong&gt;Inherit From:&lt;/strong&gt; test display box.&lt;/p&gt;
&lt;p&gt;When the &lt;strong&gt;Choose item&lt;/strong&gt; selection window appears, navigate to &lt;code&gt;Template Pipelines&lt;/code&gt; system group (if not already displayed), and select (left click) the &lt;img src=&#34;../resources/icons/pipeline.png&#34; alt=&#34;Pipeline&#34; title=&#34;Pipeline&#34;&gt; &lt;code&gt;Reference Data&lt;/code&gt; pipeline&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-21.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Pipeline - Reference Data pipeline inherited&#34; title=&#34;New Pipeline - Reference Data pipeline inherited&#34;&gt;&lt;/p&gt;
&lt;p&gt;then press &lt;strong&gt;OK&lt;/strong&gt;. At this we will see the inherited pipeline structure of&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-22.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Pipeline - Inherited set&#34; title=&#34;New Pipeline - Inherited set&#34;&gt;&lt;/p&gt;
&lt;p&gt;Noting that this pipeline has not yet been saved - indicated by the * in the tab label and the highlighted &lt;img src=&#34;../resources/icons/save.png&#34; alt=&#34;save&#34; title=&#34;Save&#34;&gt;, click on the &lt;img src=&#34;../resources/icons/save.png&#34; alt=&#34;save&#34; title=&#34;Save&#34;&gt; to save, which results in&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-23.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New Pipeline - saved&#34; title=&#34;New Pipeline - saved&#34;&gt;&lt;/p&gt;
&lt;p&gt;This ends the first stage of the pipeline creation. We need to author the feed&amp;rsquo;s translation.&lt;/p&gt;
&lt;h3 id=&#34;create-text-converter&#34;&gt;Create Text Converter&lt;/h3&gt;
&lt;p&gt;To turn our tab delimited data in Stroom reference data, we first need to convert the text into simple XML. We do this using a &lt;em&gt;Text Converter. Test Converters&lt;/em&gt; use a &lt;em&gt;Stroom Data Splitter&lt;/em&gt; to convert text into simple XML.&lt;/p&gt;
&lt;p&gt;Within the Explorer pane, and having selected the &lt;code&gt;Event Sources&lt;/code&gt; system group, right click to bring up the object context menu. Navigate to the &lt;img src=&#34;../resources/icons/save.png&#34; alt=&#34;save&#34; title=&#34;save&#34;&gt;, click on the &lt;img src=&#34;../resources/icons/textConverterItem.png&#34; alt=&#34;save&#34; title=&#34;Text Converter&#34;&gt; item and left click to select.&lt;/p&gt;
&lt;p&gt;When the &lt;em&gt;New Text Converter&lt;/em&gt; selection window comes up, navigate to and select &lt;code&gt;Event Sources&lt;/code&gt; system group, then enter the name of the feed, GeoHost-V1.0-REFERENCE into the &lt;strong&gt;Name:&lt;/strong&gt; text entry box as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-24.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New TextConverter&#34; title=&#34;New TextConverter&#34;&gt;&lt;/p&gt;
&lt;p&gt;On pressing the &lt;strong&gt;OK&lt;/strong&gt; button we see the next text converter&amp;rsquo;s configuration tab displayed.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-25.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New TextConverter Settings&#34; title=&#34;New TextConverter Settings&#34;&gt;&lt;/p&gt;
&lt;p&gt;Enter an appropriate description into the &lt;strong&gt;Description:&lt;/strong&gt; text entry box, for instance&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Text converter for device Logical and Geographic reference feed holding FQDN, IPAddress, Country, Site, Building, Room and Time Zones. Feed has a header and is tab separated.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Set the &lt;strong&gt;Converter Type:&lt;/strong&gt; to be &lt;code&gt;Data Splitter&lt;/code&gt; from the drop-down menu.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-26.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New TextConverter Settings configured&#34; title=&#34;New TextConverter Settings configured&#34;&gt;&lt;/p&gt;
&lt;p&gt;We next press the &lt;strong&gt;Conversion&lt;/strong&gt; sub-item on the TextConverter tab to bring up the &lt;em&gt;Data Splitter&lt;/em&gt; editing window.&lt;/p&gt;
&lt;p&gt;The following is our Data Splitter code (see &lt;strong&gt;Data Splitter&lt;/strong&gt; documentation for more complete details)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#099&#34;&gt;&amp;lt;?xml version=&amp;#34;1.1&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;dataSplitter&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data-splitter:3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data-splitter:3 file://data-splitter-v3.0.1.xsd&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;3.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- 
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  GEOHOST REFERENCE FEED:
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  CHANGE HISTORY
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  v1.0.0 - 2020-02-09 John Doe
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  This is a reference feed for device Logical and Geographic data.
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  The feed provides for each device
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device FQDN
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device IP Address
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Country location (using ISO 3166-1 alpha-3 codes)
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Site location
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Building location
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Room location
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  *the device TimeZone location (both standard then daylight timezone offsets from UTC)
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  The data is a TAB delimited file with the first line providing headings.
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  Example data:
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  FQDN	IPAddress	Country	Site	Building	Room	TimeZones
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;stroomnode00.strmdev00.org	192.168.2.245	GBR	Bristol-S00	GZero	R00	+00:00/+01:00
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;stroomnode01.strmdev01.org	192.168.3.117	AUS	Sydney-S04	R6	5-134	+10:00/+11:00
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;host01.company4.org	192.168.4.220	USA	LosAngeles-S19	ILM	C5-54-2	-08:00/-07:00
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;   --&amp;gt;&lt;/span&gt;
   
   &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- Match the heading line - split on newline and match a maximum of one line  --&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;split&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;delimiter=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;maxMatch=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    
    &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- Store each heading and note we split fields on the TAB (&amp;amp;#9;) character --&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;group&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;split&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;delimiter=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;amp;#9;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;var&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;id=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;heading&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/split&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/split&amp;gt;&lt;/span&gt;
    
  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- Match all other data lines - splitting on newline --&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;split&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;delimiter=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
     &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;group&amp;gt;&lt;/span&gt;
       &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- Store each field using the column heading number for each column ($heading$1) and note we split fields on the TAB (&amp;amp;#9;) character --&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;split&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;delimiter=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&amp;amp;#9;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
          &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;data&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;name=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;$heading$1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;value=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;$1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/split&amp;gt;&lt;/span&gt;
     &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/group&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/split&amp;gt;&lt;/span&gt;
   &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/dataSplitter&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;At this point we want to save our Text Converter, so click on the &lt;img src=&#34;../resources/icons/save.png&#34; alt=&#34;save&#34; title=&#34;Save&#34;&gt; icon.&lt;/p&gt;
&lt;p&gt;A copy of this data splitter can be found &lt;a href=&#34;GeoHost-data-splitter.txt&#34; title=&#34;GEOHOST Data Splitter&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;assign-text-converter-to-pipeline&#34;&gt;Assign Text Converter to Pipeline&lt;/h3&gt;
&lt;p&gt;To test our Text Converter, we need to modify our &lt;code&gt;GeoHost-V1.0-REFERENCE&lt;/code&gt; pipeline to use it. Select the &lt;code&gt;GeoHost-V1.0-REFERENCE&lt;/code&gt; pipeline tab and then select the &lt;strong&gt;Structure&lt;/strong&gt; sub-item&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-27.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Associated text converter with pipeline&#34; title=&#34;Associated text converter with pipeline&#34;&gt;&lt;/p&gt;
&lt;p&gt;To associate our new Text Converter with the pipeline, click on the &lt;img src=&#34;../resources/icons/combinedParser.png&#34; alt=&#34;combinedParser&#34; title=&#34;combinedParser&#34;&gt; icon then move the cursor to the &lt;em&gt;Property&lt;/em&gt; (middle) pane then double click on the &lt;strong&gt;textConverter&lt;/strong&gt; Property Name to allow you to edit the property as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-28.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter Edit property&#34; title=&#34;textConverter Edit property&#34;&gt;&lt;/p&gt;
&lt;p&gt;We leave the Property &lt;strong&gt;Source:&lt;/strong&gt; as &lt;em&gt;Inherit&lt;/em&gt; but we need to change the Property &lt;strong&gt;Value:&lt;/strong&gt; from &lt;em&gt;None&lt;/em&gt; to be our newly created &lt;code&gt;GeoHost-V1.0-REFERENCE&lt;/code&gt; text Converter&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-29.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter select GeoHost-V1.0-REFERENCE&#34; title=&#34;textConverter select GeoHost-V1.0-REFERENCE&#34;&gt;&lt;/p&gt;
&lt;p&gt;then press &lt;strong&gt;OK&lt;/strong&gt;. At this we will see the Property &lt;em&gt;Value&lt;/em&gt; set&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-30.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter set Property Value&#34; title=&#34;textConverter set Property Value&#34;&gt;&lt;/p&gt;
&lt;p&gt;Again press &lt;strong&gt;OK&lt;/strong&gt; to finish editing this property and we then see that the &lt;strong&gt;textConverter&lt;/strong&gt; property has been set to GeoHost-V1.0-REFERENCE.
Similarly set the &lt;strong&gt;type&lt;/strong&gt; property &lt;em&gt;Value&lt;/em&gt; to &amp;ldquo;Data Splitter&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;At this point, we should save our changes, by clicking on the highlighted &lt;img src=&#34;../resources/icons/save.png&#34; alt=&#34;save&#34; title=&#34;Save&#34;&gt; icon. The combined Parser window panes should now look like&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-31.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter set Property Value type&#34; title=&#34;textConverter set Property Value type&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;test-text-converter&#34;&gt;Test Text Converter&lt;/h3&gt;
&lt;p&gt;To test our Text Converter, we select the GeoHost-V1.0-REFERENCE &lt;strong&gt;Feed&lt;/strong&gt; tab &lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-32.png&#34; alt=&#34;GeoHost-V1.0-REFERENCE Feed&#34; title=&#34;GeoHost-V1.0-REFERENCE Feed&#34;&gt; then click on our uploaded stream in the &lt;em&gt;Stream Table&lt;/em&gt; pane, then click the check box of the &lt;em&gt;Raw Reference&lt;/em&gt; stream in the &lt;em&gt;Specific Stream&lt;/em&gt; table (middle pane)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-33.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter - select raw reference data&#34; title=&#34;textConverter - select raw reference data&#34;&gt;&lt;/p&gt;
&lt;p&gt;We now want to step our data through the Text Converter. We enter Stepping Mode by pressing the stepping button &lt;img src=&#34;../resources/icons/enterStepping.png&#34; alt=&#34;enterStepping&#34; title=&#34;Enter Stepping&#34;&gt; found at the bottom of the right of the stream &lt;em&gt;Raw Data&lt;/em&gt; display.&lt;/p&gt;
&lt;p&gt;You will then be requested to choose a pipeline to step with, at which, you should navigate to the &lt;code&gt;GeoHost-V1.0-REFERENCE&lt;/code&gt; pipeline as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-34.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter - select pipeline to step with&#34; title=&#34;textConverter - select pipeline to step with&#34;&gt;&lt;/p&gt;
&lt;p&gt;then press &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;At this point we enter the pipeline Stepping tab&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-35.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter - stepping tab&#34; title=&#34;textConverter - stepping tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;which initially displays the Raw Reference data from our stream.&lt;/p&gt;
&lt;p&gt;We click on the &lt;img src=&#34;../resources/icons/combinedParser.png&#34; alt=&#34;combinedParser&#34; title=&#34;combinedParser&#34;&gt; icon, to display.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-36.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter - stepping editor workspace&#34; title=&#34;textConverter - stepping editor workspace&#34;&gt;&lt;/p&gt;
&lt;p&gt;This &lt;em&gt;stepping&lt;/em&gt; window is divided into three sub-panes. the top one is the Text Converter editor and it will allow you to adjust the text conversion should you wish too. The bottom left window displays the &lt;em&gt;input&lt;/em&gt; to the Text Converter. The bottom right window displays the &lt;em&gt;output&lt;/em&gt; from the Text Converter for the given input.&lt;/p&gt;
&lt;p&gt;We now click on the pipeline Step Forward button &lt;img src=&#34;../resources/icons/stepForward.png&#34; alt=&#34;stepForward&#34; title=&#34;Step Forward&#34;&gt; to single step the Raw reference data throughout text converter. We see that the Stepping function has displayed the heading and first data line of our raw reference data in the &lt;em&gt;input&lt;/em&gt; sub-pane and the resultant simple &lt;em&gt;records&lt;/em&gt; XML (adhering to the Stroom &lt;strong&gt;records v2.0&lt;/strong&gt; schema) in the &lt;em&gt;output&lt;/em&gt; pane.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-37.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter - pipeline stepping - 1st record&#34; title=&#34;textConverter - pipeline stepping - 1st record&#34;&gt;&lt;/p&gt;
&lt;p&gt;If we again press the &lt;img src=&#34;../resources/icons/stepForward.png&#34; alt=&#34;stepForward&#34; title=&#34;Step Forward&#34;&gt; button we see the second line in our raw reference data in the &lt;em&gt;input&lt;/em&gt; sub-pane and the resultant simple &lt;em&gt;records&lt;/em&gt; XML in the &lt;em&gt;output&lt;/em&gt; pane.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-38.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter - pipeline stepping - 2nd record&#34; title=&#34;textConverter - pipeline stepping - 2nd record&#34;&gt;&lt;/p&gt;
&lt;p&gt;Pressing the Step Forward button &lt;img src=&#34;../resources/icons/stepForward.png&#34; alt=&#34;stepForward&#34; title=&#34;Step Forward&#34;&gt; again displays our third and last line of our raw and converted data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-39.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - textConverter - pipeline stepping - 3rd record&#34; title=&#34;textConverter - pipeline stepping - 3rd record&#34;&gt;&lt;/p&gt;
&lt;p&gt;We have now successfully tested the Text Converter for our reference feed. Our next step is to author our translation to generate reference data records that Stroom can use.&lt;/p&gt;
&lt;h3 id=&#34;create-xslt-translation&#34;&gt;Create XSLT Translation&lt;/h3&gt;
&lt;p&gt;We now need to create our translation. This XSLT translation will convert simple &lt;em&gt;records&lt;/em&gt; XML data into &lt;em&gt;ReferenceData&lt;/em&gt; records - see the Stroom &lt;strong&gt;reference-data v2.0.1&lt;/strong&gt; Schema for details.&lt;/p&gt;
&lt;p&gt;We first need to create an XSLT translation for our feed. Move back to the Explorer window, and with the cursor having selected the &lt;code&gt;Event Sources&lt;/code&gt; system group, right click the mouse to display the object context menu, select &lt;strong&gt;New&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-40.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - translation object sub-context menu&#34; title=&#34;translation object sub-contect menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;and then move the cursor to the &lt;img src=&#34;../resources/icons/xsltItem.png&#34; alt=&#34;xsltItem&#34; title=&#34;XSLT Item&#34;&gt; item, then left click to select.&lt;/p&gt;
&lt;p&gt;When the &lt;strong&gt;New XSLT&lt;/strong&gt; selection window comes up, navigate to the &lt;code&gt;Event Sources&lt;/code&gt; system group and enter the name of the reference feed - GeoHost-V1.0-REFERENCE into the &lt;strong&gt;Name:&lt;/strong&gt; text entry box as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-41.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New xslt Translation selection window&#34; title=&#34;New xslt Translation selection window&#34;&gt;&lt;/p&gt;
&lt;p&gt;On pressing the &lt;strong&gt;OK&lt;/strong&gt; button we see the XSL tab for our translation and as previously, we enter an appropriate description before selecting the &lt;strong&gt;XSLT&lt;/strong&gt; sub-item.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-42.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - New xslt - Configuration tab&#34; title=&#34;New xslt - Configuration tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;On selection of the &lt;strong&gt;XSLT&lt;/strong&gt; sub-item, we are presented with the XSLT editor window&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-43.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - XSLT editor&#34; title=&#34;xslt Translation - XSLT editor&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this point, rather than edit the translation in this editor and then assign this translation to the GeoHost-V1.0-REFERENCE pipeline, we will first make the assignment in the pipeline and then develop the translation whilst stepping through the raw data. This is to demonstrate there are a number of ways to &lt;em&gt;develop a translation&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;So, to start, save the XSLT by clicking on the &lt;img src=&#34;../resources/icons/save.png&#34; alt=&#34;save&#34; title=&#34;Save&#34;&gt; icon, then click on the GeoHost-V1.0-REFERENCE pipeline &lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-44.png&#34; alt=&#34;GeoHost-V1.0-REFERENCE pipeline&#34; title=&#34;GeoHost-V1.0-REFERENCE Pipeline&#34;&gt; tab to raise the GeoHost-V1.0-REFERENCE pipeline. Then select the &lt;strong&gt;Structure&lt;/strong&gt; sub-item followed by selecting the &lt;strong&gt;XSL translationFilter&lt;/strong&gt; icon. We now see the  &lt;strong&gt;XSL translationFilter&lt;/strong&gt; Property Table for our pipeline in the middle pane.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-45.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt translation element - property pane&#34; title=&#34;xslt translation element - property pane&#34;&gt;&lt;/p&gt;
&lt;p&gt;To associate our new translation with the pipeline, move the cursor to the &lt;em&gt;Property Table&lt;/em&gt;, click on the grayed out &lt;em&gt;xslt&lt;/em&gt; Property Name and then click on the Edit Property &lt;img src=&#34;../resources/icons/edit.png&#34; alt=&#34;editProperty&#34; title=&#34;Edit Property&#34;&gt; icon to allow you to edit the property as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-46.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt -property editor&#34; title=&#34;xslt -property editor&#34;&gt;&lt;/p&gt;
&lt;p&gt;We leave the Property &lt;strong&gt;Source:&lt;/strong&gt; as &lt;em&gt;Inherit&lt;/em&gt; and we need to change the Property &lt;strong&gt;Value:&lt;/strong&gt; from &lt;em&gt;None&lt;/em&gt; to be our newly created GeoHost-V1.0-REFERENCE XSL translation.
To do this, position the cursor over the menu selection icon &lt;img src=&#34;../resources/icons/menu-selection-horizontal.png&#34; alt=&#34;Menu Selection&#34; title=&#34;Menu Selection&#34;&gt; of the &lt;strong&gt;Value:&lt;/strong&gt; chooser and right click, at which the &lt;code&gt;Choose item&lt;/code&gt; selection window appears. Navigate to the &lt;code&gt;Event Sources&lt;/code&gt; system group then select the GeoHost-V1.0-REFERENCE xsl translation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-47.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt - value selection&#34; title=&#34;xslt - value selection&#34;&gt;&lt;/p&gt;
&lt;p&gt;then press &lt;strong&gt;OK&lt;/strong&gt;. At this point we will see the property &lt;strong&gt;Value:&lt;/strong&gt; set&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-48.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt - value selected&#34; title=&#34;xslt - value selected&#34;&gt;&lt;/p&gt;
&lt;p&gt;Again press &lt;strong&gt;OK&lt;/strong&gt; to finish editing this property and we see that the &lt;em&gt;xslt&lt;/em&gt; property has been set to GeoHost-V1.0-REFERENCE.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-49.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt - property set&#34; title=&#34;xslt - property set&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this point, we should save our changes, by clicking on the highlighted &lt;img src=&#34;../resources/icons/save.png&#34; alt=&#34;save&#34; title=&#34;Save&#34;&gt; icon.&lt;/p&gt;
&lt;h3 id=&#34;test-xslt-translation&#34;&gt;Test XSLT Translation&lt;/h3&gt;
&lt;p&gt;We now go back to the GeoHost-V1.0-REFERENCE &lt;strong&gt;Feed&lt;/strong&gt; tab &lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-32.png&#34; alt=&#34;GeoHost-V1.0-REFERENCE Feed&#34; title=&#34;GeoHost-V1.0-REFERENCE Feed&#34;&gt; then click on our uploaded stream in the &lt;em&gt;Stream Table&lt;/em&gt; pane. Next click the check box of the &lt;em&gt;Raw Reference&lt;/em&gt; stream in the &lt;em&gt;Specific Stream&lt;/em&gt; table (middle pane) as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-33.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - GeoHost-V1.0-REFERENCE feedTab - Specific Stream&#34; title=&#34;GeoHost-V1.0-REFERENCE feedTab - Specific Stream&#34;&gt;&lt;/p&gt;
&lt;p&gt;We now want to step our data through the xslt Translation. We enter Stepping Mode by pressing the stepping button &lt;img src=&#34;../resources/icons/enterStepping.png&#34; alt=&#34;enterStepping&#34; title=&#34;Enter Stepping&#34;&gt; found at the bottom of the right of the stream &lt;em&gt;Raw Data&lt;/em&gt; display.&lt;/p&gt;
&lt;p&gt;You will then be requested to choose a pipeline to step with, at which, you should navigate to the GeoHost-V1.0-REFERENCE pipeline as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-50.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - select pipeline to step with&#34; title=&#34;xslt Translation - select pipeline to step with&#34;&gt;&lt;/p&gt;
&lt;p&gt;then press &lt;strong&gt;OK&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;At this point we enter the pipeline through the Stepping tab &lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-35.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - stepping tab&#34; title=&#34;xslt Translation - stepping tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;which initially displays the Raw Reference data from our stream.&lt;/p&gt;
&lt;p&gt;We click on the &lt;img src=&#34;../resources/icons/translationFilter.png&#34; alt=&#34;translationFilter&#34; title=&#34;translationFilter&#34;&gt; icon to enter the &lt;em&gt;xslt Translation&lt;/em&gt; stepping window and all panes are empty.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-51.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - editor&#34; title=&#34;xslt Translation - editor&#34;&gt;&lt;/p&gt;
&lt;p&gt;As for the Text Converter, this translation &lt;em&gt;stepping&lt;/em&gt; window is divided into three sub-panes. The top one is the XSLT Translation. The bottom right window displays the &lt;em&gt;output&lt;/em&gt; from the XSLT Translation for the given input.&lt;/p&gt;
&lt;p&gt;We now click on the pipeline Step Forward button &lt;img src=&#34;../resources/icons/stepForward.png&#34; alt=&#34;stepForward&#34; title=&#34;Step Forward&#34;&gt; to single step the Raw reference data through our translation. We see that the Stepping function has displayed the first &lt;em&gt;records&lt;/em&gt; XML entry in the &lt;em&gt;input&lt;/em&gt; sub-pane and the same data is displayed in the &lt;em&gt;output&lt;/em&gt; sub-pane.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-52.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - editor 1st record&#34; title=&#34;xslt Translation - editor 1st record&#34;&gt;&lt;/p&gt;
&lt;p&gt;But we also note if we move along the pipeline structure to the &lt;img src=&#34;../resources/icons/schemaFilter.png&#34; alt=&#34;schemaFilter&#34; title=&#34;schemaFilter&#34;&gt; we will see a schema fault is displayed &lt;img src=&#34;../resources/icons/schemaError.png&#34; alt=&#34;schemaError&#34; title=&#34;schemaFilter Error&#34;&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-53.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - schema fault&#34; title=&#34;xslt Translation - schema fault&#34;&gt;&lt;/p&gt;
&lt;p&gt;In essence, since the &lt;em&gt;translation&lt;/em&gt; has done nothing, and the data is simple &lt;em&gt;records&lt;/em&gt; XML, the system is indicating that it expects the &lt;em&gt;output&lt;/em&gt; data to be in the &lt;em&gt;reference-data v2.0.1&lt;/em&gt; format.&lt;/p&gt;
&lt;p&gt;We can correct this by adding the skeleton xslt translation for reference data into our translationFilter. Move back to the &lt;img src=&#34;../resources/icons/translationFilter.png&#34; alt=&#34;translationFilter&#34; title=&#34;translationFilter&#34;&gt; icon on the pipeline structure and add the following to the xsl
window&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#099&#34;&gt;&amp;lt;?xml version=&amp;#34;1.1&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xpath-default-namespace=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;records:2&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns:xsl=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://www.w3.org/1999/XSL/Transform&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns:stroom=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;stroom&amp;#34;&lt;/span&gt; 
&lt;span style=&#34;color:#309&#34;&gt;xmlns:evt=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;event-logging:3&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

 &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;match=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;records&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;referenceData&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#309&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2 file://reference-data-v2.0.xsd&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;2.0.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:apply-templates/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/referenceData&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
  
&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- MAIN TEMPLATE --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;match=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;record&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And on pressing the refresh button &lt;img src=&#34;../resources/icons/stepRefresh.png&#34; alt=&#34;stepRefresh&#34; title=&#34;Step Refresh Button&#34;&gt; we see that the &lt;em&gt;output&lt;/em&gt; window is an empty ReferenceData element.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-54.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - null translation&#34; title=&#34;xslt Translation - null translation&#34;&gt;&lt;/p&gt;
&lt;p&gt;Also note that if we move to the &lt;img src=&#34;../resources/icons/schemaFilter.png&#34; alt=&#34;schemaFilter&#34; title=&#34;schemaFilter&#34;&gt; icon on the pipeline structure, we no longer have an &amp;ldquo;Invalid Schema Location&amp;rdquo; error.&lt;/p&gt;
&lt;p&gt;We next extend the translation to actually generate reference data. The translation will now look like&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#099&#34;&gt;&amp;lt;?xml version=&amp;#34;1.1&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xpath-default-namespace=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;records:2&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns:xsl=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://www.w3.org/1999/XSL/Transform&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns:stroom=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;stroom&amp;#34;&lt;/span&gt; 
&lt;span style=&#34;color:#309&#34;&gt;xmlns:evt=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;event-logging:3&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

 &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!--
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  GEOHOST REFERENCE FEED:
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  CHANGE HISTORY
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  v1.0.0 - 2020-02-09 John Doe
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  This is a reference feed for device Logical and Geographic data.
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  The feed provides for each device
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device FQDN
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device IP Address
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Country location (using ISO 3166-1 alpha-3 codes)
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Site location
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Building location
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Room location
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  *the device TimeZone location (both standard then daylight timezone offsets from UTC)  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  The reference maps are
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  FQDN_TO_IP - Fully Qualified Domain Name to IP Address
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  IP_TO_FQDN - IP Address to FQDN (HostName)
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  FQDN_TO_LOC - Fully Qualified Domain Name to Location element
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  --&amp;gt;&lt;/span&gt;

 &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;match=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;records&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;referenceData&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#309&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2 file://reference-data-v2.0.xsd&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;2.0.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:apply-templates/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/referenceData&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
  
&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- MAIN TEMPLATE --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;match=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;record&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- FQDN_TO_IP map --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;FQDN_TO_IP&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;lower-case(data[@name=&amp;#39;FQDN&amp;#39;]/@value)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;IPAddress&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data[@name=&amp;#39;IPAddress&amp;#39;]/@value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/IPAddress&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  
  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- IP_TO_FQDN map --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;IP_TO_FQDN&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;lower-case(data[@name=&amp;#39;IPAddress&amp;#39;]/@value)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;HostName&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data[@name=&amp;#39;FQDN&amp;#39;]/@value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/HostName&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and when we refresh, by pressing the &lt;em&gt;Refresh Current Step&lt;/em&gt; button &lt;img src=&#34;../resources/icons/stepRefresh.png&#34; alt=&#34;stepRefresh&#34; title=&#34;Step Refresh Button&#34;&gt; we see that the &lt;em&gt;output&lt;/em&gt; window now has &lt;em&gt;Reference&lt;/em&gt; elements within the parent &lt;em&gt;ReferenceData&lt;/em&gt; element&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-55.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - basic translation&#34; title=&#34;xslt Translation - basic translation&#34;&gt;&lt;/p&gt;
&lt;p&gt;If we press the Step Forward button &lt;img src=&#34;../resources/icons/stepForward.png&#34; alt=&#34;stepForward&#34; title=&#34;Step Forward&#34;&gt; we see the second &lt;em&gt;record&lt;/em&gt; of our raw reference data in the &lt;em&gt;input&lt;/em&gt; sub-pane and the resultant &lt;em&gt;Reference&lt;/em&gt; elements&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-56.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - basic translation next record&#34; title=&#34;xslt Translation - basic translation next record&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this point it would be wise to save our translation. This is done by clicking on the highlighted &lt;img src=&#34;../resources/icons/save.png&#34; alt=&#34;save&#34; title=&#34;save&#34;&gt; icon in the top left-hand area of the window under the tabs.&lt;/p&gt;
&lt;p&gt;We can now further our Reference by adding a Fully Qualified Domain Name to Location reference - FQDN_TO_LOC and so now the translation looks like&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#099&#34;&gt;&amp;lt;?xml version=&amp;#34;1.1&amp;#34; encoding=&amp;#34;UTF-8&amp;#34; ?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:stylesheet&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xpath-default-namespace=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;records:2&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns:xsl=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://www.w3.org/1999/XSL/Transform&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;xmlns:stroom=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;stroom&amp;#34;&lt;/span&gt; 
&lt;span style=&#34;color:#309&#34;&gt;xmlns:evt=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;event-logging:3&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#309&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;

 &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!--
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  GEOHOST REFERENCE FEED:
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  CHANGE HISTORY
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  v1.0.0 - 2020-02-09 John Doe
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  This is a reference feed for device Logical and Geographic data.
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  The feed provides for each device
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device FQDN
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device IP Address
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Country location (using ISO 3166-1 alpha-3 codes)
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Site location
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Building location
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  * the device Room location
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  *the device TimeZone location (both standard then daylight timezone offsets from UTC)  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  The reference maps are
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  FQDN_TO_IP - Fully Qualified Domain Name to IP Address
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  IP_TO_FQDN - IP Address to FQDN (HostName)
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  FQDN_TO_LOC - Fully Qualified Domain Name to Location element
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;  --&amp;gt;&lt;/span&gt;

 &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;match=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;records&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;referenceData&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#309&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2 file://reference-data-v2.0.xsd&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;2.0.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:apply-templates/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/referenceData&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
  
&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- MAIN TEMPLATE --&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:template&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;match=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;record&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- FQDN_TO_IP map --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;FQDN_TO_IP&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;lower-case(data[@name=&amp;#39;FQDN&amp;#39;]/@value)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;IPAddress&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data[@name=&amp;#39;IPAddress&amp;#39;]/@value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/IPAddress&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  
  &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- IP_TO_FQDN map --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;IP_TO_FQDN&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;lower-case(data[@name=&amp;#39;IPAddress&amp;#39;]/@value)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;HostName&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data[@name=&amp;#39;FQDN&amp;#39;]/@value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/HostName&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  
   &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!-- FQDN_TO_LOC map --&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;FQDN_TO_LOC&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;lower-case(data[@name=&amp;#39;FQDN&amp;#39;]/@value)&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;&amp;lt;!--
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;    Note, when mapping to a XML node set, we make use of the Event namespace - i.e. evt: 
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;    defined on our stylesheet element. This is done, so that, when the node set is returned,
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;    it is within the correct namespace.
&lt;/span&gt;&lt;span style=&#34;color:#09f;font-style:italic&#34;&gt;    --&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Location&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Country&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data[@name=&amp;#39;Country&amp;#39;]/@value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Country&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Site&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data[@name=&amp;#39;Site&amp;#39;]/@value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Site&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Building&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data[@name=&amp;#39;Building&amp;#39;]/@value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Building&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Room&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data[@name=&amp;#39;Room&amp;#39;]/@value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Room&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:TimeZone&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;xsl:value-of&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;select=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;data[@name=&amp;#39;TimeZones&amp;#39;]/@value&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:TimeZone&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Location&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/xsl:template&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/xsl:stylesheet&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;and our second ReferenceData element would now look like&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-57.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - xslt Translation - complete translation 2nd record&#34; title=&#34;xslt Translation - complete translation 2nd record&#34;&gt;&lt;/p&gt;
&lt;p&gt;We have completed the translation and have hence completed the development of our GeoHost-V1.0-REFERENCE reference feed.&lt;/p&gt;
&lt;p&gt;At this point, the reference feed is set up to accept Raw Reference data, but it will not automatically process the raw data and hence it will not place reference data into the reference data store. To have Stroom automatically process Raw Reference streams, you will need to enable &lt;em&gt;Processors&lt;/em&gt; for this pipeline.&lt;/p&gt;
&lt;h3 id=&#34;enabling-the-reference-feed-processors&#34;&gt;Enabling the Reference Feed Processors&lt;/h3&gt;
&lt;p&gt;We now create the pipeline Processors for this feed, so that the raw reference data will be transformed into Reference Data on ingest and save to Reference Data stores.&lt;/p&gt;
&lt;p&gt;Open the reference feed pipeline by selecting the GeoHost-V1.0-REFERENCE pipeline &lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-44.png&#34; alt=&#34;GeoHost-V1.0-REFERENCE pipeline&#34; title=&#34;GeoHost-V1.0-REFERENCE Pipeline&#34;&gt; tab to raise the GeoHost-V1.0-REFERENCE pipeline. Then select the &lt;strong&gt;Processors&lt;/strong&gt; sub-item to show&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-58.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Processors&#34; title=&#34;pipeline Processors&#34;&gt;&lt;/p&gt;
&lt;p&gt;This configuration tab is divided into two panes. The top pane shows the current enabled Processors and any recently processed streams and the bottom pane provides meta-data about each Processor or recently processed streams.&lt;/p&gt;
&lt;p&gt;First, move the mouse to the Add Processor  &lt;img src=&#34;../resources/icons/add.png&#34; alt=&#34;add&#34; title=&#34;Add&#34;&gt; icon at the top left of the top pane. Select by left clicking this icon to have displayed the &lt;strong&gt;Add Filter&lt;/strong&gt; selection window&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-59.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Processors - Add Filter&#34; title=&#34;pipeline Processors - Add Filter&#34;&gt;&lt;/p&gt;
&lt;p&gt;This selection window allows us to &lt;em&gt;filter&lt;/em&gt; what set of data streams we want our Processor to process. As our intent is to enable processing for all GeoHost-V1.0-REFERENCE streams, both already received and yet to be received, then our filtering criteria is just to process all Raw Reference for this feed, ignoring all other conditions.&lt;/p&gt;
&lt;p&gt;To do this, first click on the &lt;strong&gt;Add Term&lt;/strong&gt; &lt;img src=&#34;../resources/icons/add.png&#34; alt=&#34;add&#34; title=&#34;Add&#34;&gt; icon. Keep the term and operator at the default settings, and select the &lt;strong&gt;Choose item&lt;/strong&gt;  &lt;img src=&#34;../resources/icons/menu-selection-horizontal.png&#34; alt=&#34;menu-selection-horizontal&#34; title=&#34;Menu button&#34;&gt; icon to navigate to the desired feed name (GeoHost-V1.0-REFERENCE) object&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-60.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Processors - choose feed name&#34; title=&#34;pipeline Processors - Choose Feed name&#34;&gt;&lt;/p&gt;
&lt;p&gt;and press &lt;strong&gt;OK&lt;/strong&gt; to make the selection.&lt;/p&gt;
&lt;p&gt;Next, we select the required &lt;em&gt;stream type&lt;/em&gt;. To do this click on the &lt;strong&gt;Add Term&lt;/strong&gt; &lt;img src=&#34;../resources/icons/add.png&#34; alt=&#34;add&#34; title=&#34;Add&#34;&gt; icon again. Click on the down arrow to change the Term selection from &lt;em&gt;Feed&lt;/em&gt; to &lt;em&gt;Type&lt;/em&gt;. Click in the &lt;strong&gt;Value&lt;/strong&gt; position on the highlighted line (it will be currently empty). Once you have clicked here a drop-down box will appear as per&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-61.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Processors - choose type&#34; title=&#34;pipeline Processors - Choose Stream Type&#34;&gt;&lt;/p&gt;
&lt;p&gt;at which point, select the &lt;em&gt;Stream Type&lt;/em&gt; of &lt;strong&gt;Raw Reference&lt;/strong&gt;and then press &lt;strong&gt;OK&lt;/strong&gt;. At this we return to the &lt;strong&gt;Add Processor&lt;/strong&gt; selection window to see that the &lt;em&gt;Raw Reference&lt;/em&gt; stream type has been added.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-62.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Processors - pipeline criteria set&#34; title=&#34;pipeline Processors - pipeline criteria set&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note the Processor has been added but it is in a &lt;strong&gt;disabled&lt;/strong&gt; state. We &lt;strong&gt;enable&lt;/strong&gt; both pipeline processor and the processor filter&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-63.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Processors - Enable&#34; title=&#34;pipeline Processors - Enable&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note - if this is the first time you have set up pipeline processing on your Stroom instance you may need to check that the &lt;strong&gt;Stream Processor&lt;/strong&gt; job is enabled on your Stroom instance. To do this go to the Stroom main menu and select &lt;em&gt;Monitoring&amp;gt;Jobs&amp;gt;&lt;/em&gt;
Check the status of the Stream Processor job and enable if required. If you need to enable the job also ensure you enable the job on the individual nodes as well (go to the bottom window pane and select the enable box on the far right)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-64.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Processors - Enable node processing&#34; title=&#34;pipeline Processors - Enable node processing&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-65.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Processors - Enable&#34; title=&#34;pipeline Processors - Enable&#34;&gt;&lt;/p&gt;
&lt;p&gt;Returning to the &lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-44.png&#34; alt=&#34;GeoHost-V1.0-REFERENCE pipeline&#34; title=&#34;GeoHost-V1.0-REFERENCE Pipeline&#34;&gt; tab, &lt;strong&gt;Processors&lt;/strong&gt; sub-item, if everything is working on your Stroom instance you should now see that Raw Reference streams are being processed by your processor - the &lt;strong&gt;Streams&lt;/strong&gt; count is incrementing and the &lt;strong&gt;Tracker%&lt;/strong&gt; is incrementing (when the Tracker% is 100% then all streams you selected (Filtered for) have been processed)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-66.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Processors - Enable&#34; title=&#34;pipeline Processors - Enable&#34;&gt;&lt;/p&gt;
&lt;p&gt;Navigating back to the &lt;strong&gt;Data&lt;/strong&gt; sub-item and clicking on the reference feed stream in the &lt;em&gt;Stream Table&lt;/em&gt; we see&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-67.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - pipeline Display Data&#34; title=&#34;pipeline Display Data&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the top pane, we see the &lt;em&gt;Streams table&lt;/em&gt; as per normal, but in the &lt;em&gt;Specific stream&lt;/em&gt; table we see that we have both a &lt;strong&gt;Raw Reference&lt;/strong&gt; stream and its child &lt;strong&gt;Reference&lt;/strong&gt; stream. By clicking on and highlighting the &lt;strong&gt;Reference&lt;/strong&gt; stream we see its content in the bottom pane.&lt;/p&gt;
&lt;p&gt;The complete ReferenceData for this stream is&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#099&#34;&gt;&amp;lt;?xml version=&amp;#34;1.1&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;referenceData&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns:stroom=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;stroom&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xmlns:evt=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;event-logging:3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;reference-data:2 file://reference-data-v2.0.xsd&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#309&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;2.0.1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;FQDN_TO_IP&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;stroomnode00.strmdev00.org&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;IPAddress&amp;gt;&lt;/span&gt;192.168.2.245&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/IPAddress&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;IP_TO_FQDN&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;192.168.2.245&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;HostName&amp;gt;&lt;/span&gt;stroomnode00.strmdev00.org&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/HostName&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;FQDN_TO_LOC&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;stroomnode00.strmdev00.org&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Location&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Country&amp;gt;&lt;/span&gt;GBR&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Country&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Site&amp;gt;&lt;/span&gt;Bristol-S00&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Site&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Building&amp;gt;&lt;/span&gt;GZero&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Building&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Room&amp;gt;&lt;/span&gt;R00&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Room&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:TimeZone&amp;gt;&lt;/span&gt;+00:00/+01:00&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:TimeZone&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Location&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;FQDN_TO_IP&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;stroomnode01.strmdev01.org&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;IPAddress&amp;gt;&lt;/span&gt;192.168.3.117&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/IPAddress&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;IP_TO_FQDN&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;192.168.3.117&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;HostName&amp;gt;&lt;/span&gt;stroomnode01.strmdev01.org&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/HostName&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;FQDN_TO_LOC&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;stroomnode01.strmdev01.org&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Location&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Country&amp;gt;&lt;/span&gt;AUS&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Country&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Site&amp;gt;&lt;/span&gt;Sydeny-S04&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Site&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Building&amp;gt;&lt;/span&gt;R6&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Building&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Room&amp;gt;&lt;/span&gt;5-134&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Room&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:TimeZone&amp;gt;&lt;/span&gt;+10:00/+11:00&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:TimeZone&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Location&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;FQDN_TO_IP&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;host01.company4.org&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;IPAddress&amp;gt;&lt;/span&gt;192.168.4.220&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/IPAddress&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;IP_TO_FQDN&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;192.168.4.220&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;HostName&amp;gt;&lt;/span&gt;host01.company4.org&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/HostName&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;reference&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;map&amp;gt;&lt;/span&gt;FQDN_TO_LOC&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/map&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;host01.company4.org&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Location&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Country&amp;gt;&lt;/span&gt;USA&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Country&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Site&amp;gt;&lt;/span&gt;LosAngeles-S19&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Site&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Building&amp;gt;&lt;/span&gt;ILM&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Building&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:Room&amp;gt;&lt;/span&gt;C5-54-2&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Room&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;evt:TimeZone&amp;gt;&lt;/span&gt;-08:00/-07:00&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:TimeZone&amp;gt;&lt;/span&gt;
      &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/evt:Location&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/reference&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#309;font-weight:bold&#34;&gt;&amp;lt;/referenceData&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If we go back to the reference feed itself (and click on the &lt;img src=&#34;../resources/icons/refresh.png&#34; alt=&#34;refresh&#34; title=&#34;Refresh&#34;&gt; button on the far right of the top and middle panes), we now see both the &lt;em&gt;Reference&lt;/em&gt; and &lt;em&gt;Raw Reference&lt;/em&gt; streams in the &lt;em&gt;Streams Table&lt;/em&gt; pane.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-68.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - reference feed - Data tab&#34; title=&#34;reference feed - Data tab&#34;&gt;&lt;/p&gt;
&lt;p&gt;Selecting the &lt;em&gt;Reference&lt;/em&gt; stream in the &lt;em&gt;Stream Table&lt;/em&gt; will result in the &lt;em&gt;Specific stream&lt;/em&gt; pane displaying the &lt;em&gt;Raw Reference&lt;/em&gt; and its child &lt;em&gt;Reference&lt;/em&gt; stream (highlighted) and the actual ReferenceData output in the &lt;em&gt;Data&lt;/em&gt; pane at the bottom.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-69.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - reference feed - Select reference&#34; title=&#34;reference feed - Select reference&#34;&gt;&lt;/p&gt;
&lt;p&gt;Selecting the &lt;em&gt;Raw Reference&lt;/em&gt; stream in the &lt;em&gt;Streams Table&lt;/em&gt; will result in the &lt;em&gt;Specific stream&lt;/em&gt; pane displaying the &lt;em&gt;Raw Reference&lt;/em&gt; and its child &lt;em&gt;Reference&lt;/em&gt; stream as before, but with the &lt;em&gt;Raw Reference&lt;/em&gt; stream highlighted and the actual Raw Reference input data displayed in the &lt;em&gt;Data&lt;/em&gt; pane at the bottom.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-70.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - reference feed - Select raw reference&#34; title=&#34;reference feed - Select raw reference&#34;&gt;&lt;/p&gt;
&lt;p&gt;The creation of the &lt;em&gt;Raw Reference&lt;/em&gt; is now complete.&lt;/p&gt;
&lt;p&gt;At this point you may wish to organise the resources you have created within the Explorer pane to a more appropriate location such as &lt;code&gt;Reference/GeoHost&lt;/code&gt;. Because Stroom Explorer is a flat structure you can move resources around to reorganise the content without any impact on directory paths, configurations etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-71.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Organise Resources&#34; title=&#34;reference feed - Organise Resources&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now you have created the new folder structure you can move the various GeoHost resources to this location.
Select all four resources by using the mouse right-click button while holding down the &lt;em&gt;Shift&lt;/em&gt; key. Then right click on the highlighted group to display the action menu&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-72.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Organise Resources - move content&#34; title=&#34;Organise Resources - move content&#34;&gt;&lt;/p&gt;
&lt;p&gt;Select &lt;strong&gt;move&lt;/strong&gt; and the &lt;em&gt;Move Multiple Items&lt;/em&gt; window will display. Navigate to the &lt;code&gt;Reference/GeoHost&lt;/code&gt; folder to move the items to this destination.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-73.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Organise Resources - select destination&#34; title=&#34;Organise Resources - select destination&#34;&gt;&lt;/p&gt;
&lt;p&gt;The final structure is seen below&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../resources/v6/UI-CreateReferenceFeed-74.png&#34; alt=&#34;Stroom UI CreateReferenceFeed - Organise Resources - finished&#34; title=&#34;Organise Resources - finished&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/search/elasticsearch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/search/elasticsearch/</guid>
      <description>
        
        
        &lt;h1 id=&#34;elasticsearch-integration&#34;&gt;Elasticsearch integration&lt;/h1&gt;
&lt;h2 id=&#34;contents&#34;&gt;Contents&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#1-introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2-indexing-data&#34;&gt;Indexing data&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#21-creating-an-index-in-elasticsearch&#34;&gt;Creating an index in Elasticsearch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#22-registering-the-index-in-stroom&#34;&gt;Registering the index in Stroom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#23-setting-index-retention&#34;&gt;Setting index retention&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#24-creating-an-indexing-pipeline&#34;&gt;Creating an indexing pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#25-creating-and-activating-a-stream-processor&#34;&gt;Creating and activating a stream processor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#26-checking-data-has-been-indexed&#34;&gt;Checking data has been indexed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#27-reindexing-data&#34;&gt;Reindexing data&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3-searching&#34;&gt;Searching&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;#31-stroom&#34;&gt;Stroom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#32-elasticsearch&#34;&gt;Elasticsearch&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#4-security&#34;&gt;Security&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;1-introduction&#34;&gt;1. Introduction&lt;/h2&gt;
&lt;p&gt;Stroom v6.1 can pass data to Elasticsearch for indexing.
Indices created using this process (i.e. those containing a &lt;code&gt;StreamId&lt;/code&gt; and &lt;code&gt;EventId&lt;/code&gt; corresponding to a particular Stroom instance)
are searchable via a Stroom &lt;em&gt;dashboard&lt;/em&gt;, much like a Stroom Lucene index.&lt;/p&gt;
&lt;p&gt;This integration provides operators with the flexibility to utilise the additional capabilities of Elasticsearch,
(like clustering and replication) and expose indexed data for consumption by external analytic or processing tools.&lt;/p&gt;
&lt;p&gt;This guide will take you through creating an Elasticsearch index, setting up an indexing pipeline, activating a stream processor and searching the indexed data in both Stroom and Elasticsearch.&lt;/p&gt;
&lt;h3 id=&#34;11-assumptions&#34;&gt;1.1. Assumptions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;You have created an Elasticsearch cluster.
For test purposes, you can quickly create a single-node cluster using Docker by following the steps in the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-cli-run-dev-mode&#34;&gt;Elasticsearch Docs (external link)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The Elasticsearch cluster is reachable via HTTP/S from all Stroom nodes participating in &lt;a href=&#34;../../quick-start-guide/running/running.md&#34;&gt;stream processing&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Elasticsearch security is disabled.&lt;/li&gt;
&lt;li&gt;You have a feed containing &lt;code&gt;Event&lt;/code&gt; data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;12-key-differences&#34;&gt;1.2. Key differences&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Unlike with &lt;a href=&#34;Solr.md&#34;&gt;Solr indexing&lt;/a&gt;, Elasticsearch field mappings are managed outside of Stroom, usually via the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-create-index.html#mappings&#34;&gt;REST API (external link)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Aside from creating the mandatory &lt;code&gt;StreamId&lt;/code&gt; and &lt;code&gt;EventId&lt;/code&gt; field mappings, explicitly defining mappings for other fields is optional.
It is however, considered good practice to define these mappings, to ensure each field&amp;rsquo;s data type is correctly parsed and represented.
For text fields, it also pays to ensure that the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-params.html&#34;&gt;appropriate mapping parameters are used (external link)&lt;/a&gt;,
in order to satisfy your search and analysis requirements - and meet system resource constraints.&lt;/li&gt;
&lt;li&gt;Unlike both Solr and Lucene indexing, it is not necessary to mark a field as &lt;code&gt;stored&lt;/code&gt; (i.e. storing its raw value in the inverted index).
This is because Elasticsearch stores the content of the original document in the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-source-field.html&#34;&gt;&lt;code&gt;_source&lt;/code&gt; field (external link)&lt;/a&gt;,
which is retrieved when populating search results.
Provided the &lt;code&gt;_source&lt;/code&gt; field is enabled (as it is by default), a field is treated as &lt;code&gt;stored&lt;/code&gt; in Stroom and its value doesn&amp;rsquo;t need to be retrieved via an &lt;em&gt;extraction pipeline&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2-indexing-data&#34;&gt;2. Indexing data&lt;/h2&gt;
&lt;h3 id=&#34;21-creating-an-index-in-elasticsearch&#34;&gt;2.1. Creating an index in Elasticsearch&lt;/h3&gt;
&lt;p&gt;The following cURL command creates an index named &lt;code&gt;stroom_test&lt;/code&gt; in Elasticsearch cluster &lt;code&gt;http://localhost:9200&lt;/code&gt; consisting of the following fields:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;StreamId&lt;/code&gt; (mandatory, must be of data type &lt;code&gt;long&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;EventId&lt;/code&gt; (mandatory, must also be &lt;code&gt;long&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Name&lt;/code&gt; (text). Uses the default analyzer, which tokenizes the text for matching on terms.
&lt;code&gt;fielddata&lt;/code&gt; is enabled, which allows for &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/text.html#fielddata-mapping-param&#34;&gt;aggregating on these terms (external link)&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;State&lt;/code&gt; (keyword). Supports exact matching.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The created index consists of &lt;code&gt;5&lt;/code&gt; shards.
Note that the shard count cannot be changed after index creation, without a reindex.
See &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/size-your-shards.html&#34;&gt;this guide (external link)&lt;/a&gt; on shard sizing.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -X PUT &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://localhost:9200/stroom_test?pretty&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;Content-Type: application/json&amp;#39;&lt;/span&gt; -d&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;   {
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;      &amp;#34;settings&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;        &amp;#34;number_of_shards&amp;#34;: 5
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;      },
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;      &amp;#34;mappings&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;        &amp;#34;properties&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;          &amp;#34;StreamId&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;            &amp;#34;type&amp;#34;: &amp;#34;long&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;          },
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;          &amp;#34;EventId&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;            &amp;#34;type&amp;#34;: &amp;#34;long&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;          },
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;          &amp;#34;Name&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;            &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;            &amp;#34;fielddata&amp;#34;: true
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;          },
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;          &amp;#34;State&amp;#34;: {
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;            &amp;#34;type&amp;#34;: &amp;#34;text&amp;#34;,
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;            &amp;#34;fielddata&amp;#34;: true
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;          }
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;        }
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;      }
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;    }
&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After creating the index, you can add additional field mappings.
Note the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-put-mapping.html#updating-field-mappings&#34;&gt;limitations (external link)&lt;/a&gt; in doing so, particularly the fact that it will not cause existing documents to be re-indexed.
It is worthwhile to test index mappings on a subset of data before committing to indexing a large event feed, to ensure the resulting search experience meets your requirements.&lt;/p&gt;
&lt;h3 id=&#34;22-registering-the-index-in-stroom&#34;&gt;2.2. Registering the index in Stroom&lt;/h3&gt;
&lt;p&gt;This step creates an &lt;em&gt;Elasticsearch Index&lt;/em&gt; in the &lt;em&gt;Stroom Tree&lt;/em&gt; and tells Stroom how to connect to your Elasticsearch cluster
and index. Note that this process needs to be repeated for each index you create.&lt;/p&gt;
&lt;h4 id=&#34;steps&#34;&gt;Steps&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Right-click on the folder in the &lt;em&gt;Explorer Tree&lt;/em&gt; where you wish to create the index&lt;/li&gt;
&lt;li&gt;Select &lt;code&gt;New&lt;/code&gt; / &lt;code&gt;Elasticsearch Index&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enter a valid name for the index. It is a good idea to choose one that reflects either the feed name being indexed, or if
indexing multiple feeds, the nature of data they represent.&lt;/li&gt;
&lt;li&gt;In the index tab that just opened:
&lt;ol&gt;
&lt;li&gt;Select the &lt;code&gt;Settings&lt;/code&gt; tab&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;Index&lt;/code&gt; to the name of the index in Elasticsearch (e.g. &lt;code&gt;stroom_test&lt;/code&gt; from the previous example)&lt;/li&gt;
&lt;li&gt;Set the &lt;code&gt;Connection URLs&lt;/code&gt; to one or more Elasticsearch node URLs. If multiple, separate each URL with &lt;code&gt;,&lt;/code&gt;.
For example, a URL like &lt;code&gt;http://data-0.elastic:9200,http://data-1.elastic:9200&lt;/code&gt; will balance requests to two data nodes
within an Elasticsearch cluster. See &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-node.html&#34;&gt;this document&lt;/a&gt; for guidance on node roles.&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Test Connection&lt;/code&gt;. If the connection succeeds, and the index is found, a dialog is shown indicating
the test was successful. Otherwise, an error message is displayed.&lt;/li&gt;
&lt;li&gt;If the test succeeded, click the &lt;em&gt;save&lt;/em&gt; button in the top-left. The &lt;code&gt;Fields&lt;/code&gt; tab will now be populated with fields from
the Elasticsearch index.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;Note: The field mappings list is only updated when index settings are changed, or a Stroom indexing or search task begins.
The refresh button in the &lt;code&gt;Fields&lt;/code&gt; tab does not have any effect.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;23-setting-index-retention&#34;&gt;2.3. Setting index retention&lt;/h3&gt;
&lt;p&gt;As with Solr indexing, index document retention is determined by defining a Stroom query.&lt;/p&gt;
&lt;p&gt;Setting a retention query is optional and by default, documents will be retained in an index indefinitely.&lt;/p&gt;
&lt;p&gt;It is recommended for indices containing events spanning long periods of time, that &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/index-lifecycle-management.html&#34;&gt;Elasticsearch Index Lifecycle Management (external link)&lt;/a&gt;
be used instead. The capabilities provided, such as automatic rollover to warm or cold storage tiers, are well worth considering, especially in high-volume production clusters.&lt;/p&gt;
&lt;h4 id=&#34;considerations-when-implementing-ilm&#34;&gt;Considerations when implementing ILM&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;It is recommended that &lt;em&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/data-streams.html&#34;&gt;data streams&lt;/a&gt;&lt;/em&gt; are used when
indexing data. These allow easier rollover and work well with ILM policies. A &lt;em&gt;data stream&lt;/em&gt; is essentially a container for multiple date-based indices
and to a search client such as Stroom, appears and is searchable like a normal Elasticsearch index.&lt;/li&gt;
&lt;li&gt;Use of &lt;em&gt;data streams&lt;/em&gt; requires that a &lt;code&gt;@timestamp&lt;/code&gt; field of type &lt;code&gt;date&lt;/code&gt; be defined for each document (instead of say, &lt;code&gt;EventTime&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;Implementing ILM policies requires careful capacity planning, including anticipating search and retention requirements.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;24-creating-an-indexing-pipeline&#34;&gt;2.4. Creating an indexing pipeline&lt;/h3&gt;
&lt;p&gt;As with Lucene and Solr indexing pipelines, indexing data using Elasticsearch uses a pipeline filter.
This filter accepts &lt;code&gt;&amp;lt;record&amp;gt;&lt;/code&gt; elements and for each, sends a document to Elasticsearch for indexing.&lt;/p&gt;
&lt;p&gt;Each &lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; element contained within a &lt;code&gt;&amp;lt;record&amp;gt;&lt;/code&gt; sets the document field name and value. You should ensure the &lt;code&gt;name&lt;/code&gt; attribute
of each &lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; element exactly matches the mapping property of the Elasticsearch index you created.&lt;/p&gt;
&lt;h4 id=&#34;steps-1&#34;&gt;Steps&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Create a pipeline inheriting from the built-in &lt;code&gt;Indexing&lt;/code&gt; template.&lt;/li&gt;
&lt;li&gt;Modify the &lt;code&gt;xsltFilter&lt;/code&gt; pipeline stage to output the correct &lt;code&gt;&amp;lt;records&amp;gt;&lt;/code&gt; XML (see the &lt;a href=&#34;../../quick-start-guide/index/index.md&#34;&gt;Quick-Start Guide&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Delete the default &lt;code&gt;indexingFilter&lt;/code&gt; and in its place, create an &lt;code&gt;ElasticIndexingFilter&lt;/code&gt; (see screenshot below).&lt;/li&gt;
&lt;li&gt;Review and set the following properties:
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;batchSize&lt;/code&gt; (default: &lt;code&gt;10,000&lt;/code&gt;). Number of documents to send in a single request to the Elasticsearch &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html&#34;&gt;Bulk API (external link)&lt;/a&gt;.
Should usually be set to &lt;code&gt;1,000&lt;/code&gt; or more.
The higher the number, the more memory is required by both Stroom and Elasticsearch when sending or receiving the request.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;index&lt;/code&gt; (required). Set this to the target Elasticsearch index in the Stroom &lt;em&gt;Explorer Tree&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;refreshAfterEachBatch&lt;/code&gt; (default: &lt;code&gt;false&lt;/code&gt;). Refreshes the Elasticsearch index after each batch has finished processing.
This makes any documents ingested in the batch available for searching.
Unless search results are needed in near-real-time, it is recommended this be set to &lt;code&gt;false&lt;/code&gt; and the index refresh interval be set to an appropriate value.
See &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/tune-for-indexing-speed.html#_unset_or_increase_the_refresh_interval&#34;&gt;this document (external link)&lt;/a&gt; for guidance on optimising indexing performance.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;../resources/Elastic-Add-Pipeline-Filter.png&#34; alt=&#34;&#34; title=&#34;Elasticsearch indexing filter&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;25-creating-and-activating-a-stream-processor&#34;&gt;2.5. Creating and activating a stream processor&lt;/h3&gt;
&lt;p&gt;Follow the steps as in &lt;a href=&#34;../../quick-start-guide/index/index.md&#34;&gt;this guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;26-checking-data-has-been-indexed&#34;&gt;2.6. Checking data has been indexed&lt;/h3&gt;
&lt;p&gt;Query Elasticsearch, checking the fields you expect are there, and of the correct data type:&lt;/p&gt;
&lt;p&gt;The following query displays five results:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -X GET &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://localhost:9200/stroom_test/_search?size=5&amp;#34;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can also get an exact document count, to ensure this matches the number of events you are expecting:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -X GET &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://localhost:9200/stroom_test/_count&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For more information, see the Elasticsearch &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search.html&#34;&gt;Search API documentation (external link)&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;27-reindexing-data&#34;&gt;2.7. Reindexing data&lt;/h3&gt;
&lt;p&gt;By default, the original document values are stored in an Elasticsearch index and may be used later on to re-index data (such as when a change is made to field mappings).
This is done via the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-reindex.html&#34;&gt;Reindex API (external link)&lt;/a&gt;.
Provided these values have not changed, it would likely be more efficient to use this API to perform a re-index,
instead of processing data from scratch using a Stroom stream processor.&lt;/p&gt;
&lt;p&gt;On the other hand, if the content of documents being output to Elasticsearch has changed, the Elasticsearch index will need to be re-created
and the stream re-processed. Examples of where this would be required include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A new field is added to the indexing filter, which previously didn&amp;rsquo;t exist. That field needs to be searchable for all historical
events.&lt;/li&gt;
&lt;li&gt;A field is renamed&lt;/li&gt;
&lt;li&gt;A field data type is changed&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If a field is omitted from the indexing translation, there is no need for a re-index, unless you wish to reclaim the space
occupied by that field.&lt;/p&gt;
&lt;h4 id=&#34;reindexing-using-a-pipeline-processor&#34;&gt;Reindexing using a pipeline processor&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Delete the index. While it is possible to &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete-by-query.html&#34;&gt;delete by query (external link)&lt;/a&gt;, it is more efficient to drop the index.
Additionally, deleting by query doesn&amp;rsquo;t actually remove data from disk, until segments are merged.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -X DELETE &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;http://localhost:9200/stroom_test&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;Re-create the index (as shown earlier)&lt;/li&gt;
&lt;li&gt;Create a new pipeline processor to index the documents&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;3-searching&#34;&gt;3. Searching&lt;/h2&gt;
&lt;p&gt;Once indexed in Elasticsearch, you can search either using the &lt;em&gt;Stroom Dashboard&lt;/em&gt; user interface, or directly against
the Elasticsearch cluster.&lt;/p&gt;
&lt;p&gt;The advantage of using Stroom to search is that it allows access to the raw source data (i.e. it is not limited to what&amp;rsquo;s stored in the index).
It can also use &lt;em&gt;extraction pipelines&lt;/em&gt; to enrich search results for export in a table.&lt;/p&gt;
&lt;p&gt;Elasticsearch on the other hand, provides a rich &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search.html&#34;&gt;Search REST API (external link)&lt;/a&gt;
with powerful &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html&#34;&gt;aggregations&lt;/a&gt; that can be
used to generate reports and discover patterns and anomalies. It can also be readily queried using third-party tools.&lt;/p&gt;
&lt;h3 id=&#34;31-stroom&#34;&gt;3.1. Stroom&lt;/h3&gt;
&lt;p&gt;See the &lt;a href=&#34;../../quick-start-guide/dashboard/dashboard.md&#34;&gt;Dashboard&lt;/a&gt; page in the Quick-Start Guide.&lt;/p&gt;
&lt;p&gt;Instead of selecting a Lucene index, set the target &lt;em&gt;data source&lt;/em&gt; to the desired Elasticsearch index in the Stroom &lt;em&gt;Explorer Tree&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Once the target &lt;em&gt;data source&lt;/em&gt; has been set, the Dashboard can be used as with a Lucene or Solr index &lt;em&gt;data source&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;32-elasticsearch&#34;&gt;3.2. Elasticsearch&lt;/h3&gt;
&lt;p&gt;Elasticsearch queries can be performed directly against the cluster using the &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/search.html&#34;&gt;Search API (external link)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, there are tools that make search and discovery easier and more intuitive, like &lt;a href=&#34;https://www.elastic.co/kibana&#34;&gt;Kibana (external link)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;4-security&#34;&gt;4. Security&lt;/h2&gt;
&lt;p&gt;It is important to note that Elasticsearch data is not encrypted at rest, unless this feature is enabled and the relevant &lt;a href=&#34;https://www.elastic.co/subscriptions&#34;&gt;licensing tier (external link)&lt;/a&gt; is purchased.
Therefore, appropriate measures should be taken to control access to Elasticsearch user data at the file level.&lt;/p&gt;
&lt;p&gt;For production clusters, the Elasticsearch &lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/elasticsearch-security.html&#34;&gt;security guidelines (external link)&lt;/a&gt; should be followed, in order to control access and ensure requests are audited.&lt;/p&gt;
&lt;p&gt;You might want to consider implementing &lt;a href=&#34;https://www.elastic.co/guide/en/kibana/current/development-security.html&#34;&gt;role-based access control (external link)&lt;/a&gt;
to prevent unauthorised users of the native Elasticsearch API or tools like Kibana, from creating, modifying or deleting data within sensitive indices.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/search/searchfrombash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/search/searchfrombash/</guid>
      <description>
        
        
        &lt;h1 id=&#34;how-to-search-stroom-in-bash&#34;&gt;How to Search Stroom in bash&lt;/h1&gt;
&lt;p&gt;Stroom v6 introduced an API that allows a user to perform queries against Stroom resources such as indices and statistics.
This is a guide to show how to perform a Stroom Query directly from bash using Stroom v7.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Create an API Key for yourself, this will allow the API to authenticate as
you and run the query with your privileges.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a Dashboard that extracts the data you are interested in. You should
create a Query and Table.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download the JSON for your Query.
Press the download icon in the Query Pane
to generate a file containing the JSON.
Save the JSON to a file named &lt;em&gt;query.json&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use curl to send the query to Stroom.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#033&#34;&gt;API_KEY&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;&amp;lt;put your API Key here&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#033&#34;&gt;URI&lt;/span&gt;&lt;span style=&#34;color:#555&#34;&gt;=&lt;/span&gt;stroom.host/api/searchable/v2/search
curl -s --request POST &lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;URL&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt; -o response.out -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Authorization:Bearer &lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#033&#34;&gt;API_KEY&lt;/span&gt;&lt;span style=&#34;color:#a00&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;&lt;/span&gt; -H &lt;span style=&#34;color:#c30&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; --data-binary @query.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;The query response should be in a file named response.out.&lt;/li&gt;
&lt;li&gt;Optional step: reformat the response to csv using &lt;code&gt;jq&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat response.out | jq &lt;span style=&#34;color:#c30&#34;&gt;&amp;#39;.results[0].rows[].values | @csv&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: </title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/search/solr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/search/solr/</guid>
      <description>
        
        
        &lt;h1 id=&#34;using-solr-with-stroom&#34;&gt;Using Solr with Stroom&lt;/h1&gt;
&lt;p&gt;This document will show how to use Solr from within Stroom.
A single Solr node will be used running in a docker container.&lt;/p&gt;
&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You are familiar with Lucene indexing within Stroom&lt;/li&gt;
&lt;li&gt;You have some data to index&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;points-to-note&#34;&gt;Points to note&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;A Solr core is the home for exactly one Stroom index.&lt;/li&gt;
&lt;li&gt;Cores must initially be created in Solr.&lt;/li&gt;
&lt;li&gt;It is good practice to name your Solr core the same as your Stroom Index.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;method&#34;&gt;Method&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Start a docker container for a single solr node.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run -d -p 8983:8983 --name my_solr solr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;Check your Solr node. Point your browser at http://yourSolrHost:8983&lt;/li&gt;
&lt;li&gt;Create a core in Solr using the CLI.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f0f3f3;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker &lt;span style=&#34;color:#366&#34;&gt;exec&lt;/span&gt; -it my_solr solr create_core -c test_index
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;Create a SolrIndex in Stroom
&lt;img src=&#34;../resources/v7/HT_SimpleSolr_NewSolrIndex.png&#34; alt=&#34;&amp;ldquo;New Solr Index&amp;rdquo;&#34; title=&#34;New Solr Index&#34;&gt;&lt;/li&gt;
&lt;li&gt;Update settings for your new Solr Index in Stroom then press &amp;ldquo;Test Connection&amp;rdquo;.
If successful then press Save
Note the &amp;ldquo;Solr URL&amp;rdquo; field is a reference to the newly created Solr core.
&lt;img src=&#34;../resources/v7/HT_SimpleSolr_Settings.png&#34; alt=&#34;&amp;ldquo;Solr Index Settings&amp;rdquo;&#34; title=&#34;Solr Index Settings&#34;&gt;&lt;/li&gt;
&lt;li&gt;Add some Index fields.
e.g.EventTime, UserId&lt;/li&gt;
&lt;li&gt;Retention is different in Solr, you must specify an expression that matches data that can be deleted.
&lt;img src=&#34;../resources/v7/HT_SimpleSolr_Retention.png&#34; alt=&#34;&amp;ldquo;Solr Retention&amp;rdquo;&#34; title=&#34;Solr Retention&#34;&gt;&lt;/li&gt;
&lt;li&gt;Your Solr Index can now be used as per a Stroom Lucene Index.
However, your Indexing pipeline must use a SolrIndexingFilter instead of an IndexingFilter.&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
  </channel>
</rss>
