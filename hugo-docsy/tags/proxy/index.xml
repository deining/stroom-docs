<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stroom â€“ proxy</title>
    <link>https://gchq.github.io/stroom-docs/hugo-docsy/tags/proxy/</link>
    <description>Recent content in proxy on Stroom</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 12 Jul 2021 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://gchq.github.io/stroom-docs/hugo-docsy/tags/proxy/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Running with docker</title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/proxy/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/proxy/docker/</guid>
      <description>
        
        
        
&lt;div class=&#34;alert alert-warning&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;TODO&lt;/h4&gt;

    This document is out of date and needs updating to refer to the stroom-proxy docker stack.

&lt;/div&gt;

&lt;h2 id=&#34;clone-and-build-_stroom-proxy_&#34;&gt;Clone and build &lt;em&gt;stroom-proxy&lt;/em&gt;&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/gchq/stroom-proxy.git
mvn clean install
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;unpack-the-stroom-proxy-distribution-in-preparation-for-building-the-docker-iamge&#34;&gt;Unpack the &lt;code&gt;stroom-proxy&lt;/code&gt; distribution in preparation for building the docker iamge&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd stroom-proxy-distribution
unzip target/stroom-proxy-distribution-&amp;lt;version&amp;gt;-bin.zip -d target
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;building-and-running-the-docker-image&#34;&gt;Building and running the docker image&lt;/h2&gt;
&lt;p&gt;Here you need to say where you want data to be sent by &lt;code&gt;stroom-proxy&lt;/code&gt;.
This is done using a &lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/build/#/set-build-time-variables-build-arg&#34;&gt;&lt;code&gt;--build-arg&lt;/code&gt; (external link)&lt;/a&gt; parameter of &lt;code&gt;STROOM_PROXY_TYPE&lt;/code&gt;.
These values can be &lt;code&gt;forward&lt;/code&gt;, &lt;code&gt;store&lt;/code&gt;, or &lt;code&gt;store_nodb&lt;/code&gt;. See the &lt;em&gt;stroom-proxy&lt;/em&gt; section in the &lt;a href=&#34;https://github.com/gchq/stroom-docs/blob/master/SUMMARY.md&#34;&gt;stroom documentation (external link)&lt;/a&gt; documentation for more details about these options.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker stop stroom-proxy
docker rm stroom-proxy
docker rmi stroom-proxy

docker build --build-arg STROOM_PROXY_TYPE=store_nodb --tag=stroom-proxy:latest target/stroom-proxy
docker run -p 8080:8080 --name=stroom-proxy stroom-proxy
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Stroom Proxy Installation</title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/proxy/install/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/proxy/install/</guid>
      <description>
        
        
        
&lt;div class=&#34;pageinfo pageinfo-danger&#34;&gt;
&lt;h4 class=&#34;text-danger alert-heading&#34;&gt;Warning&lt;/h4&gt;
&lt;p&gt;This document refers to v5.&lt;/p&gt;

&lt;/div&gt;


&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Linux Server&amp;rsquo;s with at least 4GB RAM&lt;/li&gt;
&lt;li&gt;Install files stroom-proxy-X-Y-Z-distribution.zip, stroom-deploy-X-Y-Z-distribution.zip&lt;/li&gt;
&lt;li&gt;Temporarily allow port 9080 if not relying on Apache Forwarding (see below)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;processing-user-setup&#34;&gt;Processing User Setup&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&#34;../install-guide/setup/processing-user-setup.md&#34;&gt;Processing User Setup&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;installing-stroom-proxy&#34;&gt;Installing Stroom Proxy&lt;/h2&gt;
&lt;p&gt;As the processing user unpack the stroom-proxy-X-Y-Z-distribution.zip installation files
in the processing users home directory.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;unzip stroom-proxy-X-Y-Z-distribution.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Stroom Proxy can be setup as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;forward - as an aggregation point to store and forwarding onto another Stroom or Stroom / Proxy&lt;/li&gt;
&lt;li&gt;store - to front Stroom for data ingest&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;stroom-proxy---forward&#34;&gt;Stroom Proxy - forward&lt;/h3&gt;
&lt;p&gt;In forward mode you need to know the server address that data is being sent onto.
Run the setup script to capture the basic settings required to run Stroom Proxy in forward mode.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;@@ NODE @@ - Each Stroom instance in the cluster needs a unique name, if this is a reinstall ensure you use the previous deployment.
&lt;strong&gt;This name needs match the name used in your worker.properties (e.g. &amp;lsquo;node1&amp;rsquo; in the case &amp;lsquo;node1.my.org&amp;rsquo;)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;@@ PORT PREFIX @@ - By default Stroom Proxy will run on port 9080&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[stroomuser@node1 ~]$ ./stroom-proxy/bin/setup.sh forward

[stroomuser@dev1 ~]$ ./stroom-proxy/bin/setup.sh forward





...

Parameters
==========

@@NODE@@           : Unique node name for install [node1                                                     ] : node1
@@PORT_PREFIX@@    : HTTP prefix to use           [90                                                        ] : 90
@@REPO_DIR@@       : Stroom Proxy Repository Dir     [/stroomdata/stroom-proxy                                        ] : /home/stroomuser/stroom-proxy-repo
@@FORWARD_SERVER@@ : Server to forward data on to [hostname                                                  ] : audit.my.org
@@JAVA_OPTS@@      : Optional tomcat JVM settings [&amp;quot;-Xms512m -Xmx1g&amp;quot;                                         ] :

...
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;stroom-proxy---store&#34;&gt;Stroom Proxy - store&lt;/h3&gt;
&lt;p&gt;In store mode you need to know the mysql details to validate incoming data with.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[stroomuser@node1 ~]$ ./stroom-proxy-app/bin/setup.sh store

...

@@NODE@@           : Unique node name for install            [node                                                      ] :
@@PORT_PREFIX@@    : HTTP prefix to use                      [90                                                        ] : 72
@@REPO_DIR@@       : Stroom Proxy Repository Dir                [/stroomdata/stroom-proxy                                        ] : /home/stroomuser/stroom-proxy-repo-2
@@JDBC_CLASSNAME@@ : JDBC class name                         [com.mysql.jdbc.Driver                                     ] :
@@JDBC_URL@@       : JDBC URL (jdbc:mysql://[HOST]/[DBNAME]) [jdbc:mysql://localhost/stroom                                ] :
@@DB_USERNAME@@    : Database username                       [                                                          ] : stroomuser
@@DB_PASSWORD@@    : Database password                       [                                                          ] :
@@JAVA_OPTS@@      : Optional tomcat JVM settings            [&amp;quot;-Xms512m -Xmx1g&amp;quot;                                         ] :
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;install-check&#34;&gt;Install Check&lt;/h3&gt;
&lt;p&gt;Start the installed instance:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;./stroom-deploy/start.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Inspect the logs:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;tail -f stroom-proxy-app/instance/logs/stroom.log
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;stroom-proxy-properties&#34;&gt;Stroom Proxy Properties&lt;/h3&gt;
&lt;p&gt;The following properties can be configured in the stroom.properties file.&lt;/p&gt;
&lt;p&gt;TODO - Could do with a column indicating which proxy mode these properties apply to, e.g. store/forward&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;repoDir&lt;/td&gt;
&lt;td&gt;Optional Repository DIR. If set any incoming request will be written to the file system.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;logRequest&lt;/td&gt;
&lt;td&gt;Optional log line with header attributes output as defined by this property&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bufferSize&lt;/td&gt;
&lt;td&gt;Override default (8192) JDK buffer size to use&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwardUrl&lt;/td&gt;
&lt;td&gt;Optional The URL&amp;rsquo;s to forward onto This is pass-through mode if repoDir is not set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwardThreadCount&lt;/td&gt;
&lt;td&gt;Number of threads to forward with&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwardTimeoutMs&lt;/td&gt;
&lt;td&gt;Time out when forwarding&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwardChunkSize&lt;/td&gt;
&lt;td&gt;Chunk size to use over http(s) if not set requires buffer to be fully loaded into memory&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;rollCron&lt;/td&gt;
&lt;td&gt;Interval to roll any writing repositories.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;readCron&lt;/td&gt;
&lt;td&gt;Cron style interval (e.g. every hour &amp;lsquo;0 * *&amp;rsquo;, every half hour &amp;lsquo;0,30 * *&#39;) to read any ready repositories (if not defined we read all the time).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;maxAggregation&lt;/td&gt;
&lt;td&gt;Aggregate size to break at when building an aggregate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zipFilenameDelimiter&lt;/td&gt;
&lt;td&gt;The delimiter used to separate the id ihe zip filename from the templated part&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zipFilenameTemplate&lt;/td&gt;
&lt;td&gt;A template for naming the zip files in the repository where files will be named nnn!zipFilenameTemplate.zip where nnn is the id prefix, ! is the configurable delimiter and zipFilenameTemplate will be something like &amp;lsquo;${feed}!${headerMapKey1}!${headerMapKey2}&amp;rsquo;. The naem of each variable must exactly match a key in the meta data else it will resolve to &amp;lsquo;&amp;rsquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;requestDelayMs&lt;/td&gt;
&lt;td&gt;Sleep time used to aid with testing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forwardDelayMs&lt;/td&gt;
&lt;td&gt;Debug setting to add a delay&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbRequestValidatorContext&lt;/td&gt;
&lt;td&gt;Database Feed Validator - Data base JDBC context&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbRequestValidatorJndiName&lt;/td&gt;
&lt;td&gt;Database Feed Validator - Data base JDBC JNDI name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbRequestValidatorFeedQuery&lt;/td&gt;
&lt;td&gt;Database Feed Validator - SQL to check feed status&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbRequestValidatorAuthQuery&lt;/td&gt;
&lt;td&gt;Database Feed Validator - SQL to check authorisation required&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;remotingUrl&lt;/td&gt;
&lt;td&gt;Url to use for remoting services&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;remotingReadTimeoutMs&lt;/td&gt;
&lt;td&gt;Change from the default JVM settings.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;remotingConnectTimeoutMs&lt;/td&gt;
&lt;td&gt;Change from the default JVM settings.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;maxStreamSize&lt;/td&gt;
&lt;td&gt;Stream size to break at when building an aggregate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;maxFileScan&lt;/td&gt;
&lt;td&gt;Max number of files to scan over during forwarding.  Once this limit is it it will wait until next read interval&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cacheTimeToIdleSeconds&lt;/td&gt;
&lt;td&gt;Time to idle settings to used for validating feed information&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cacheTimeToLiveSeconds&lt;/td&gt;
&lt;td&gt;Time to live settings to used for validating feed information&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;apache-forwarding&#34;&gt;Apache Forwarding&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&#34;../install-guide/setup/apache-forwarding.md&#34;&gt;Apache Forwarding&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;java-key-store-setup&#34;&gt;Java Key Store Setup&lt;/h2&gt;
&lt;p&gt;If you require that Stroom Proxy communicates over 2-way https you will need to set up Java Key Stores.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;../install-guide/setup/java-key-store-setup.md&#34;&gt;Java Key Store Setup&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;securing-stroom&#34;&gt;Securing Stroom&lt;/h2&gt;
&lt;p&gt;See &lt;a href=&#34;../install-guide/setup/securing-stroom.md&#34;&gt;Securing Stroom&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Stroom Proxy</title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/proxy/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Docs: Installation of Stroom Proxy</title>
      <link>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installproxyhowto/</link>
      <pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://gchq.github.io/stroom-docs/hugo-docsy/docs/howtos/install/installproxyhowto/</guid>
      <description>
        
        
        &lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;
&lt;p&gt;The following assumptions are used in this document.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the user has reasonable RHEL/Centos System administration skills.&lt;/li&gt;
&lt;li&gt;installation is on a fully patched minimal Centos 7.3 instance.&lt;/li&gt;
&lt;li&gt;the Stroom database has been created and resides on the host &lt;code&gt;stroomdb0.strmdev00.org&lt;/code&gt; listening on port 3307.&lt;/li&gt;
&lt;li&gt;the Stroom database user is &lt;code&gt;stroomuser&lt;/code&gt; with a password of &lt;code&gt;Stroompassword1@&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;the application user &lt;code&gt;stroomuser&lt;/code&gt; has been created.&lt;/li&gt;
&lt;li&gt;the user is or has deployed the two node Stroom cluster described &lt;a href=&#34;InstallHowTo.md#storage-scenario&#34; title=&#34;HOWTO Storage Scenario&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;the user has set up the Stroom processing user as described &lt;a href=&#34;InstallProcessingUserSetupHowTo.md&#34; title=&#34;Processing User Setup&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;the prerequisite software has been installed.&lt;/li&gt;
&lt;li&gt;when a screen capture is documented, data entry is identified by the data surrounded by &amp;lsquo;&amp;lt;&lt;strong&gt;&amp;rsquo; &amp;lsquo;&lt;/strong&gt;&amp;gt;&amp;rsquo; . This excludes enter/return presses.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;confirm-prerequisite-software-installation&#34;&gt;Confirm Prerequisite Software Installation&lt;/h2&gt;
&lt;p&gt;The following command will ensure the prerequisite software has been deployed&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel policycoreutils-python unzip zip
sudo yum -y install mariadb
or
sudo yum -y install mysql-community-client
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that we do &lt;strong&gt;NOT&lt;/strong&gt; need the database client software for a Forwarding or Standalone proxy.&lt;/p&gt;
&lt;h2 id=&#34;get-the-software&#34;&gt;Get the Software&lt;/h2&gt;
&lt;p&gt;The following will gain the identified, in this case release &lt;code&gt;5.1-beta.10&lt;/code&gt;, Stroom Application software release from github, then deploy it. You should regularly monitor the site for newer releases.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo -i -u stroomuser
Prx=v5.1-beta.10
wget https://github.com/gchq/stroom-proxy/releases/download/${Prx}/stroom-proxy-distribution-${Prx}.zip
unzip stroom-proxy-distribution-${Prx}.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;configure-the-software&#34;&gt;Configure the Software&lt;/h2&gt;
&lt;p&gt;There are three different types of Stroom Proxy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Store&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;em&gt;store&lt;/em&gt; proxy accepts batches of events, as files. It will validate the batch with the database then store the batches as files in a configured directory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Store_NoDB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;em&gt;store_nodb&lt;/em&gt; proxy accepts batches of events, as files. It has no connectivity to the database, so it assumes all batches are valid, so it stores the batches as files in a configured directory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forwarding&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A &lt;em&gt;forwarding&lt;/em&gt; proxy accepts batches of events, as files. It has indirect connectivity to the database via the destination proxy, so it validates the batches then stores the batches as files in a configured directory until they are periodically forwarded to the configured destination Stroom proxy.&lt;/p&gt;
&lt;p&gt;We will demonstrate the installation of each.&lt;/p&gt;
&lt;h3 id=&#34;store-proxy-configuration&#34;&gt;Store Proxy Configuration&lt;/h3&gt;
&lt;p&gt;In our &lt;em&gt;Store&lt;/em&gt; Proxy description below, we will use the multi node deployment scenario. That is we are deploying the &lt;em&gt;Store&lt;/em&gt; proxy on multiple Stroom nodes (stroomp00, stroomp01) and we have configured our storage as per the &lt;a href=&#34;InstallHowTo.md#storage-scenario&#34; title=&#34;HOWTO Storage Scenario&#34;&gt;Storage Scenario&lt;/a&gt; which means the directories to install the inbound batches of data are &lt;code&gt;/stroomdata/stroom-working-p00/proxy&lt;/code&gt; and &lt;code&gt;/stroomdata/stroom-working-p01/proxy&lt;/code&gt; depending on the node.&lt;/p&gt;
&lt;p&gt;To install a &lt;em&gt;Store&lt;/em&gt; proxy, we run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stroom-proxy/bin/setup.sh store
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;during which one is prompted for a number of configuration settings. Use the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NODE to be the hostname (not FQDN) of your host (i.e. &#39;stroomp00&#39; or &#39;stroomp01&#39; depending on the node we are installing on)
PORT_PREFIX should use the default, just press return
REPO_DIR should be set to &#39;/stroomdata/stroom-working-p00/proxy&#39; or &#39;/stroomdata/stroom-working-p01/proxy&#39; depending on the node we are installing on
REPO_FORMAT can be left as the default, just press return
JDBC_CLASSNAME should use the default, just press return
JDBC_URL should be set to &#39;jdbc:mysql://stroomdb0.strmdev00.org:3307/stroom&#39;
DB_USERNAME should be our processing user, &#39;stroomuser&#39;
DB_PASSWORD should be the one we set when creating the stroom database, that is &#39;Stroompassword1@&#39;
JAVA_OPTS can use the defaults, but ensure you have sufficient memory, either change or accept the default
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, the script will configure the proxy. There should be no errors, but review the output.
If you make a mistake in the above, just re-run the script.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; The selection of the &lt;code&gt;REPO_DIR&lt;/code&gt; above and the setting of the &lt;code&gt;STROOM_TMP&lt;/code&gt; environment variable &lt;a href=&#34;InstallProcessingUserSetupHowTo.md&#34; title=&#34;Processing User Setup&#34;&gt;earlier&lt;/a&gt; ensure that not only inbound files are placed in the &lt;code&gt;REPO_DIR&lt;/code&gt; location but the Stroom Application itself will access the same directory when it aggregates inbound data for ingest in it&amp;rsquo;s proxy aggregation threads.&lt;/p&gt;
&lt;h3 id=&#34;forwarding-proxy-configuration&#34;&gt;Forwarding Proxy Configuration&lt;/h3&gt;
&lt;p&gt;In our &lt;em&gt;Forwarding&lt;/em&gt; Proxy description below, we will deploy on a host named &lt;code&gt;stroomfp0&lt;/code&gt; and it will store the files in &lt;code&gt;/stroomdata/stroom-working-fp0/proxy&lt;/code&gt;. Remember, we are being consistent with our Storage hierarchy to make documentation and scripting simpler. Our destination host to periodically forward the files to will be &lt;code&gt;stroomp.strmdev00.org&lt;/code&gt; (the CNAME for &lt;code&gt;stroomp00.strmdev00.org&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;To install a &lt;em&gt;Forwarding&lt;/em&gt; proxy, we run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stroom-proxy/bin/setup.sh forward
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;during which one is prompted for a number of configuration settings. Use the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NODE to be the hostname (not FQDN) of your host (i.e. &#39;stroomfp0&#39; in our example)
PORT_PREFIX should use the default, just press return
REPO_DIR should be set to &#39;/stroomdata/stroom-working-fp0/proxy&#39; which we created earlier.
REPO_FORMAT can be left as the default, just press return
FORWARD_SERVER should be set to our stroom server. (i.e. &#39;stroomp.strmdev00.org&#39; in our example)
JAVA_OPTS can use the defaults, but ensure you have sufficient memory, either change or accept the default
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, the script will configure the proxy. There should be no errors, but review the output.&lt;/p&gt;
&lt;h3 id=&#34;store-no-database-proxy-configuration&#34;&gt;Store No Database Proxy Configuration&lt;/h3&gt;
&lt;p&gt;In our &lt;em&gt;Store_NoDB&lt;/em&gt; Proxy description below, we will deploy on a host named &lt;code&gt;stroomsap0&lt;/code&gt; and it will store the files in &lt;code&gt;/stroomdata/stroom-working-sap0/proxy&lt;/code&gt;. Remember, we are being consistent with our Storage hierarchy to make documentation and scripting simpler.&lt;/p&gt;
&lt;p&gt;To install a &lt;em&gt;Store_NoDB&lt;/em&gt; proxy, we run&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stroom-proxy/bin/setup.sh store_nodb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;during which one is prompted for a number of configuration settings. Use the following&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NODE to be the hostname (not FQDN) of your host (i.e. &#39;stroomsap0&#39; in our example)
PORT_PREFIX should use the default, just press return
REPO_DIR should be set to &#39;/stroomdata/stroom-working-sap0/proxy&#39; which we created earlier.
REPO_FORMAT can be left as the default, just press return
JAVA_OPTS can use the defaults, but ensure you have sufficient memory, either change or accept the default
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, the script will configure the proxy. There should be no errors, but review the output.&lt;/p&gt;
&lt;h2 id=&#34;apachemod_jk-change&#34;&gt;Apache/Mod_JK change&lt;/h2&gt;
&lt;p&gt;For all proxy deployments, if we are using Apache&amp;rsquo;s mod_jk then we need to ensure the proxy&amp;rsquo;s AJP connector specifies a 64K packetSize. View the file &lt;code&gt;stroom-proxy/instance/conf/server.xml&lt;/code&gt; to ensure the Connector element for the AJP protocol has a packetSize attribute of &lt;code&gt;65536&lt;/code&gt;. For example,&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;grep AJP stroom-proxy/instance/conf/server.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;shows&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Connector port=&amp;quot;9009&amp;quot; protocol=&amp;quot;AJP/1.3&amp;quot; connectionTimeout=&amp;quot;20000&amp;quot; redirectPort=&amp;quot;8443&amp;quot; maxThreads=&amp;quot;200&amp;quot; packetSize=&amp;quot;65536&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This check is required for earlier releases of the Stroom Proxy. Releases since &lt;code&gt;v5.1-beta.4&lt;/code&gt; have set the AJP packetSize.&lt;/p&gt;
&lt;h2 id=&#34;start-the-proxy-service&#34;&gt;Start the Proxy Service&lt;/h2&gt;
&lt;p&gt;We can now manually start our proxy service. Do so as the &lt;code&gt;stroomuser&lt;/code&gt; with the command&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;stroom-proxy/bin/start.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now monitor the directory &lt;code&gt;stroom-proxy/instance/logs&lt;/code&gt; for any errors. Initially you will see the log files &lt;code&gt;localhost_access_log.YYYY-MM-DD.txt&lt;/code&gt; and &lt;code&gt;catalina.out&lt;/code&gt;. Check them for errors and correct (or pose a question to this arena).
The context path and unknown version warnings in &lt;code&gt;catalina.out&lt;/code&gt; can be ignored.&lt;/p&gt;
&lt;p&gt;Eventually (about 60 seconds) the log file &lt;code&gt;stroom-proxy/instance/logs/stroom.log&lt;/code&gt; will appear. Again check it for errors.
The proxy will have completely started when you see the messages&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INFO  [localhost-startStop-1] spring.StroomBeanLifeCycleReloadableContextBeanProcessor (StroomBeanLifeCycleReloadableContextBeanProcessor.java:109) - ** proxyContext 0 START COMPLETE **
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INFO  [localhost-startStop-1] spring.StroomBeanLifeCycleReloadableContextBeanProcessor (StroomBeanLifeCycleReloadableContextBeanProcessor.java:109) - ** webContext 0 START COMPLETE **
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you leave it for a while you will eventually see cyclic (10 minute cycle) messages of the form&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;INFO  [Repository Reader Thread 1] repo.ProxyRepositoryReader (ProxyRepositoryReader.java:170) - run() - Cron Match at YYYY-MM-DD ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If a proxy takes too long to start, you should read the section on &lt;a href=&#34;InstallHowTo.md#entropy-issues-in-virtual-environments&#34; title=&#34;Entropy Issues in Virtual environments&#34;&gt;Entropy Issues&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;proxy-repository-format&#34;&gt;Proxy Repository Format&lt;/h2&gt;
&lt;p&gt;A Stroom Proxy stores inbound files in a hierarchical file system whose root is supplied during the proxy setup (&lt;code&gt;REPO_DIR&lt;/code&gt;) and as files arrive they are given a &lt;em&gt;repository id&lt;/em&gt; that is a one-up number starting at one (1). The files are stored in a specific &lt;em&gt;repository format&lt;/em&gt;.
The default template is &lt;code&gt;${pathId}/${id}&lt;/code&gt; and this pattern will produce the following output files under &lt;code&gt;REPO_DIR&lt;/code&gt; for the given repository id&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Repository Id&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;FilePath&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;000.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;100&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;100.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1000&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;001/001000.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;10000&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;010/010000.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;100000&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;100/100000.zip&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Since version v5.1-beta.4, this template can be specified during proxy setup via the entry to the &lt;code&gt;Stroom Proxy Repository Format&lt;/code&gt; prompt&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;...
@@REPO_FORMAT@@ : Stroom Proxy Repository Format [${pathId}/${id}] &amp;gt; 
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The template uses replacement variables to form the file path. As indicated above, the default template is &lt;code&gt;${pathId}/${id}&lt;/code&gt; where &lt;code&gt;${pathId}&lt;/code&gt; is the automatically generated directory for a given &lt;em&gt;repository id&lt;/em&gt; and &lt;code&gt;${id}&lt;/code&gt; is the &lt;em&gt;repository id&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Other replacement variables can be used to in the template including http header meta data parameters (e.g. &amp;lsquo;${feed}&#39;) and time based parameters (e.g. &amp;lsquo;${year}&#39;). Replacement variables that cannot be resolved will be output as &amp;lsquo;_&amp;rsquo;. You must ensure that all templates include the &amp;lsquo;${id}&amp;rsquo; replacement variable at the start of the file name, failure to do this will result in an invalid repository.&lt;/p&gt;
&lt;p&gt;Available time based parameters are based on the file&amp;rsquo;s time of processing and are zero filled (excluding &lt;code&gt;ms&lt;/code&gt;).&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Parameter&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;year&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;four digit year&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;month&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit month&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;day&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit day&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;hour&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit hour&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;minute&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit minute&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;second&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;two digit second&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;millis&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;three digit milliseconds value&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ms&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;milliseconds since Epoch value&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;proxy-repository-template-examples&#34;&gt;Proxy Repository Template Examples&lt;/h3&gt;
&lt;p&gt;For each of the following templates applied to a Store NoDB Proxy, the resultant proxy directory tree is shown after three posts were sent to the test feed &lt;code&gt;TEST-FEED-V1_0&lt;/code&gt; and two posts to the test feed &lt;code&gt;FEED-NOVALUE-V9_0&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;example-a---the-default---pathidid&#34;&gt;Example A - The default - &lt;code&gt;${pathId}/${id}&lt;/code&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[stroomuser@stroomsap0 ~]$ find /stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/001.zip
/stroomdata/stroom-working-sap0/proxy/002.zip
/stroomdata/stroom-working-sap0/proxy/003.zip
/stroomdata/stroom-working-sap0/proxy/004.zip
/stroomdata/stroom-working-sap0/proxy/005.zip
[stroomuser@stroomsap0 ~]$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;example-b---a-feed-orientated-structure---feedyearmonthdaypathidid&#34;&gt;Example B - A feed orientated structure - &lt;code&gt;${feed}/${year}/${month}/${day}/${pathId}/${id}&lt;/code&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[stroomuser@stroomsap0 ~]$ find /stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07/23
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07/23/001.zip
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07/23/002.zip
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/2017/07/23/003.zip
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017/07
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017/07/23
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017/07/23/004.zip
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/2017/07/23/005.zip
[stroomuser@stroomsap0 ~]$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;example-c---a-date-orientated-structure---yearmonthdaypathidid&#34;&gt;Example C - A date orientated structure - &lt;code&gt;${year}/${month}/${day}/${pathId}/${id}&lt;/code&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[stroomuser@stroomsap0 ~]$ find /stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/2017
/stroomdata/stroom-working-sap0/proxy/2017/07
/stroomdata/stroom-working-sap0/proxy/2017/07/23
/stroomdata/stroom-working-sap0/proxy/2017/07/23/001.zip
/stroomdata/stroom-working-sap0/proxy/2017/07/23/002.zip
/stroomdata/stroom-working-sap0/proxy/2017/07/23/003.zip
/stroomdata/stroom-working-sap0/proxy/2017/07/23/004.zip
/stroomdata/stroom-working-sap0/proxy/2017/07/23/005.zip
[stroomuser@stroomsap0 ~]$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;example-d---a-feed-orientated-structure-but-with-a-bad-parameter---feedbadparamdaypathidid&#34;&gt;Example D - A feed orientated structure, but with a bad parameter - &lt;code&gt;${feed}/${badparam}/${day}/${pathId}/${id}&lt;/code&gt;&lt;/h4&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;[stroomuser@stroomsap0 ~]$ find /stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_/23
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_/23/001.zip
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_/23/002.zip
/stroomdata/stroom-working-sap0/proxy/TEST-FEED-V1_0/_/23/003.zip
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/_
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/_/23
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/_/23/004.zip
/stroomdata/stroom-working-sap0/proxy/FEED-NOVALUE-V9_0/_/23/005.zip
[stroomuser@stroomsap0 ~]$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and one would also see a warning for each post in the proxy&amp;rsquo;s log file of the form&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WARN  [ajp-apr-9009-exec-4] repo.StroomFileNameUtil (StroomFileNameUtil.java:133) - Unused variables found: [badparam]
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
  </channel>
</rss>
